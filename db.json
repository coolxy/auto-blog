{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/3-hexo/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/mobile.styl","path":"css/mobile.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","path":"img/article-list-background.jpeg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/brown-papersq.png","path":"img/brown-papersq.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/gov.png","path":"img/gov.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/school-book.png","path":"img/school-book.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/weixin.jpg","path":"img/weixin.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/gitment.js","path":"js/gitment.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/gitalk.js","path":"js/gitalk.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/iconfont.js","path":"js/iconfont.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","path":"js/jquery.pjax.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/titleTip.js","path":"js/titleTip.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","path":"css/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","path":"css/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","path":"css/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","path":"css/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","path":"css/fonts/iconfont.woff2","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/selection.json","path":"css/fonts/selection.json","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","path":"css/hl_theme/atom-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","path":"css/hl_theme/atom-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","path":"css/hl_theme/brown-paper.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","path":"css/hl_theme/darcula.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","path":"css/hl_theme/github-gist.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","path":"css/hl_theme/github.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","path":"css/hl_theme/gruvbox-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","path":"css/hl_theme/gruvbox-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","path":"css/hl_theme/kimbie-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","path":"css/hl_theme/kimbie-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","path":"css/hl_theme/railscasts.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","path":"css/hl_theme/rainbow.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","path":"css/hl_theme/school-book.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","path":"css/hl_theme/sublime.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","path":"css/hl_theme/sunburst.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","path":"css/hl_theme/zenbum.styl","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"da9ecd70f0a5610e4fe017b5e8b3eedafe29b83d","modified":1614862908811},{"_id":"themes/3-hexo/.DS_Store","hash":"0770f9d42bfdd8d420de48fed463015e001cf579","modified":1613979590000},{"_id":"themes/3-hexo/.gitignore","hash":"86a50fa08e69cab561892aa5edef24f9081bbde1","modified":1613979590000},{"_id":"themes/3-hexo/LICENSE","hash":"b04140c5f682db2b300428f97bb164fd7f5f18bd","modified":1613979590000},{"_id":"themes/3-hexo/README.md","hash":"d2c42534ceabcb7cd2e58ed994bf7d6f734d1f3b","modified":1613979590000},{"_id":"themes/3-hexo/_config.yml","hash":"3843722ab8f0049fb52f71b39a676cd5d1d6f965","modified":1614875483754},{"_id":"themes/3-hexo/languages/en.yml","hash":"53ae29ae1237fc7822df85a6d2f8da6f0078625e","modified":1613979590000},{"_id":"themes/3-hexo/languages/zh-CN.yml","hash":"d2c6d86fe2ff03e6ee9bbc16dff8efe5b47ac297","modified":1613979590000},{"_id":"themes/3-hexo/layout/index.ejs","hash":"27ea3dac053d501b79bbef5117b4f3aff063d8cd","modified":1613979590000},{"_id":"themes/3-hexo/layout/indexs.md","hash":"6884dbd41281c3d51af550b9356c554cf3476615","modified":1614768361149},{"_id":"themes/3-hexo/layout/post.ejs","hash":"4abd16c0f5e3f51103d23b73710d695dc7fdc5d2","modified":1613979590000},{"_id":"themes/3-hexo/source/.DS_Store","hash":"fdcc907c46e093a14b153c5dc8c038461997ed3c","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"0ebb17d001cb7bb7606c616c380049a2e7124496","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"516844c4a0e13d6773f6029849f51c59613b6f69","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"5507b4dfab2032345e012a0c5356f63b01395157","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"f66939a8c9d5258948b47842b8b4495e6ec45988","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"bc94eee27701b67d238f328737b578e8270989eb","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"ed479aa9affee3b02a76da06de45a7c40a97a706","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"d11092791e5c140ff81f2aefa0d1b051f403239d","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"a734c26d86da6697003ed27672c1b9b82b216c82","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"d0b84370ca81c3baa02a05613ff040003acd2985","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"c2e5cef2377884cd79e5f686fe4f74b082744306","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"8a9e93f9cbe80763264018290da0b14b4bbe8ac5","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"0e7de3e614ca49fe1c7420f233bea22e02641272","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"295f5d00a69c434d63db6e4576535ac5b4c26eac","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"3cf8ba0c6112dfa8089603b8df3e31f70a272715","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"6406251dabda66ef686d4c15edbc3061b6d828b8","modified":1613979590000},{"_id":"themes/3-hexo/source/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1613979590000},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"59a4abd36cc8ff2107f1fcb3c0fe48d0492c9030","modified":1613979590000},{"_id":"themes/3-hexo/source/css/style.styl","hash":"7090b81f34e26172670c68da6a366ca186523779","modified":1613979590000},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"f87cc8afd96a028adc7cc83df8dacd96788914cf","modified":1614863438745},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1613979590000},{"_id":"themes/3-hexo/source/img/avatar.jpg","hash":"f6c064f7c1e05d940fd2cc3cd81669562c925d72","modified":1614760810185},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1613979590000},{"_id":"themes/3-hexo/source/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1613979590000},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1613979590000},{"_id":"themes/3-hexo/source/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1613979590000},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1613979590000},{"_id":"themes/3-hexo/source/js/script.js","hash":"d7efd27ade371c6e50d0d7481ffc0ec47018bad2","modified":1613979590000},{"_id":"themes/3-hexo/source/js/titleTip.js","hash":"81dca549063e29ba3a4a278f0f4388eba8a2167b","modified":1613979590000},{"_id":"themes/3-hexo/source/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"fa6675230f8c313236604e26926b142f4f418bdd","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"cd0022ce7e6d6efb07a00e87477cdf791f7f6703","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"fbd3c7d72c8354d700918390c6cbfc0a11408277","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"f16442568b43d034faaa8e3507f5ae8da34c7b72","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/comments/livere.ejs","hash":"e820aa16b5ed4e024616b5e2d424925820d43e56","modified":1613979590000},{"_id":"themes/3-hexo/layout/_partial/comments/utteranc.ejs","hash":"c76773b96860940083baf16470b7b80ac098e645","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"2a9b5ffb759be85545a89f6d1194579a800f51a5","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f6447a2ac407228e1d53e3455db2919ac0e9f094","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"4f687cbc74caf8a0887f5e89250284a9bce8b5c1","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"c68d6942ed62f9cce8a9042f5a59055a0ee5441c","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"0143711c1221cb4e70a3db866754d79c8a81d253","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"ece1ad4ad58035abf2290836a4eeb165b8edf5e3","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"44bdb1fe3e75996f24f2656770d6a376330e898d","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"65efbddd23a264e7d1e85f4073228526770e833c","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"0dd8d208081b92e05d6db3361743c520a2816828","modified":1613979590000},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"4b996440bba8ec755aa70bc6d074d7dbba55ec0c","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","hash":"13974fe35fca836e870a960ecb11b7eca2e036f8","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1613979590000},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"57c7f100019d57b512aab509185cb0a6eb9aa4c8","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"553987211d3323a7dfc0b08786b183a3435978c9","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1613979590000},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1613979590000},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"f4ac7316e2bb0ce39877cd264d7d7593c30dead6","modified":1614863694836},{"_id":"themes/3-hexo/source/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1613979590000},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"a75ead28e6a1fab2a006cc7332ca2d2e868ce8e1","modified":1613979590000},{"_id":"public/2021/03/03/hello-world/index.html","hash":"4ce9f8e9239787aa061801a19a373c4cf71417d3","modified":1614863810631},{"_id":"public/archives/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2021/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2021/03/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/img/alipay.jpg","hash":"f87cc8afd96a028adc7cc83df8dacd96788914cf","modified":1614863810631},{"_id":"public/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1614755484370},{"_id":"public/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1614755484370},{"_id":"public/img/avatar.jpg","hash":"f6c064f7c1e05d940fd2cc3cd81669562c925d72","modified":1614763453993},{"_id":"public/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1614755484370},{"_id":"public/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1614755484370},{"_id":"public/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1614755484370},{"_id":"public/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1614755484370},{"_id":"public/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1614755484370},{"_id":"public/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1614755484370},{"_id":"public/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1614755484370},{"_id":"public/css/fonts/iconfont.svg","hash":"13974fe35fca836e870a960ecb11b7eca2e036f8","modified":1614755484370},{"_id":"public/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1614755484370},{"_id":"public/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1614755484370},{"_id":"public/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1614755484370},{"_id":"public/img/weixin.jpg","hash":"f4ac7316e2bb0ce39877cd264d7d7593c30dead6","modified":1614863810631},{"_id":"public/css/mobile.css","hash":"5998f6fc27998596beb1e40e4bc3c43be2ed764c","modified":1614755484370},{"_id":"public/js/titleTip.js","hash":"81dca549063e29ba3a4a278f0f4388eba8a2167b","modified":1614755484370},{"_id":"public/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1614755484370},{"_id":"public/css/hl_theme/atom-dark.css","hash":"88d11052a24e8100af6248eb4dbe1ce7b0e96408","modified":1614755484370},{"_id":"public/css/hl_theme/atom-light.css","hash":"d31edb9816dae6b01410028bceb91757a962f780","modified":1614755484370},{"_id":"public/css/hl_theme/brown-paper.css","hash":"500c8e750373f6656ff49a7857c871ceedcf8777","modified":1614755484370},{"_id":"public/css/hl_theme/github.css","hash":"e05a0806a508a26b9f3f3794b6b588ec6504ad3f","modified":1614755484370},{"_id":"public/css/hl_theme/darcula.css","hash":"4341074bae4bc9f0b86e32b623e27babc0159b6e","modified":1614755484370},{"_id":"public/css/hl_theme/gruvbox-dark.css","hash":"8c440d9b4ee19ac03eaee3c6af78ba52e5ba5535","modified":1614755484370},{"_id":"public/css/hl_theme/gruvbox-light.css","hash":"30514aaa242a34647aa666cfca4fc74c595ea8f2","modified":1614755484370},{"_id":"public/css/hl_theme/kimbie-dark.css","hash":"728527fcc308da454722c119b89e6da3025bd1e3","modified":1614755484370},{"_id":"public/css/hl_theme/kimbie-light.css","hash":"0c61926c989163faefb031d27bce3e287d6e10f2","modified":1614755484370},{"_id":"public/css/hl_theme/railscasts.css","hash":"511f2fd2a84d426e5da5cb17880cc08f73beb002","modified":1614755484370},{"_id":"public/css/hl_theme/rainbow.css","hash":"7ff4251938076ddb7e4e49413db82653e5b61321","modified":1614755484370},{"_id":"public/css/hl_theme/school-book.css","hash":"ffbbcd13a74ac2404262c50b7a43053dfd0096ff","modified":1614755484370},{"_id":"public/css/hl_theme/sublime.css","hash":"f65c5b116d9213afb9c324384a2f3bc86cb71121","modified":1614755484370},{"_id":"public/css/hl_theme/sunburst.css","hash":"8a135abac1512cf430d1d1ad2304b79afa1a4d6e","modified":1614755484370},{"_id":"public/css/hl_theme/zenbum.css","hash":"0a78f74a93568e20b32ca7427c719e9bae9a0b55","modified":1614755484370},{"_id":"public/css/style.css","hash":"db3b1cc156de2bd7563399cf74eeabf9abde50a7","modified":1614755484370},{"_id":"public/css/hl_theme/github-gist.css","hash":"7a41c1c479d09df875f99f1f6d94aac42e9e2ad0","modified":1614755484370},{"_id":"public/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1614755484370},{"_id":"public/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1614755484370},{"_id":"public/css/fonts/selection.json","hash":"047b615ea32dc48dae5b964061427d41feaaafdf","modified":1614755484370},{"_id":"public/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1614755484370},{"_id":"public/js/script.js","hash":"d7efd27ade371c6e50d0d7481ffc0ec47018bad2","modified":1614755484370},{"_id":"public/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1614755484370},{"_id":"public/js/gitalk.js","hash":"a75ead28e6a1fab2a006cc7332ca2d2e868ce8e1","modified":1614755484370},{"_id":"source/_posts/2020-06-17-markdown-usage.md","hash":"29c0f16acb0f0a9cd8bb8444362b055f1622eef3","modified":1614877534560},{"_id":"source/_posts/2020-06-17-restart-blog.md","hash":"d832b7c622a93d1d830e7e831632150b315cd65d","modified":1614877515039},{"_id":"source/_posts/2020-06-18-python-exercise.md","hash":"63cb344afb798d8f195dfff59baf0258168deb31","modified":1614877501108},{"_id":"source/_posts/2020-06-19-user-agent.md","hash":"032160d979bbea0c7a8d2abaebb04f9f9ee93afb","modified":1614877468307},{"_id":"source/_posts/2020-06-20-one.md","hash":"125f51be779462aebe91a607aeea6586dbc49ce5","modified":1614877457706},{"_id":"source/_posts/2020-06-21-codingbat-warmup.md","hash":"f2e38e13ed0456561871f3b9b2364878a43f11a9","modified":1614877447228},{"_id":"source/_posts/2020-07-01-codingbat-string.md","hash":"c059d740d450f297753c4d406fbd081f53ddf4df","modified":1614877436671},{"_id":"source/_posts/2020-07-01-to-latter-half-year.md","hash":"89eb9dc0a70372563d4941f55ca49ce9446e84c4","modified":1614877425552},{"_id":"source/_posts/2020-07-05-coding-logic.md","hash":"b7682104ebab31998981225f63ecdabce4bb0226","modified":1614877407310},{"_id":"source/_posts/2020-07-28-soft-Keys.md","hash":"42cab4830ba460501fe98ec56ca8708a2a4802d2","modified":1614877394835},{"_id":"source/_posts/2020-11-06-to-2021.md","hash":"9d5d74a9ace5d40a2ac7419867e5b0b5cd6e7915","modified":1614877357370},{"_id":"source/_posts/2020-11-26-love-live.md","hash":"d5c1b98dcd98c7ba251c496936ee0cc731502110","modified":1614877339511},{"_id":"source/_posts/2021-01-26-tlbb.md","hash":"b25439b8691abd8c799a1c3753484b8fcd698408","modified":1614877258727},{"_id":"source/_posts/2021-02-26-tllist.md","hash":"b0b0dd505111a1dc1d6a503aa9105e28a24842ef","modified":1614877297404},{"_id":"public/2021/02/26/2021-02-26-tllist/index.html","hash":"d49b2229e3ed599f53abffae198ecd08f120e3c4","modified":1614877066497},{"_id":"public/2021/01/26/2021-01-26-tlbb/index.html","hash":"71a62c9b526c637d641990e245020206c4b544d8","modified":1614877066497},{"_id":"public/2020/11/26/2020-11-26-love-live/index.html","hash":"a3ebddf93a2b9f46663d608f57305a302b424f01","modified":1614877066497},{"_id":"public/2020/11/05/2020-11-06-to-2021/index.html","hash":"91c797e2eff928de1d5fcd226191548c91a776d7","modified":1614877066497},{"_id":"public/2020/07/29/2020-07-28-soft-Keys/index.html","hash":"30ff44bf64f2ddb36eff9b461aa4a60c31c804e9","modified":1614877066497},{"_id":"public/2020/07/03/2020-07-05-coding-logic/index.html","hash":"554c6476bde75db08480ba25ad4e06b585b43437","modified":1614875528695},{"_id":"public/2020/07/02/2020-07-01-codingbat-string/index.html","hash":"7f9fc2841073bb8f8cfd0492ad79680b0e315843","modified":1614875528695},{"_id":"public/2020/07/01/2020-07-01-to-latter-half-year/index.html","hash":"d4ce6252498b8d5561e15a6e6532d18b7763ce09","modified":1614875528695},{"_id":"public/2020/06/21/2020-06-21-codingbat-warmup/index.html","hash":"5b7a7510a80eae1336f7ab21cbba05e9bad7adad","modified":1614875528695},{"_id":"public/2020/06/19/2020-06-19-user-agent/index.html","hash":"e2ded81bc8f0b2a30a94518f15b5de8c2da9ac3b","modified":1614875528695},{"_id":"public/2020/06/18/2020-06-18-python-exercise/index.html","hash":"ad34359ec6e7d515e47539ed360fbcc6719b2fa0","modified":1614875528695},{"_id":"public/2020/06/17/2020-06-20-one/index.html","hash":"93f68ff239e3e01bfec9dd891dcb54fe37f077f8","modified":1614875528695},{"_id":"public/2020/06/17/2020-06-17-markdown-usage/index.html","hash":"93cc06880c4c67a90a5dd1ff85138f7a479711d4","modified":1614859854404},{"_id":"public/2020/06/17/2020-06-17-restart-blog/index.html","hash":"7edacab95323bb17a9bc8c3d159674050ace209d","modified":1614875528695},{"_id":"public/categories/教程-MarkDown/index.html","hash":"1d2bbbb59881284146708d800342e83227f97567","modified":1614859854404},{"_id":"public/categories/original/index.html","hash":"d16f8bcb47ba9556124fe8ffe43d5274753206d5","modified":1614877066497},{"_id":"public/categories/python/index.html","hash":"cf7d2a6206c6e7c17b7e4927941aa96ab8917bb2","modified":1614875528695},{"_id":"public/categories/user-agent/index.html","hash":"cf7d2a6206c6e7c17b7e4927941aa96ab8917bb2","modified":1614875528695},{"_id":"public/categories/softkeys/index.html","hash":"d16f8bcb47ba9556124fe8ffe43d5274753206d5","modified":1614877066497},{"_id":"public/archives/page/2/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2020/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2020/page/2/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2020/06/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2020/07/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2020/11/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2021/01/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/archives/2021/02/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/page/2/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/tags/python/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/tags/user-agent/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/tags/python-codingbat/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/tags/soft-keys-激活密钥-序列号-激活码/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"source/about/index.md","hash":"3655a70fe1df53f856d5daf7921571b82cc4576e","modified":1614859818352},{"_id":"themes/3-hexo/Untitled.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1614757516778},{"_id":"source/_posts/3-hexo-used","hash":"9d5b46ff2cf26d38cb643b99fc4d9fae06eb5359","modified":1614766110230},{"_id":"source/_posts/3-hexo-used.md","hash":"95547f15284e301f117227ea3b8f97ac924ff180","modified":1614859777963},{"_id":"public/about/index.html","hash":"0a6165cb69aeb22a7b6bce90a4deb20f8658d56d","modified":1614877623469},{"_id":"public/2021/03/03/3-hexo-used/index.html","hash":"256d50053f2f7d1a16d310fd398df1dfad6f911a","modified":1614877623469},{"_id":"source/CNAME","hash":"7b4f291f9901c5b8438031ffa6b28eb0e7d325c6","modified":1614864106798},{"_id":"public/CNAME","hash":"7b4f291f9901c5b8438031ffa6b28eb0e7d325c6","modified":1614864134782},{"_id":"source/_posts/2020-06-06-hello-world.md","hash":"c2472968269631f28c837f778aa1078e904b9d7d","modified":1614866036628},{"_id":"source/_posts/2021-03-03-3-hexo-used.md","hash":"95547f15284e301f117227ea3b8f97ac924ff180","modified":1614859777963},{"_id":"public/2020/06/17/markdown-usage/index.html","hash":"ad5f58411caf0760529da858bb263e010263f55e","modified":1614877623469},{"_id":"public/2020/06/06/hello-world/index.html","hash":"57a402832573c90fbcc3dd3fe3691fc2463cba92","modified":1614877623469},{"_id":"public/categories/教程和技巧/index.html","hash":"95abe24ae026063f7b08e2b6256604c91f1d8853","modified":1614876068261},{"_id":"public/2020/07/03/coding-logic/index.html","hash":"49718ed6af65c366a02cbd2cd20621119dc3b293","modified":1614877623469},{"_id":"public/2020/07/02/codingbat-string/index.html","hash":"cc4093ea2763fac5473f52ea185ca11e3f28f827","modified":1614877623469},{"_id":"public/2020/07/01/to-latter-half-year/index.html","hash":"3ce5645423b13fc0363317083c15ce90e35eb4a2","modified":1614877623469},{"_id":"public/2020/06/21/codingbat-warmup/index.html","hash":"8d5a84bfc4fbf4a5034ab8b28bd7f5a5947f3838","modified":1614877623469},{"_id":"public/2020/06/19/user-agent/index.html","hash":"6904409ed444dc7e4a0372b3e6944b4afd1bfd08","modified":1614877623469},{"_id":"public/2020/06/18/python-exercise/index.html","hash":"b0a3e614ce8c04005951369d00758704ef273817","modified":1614877623469},{"_id":"public/2020/06/17/one/index.html","hash":"66e31a6ffc963047eacfaf2e155908faa615013f","modified":1614877623469},{"_id":"public/2020/06/17/restart-blog/index.html","hash":"4c920b3941db7f28acea4afa0f147680e62cb7ce","modified":1614877623469},{"_id":"public/categories/人生与哲学/index.html","hash":"d16f8bcb47ba9556124fe8ffe43d5274753206d5","modified":1614877066497},{"_id":"public/categories/教程与技巧/index.html","hash":"d16f8bcb47ba9556124fe8ffe43d5274753206d5","modified":1614877066497},{"_id":"public/categories/教程与技巧-python/index.html","hash":"d16f8bcb47ba9556124fe8ffe43d5274753206d5","modified":1614877066497},{"_id":"public/tags/人生与哲学/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/tags/新冠肺炎/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/categories/教程与技巧/python/index.html","hash":"d16f8bcb47ba9556124fe8ffe43d5274753206d5","modified":1614877066497},{"_id":"public/2021/02/26/tllist/index.html","hash":"2310ac25d7403dd0eb2aabecb669f80d29667a18","modified":1614877623469},{"_id":"public/2021/01/26/tlbb/index.html","hash":"1a8bdaa4d290715dec679a9a6c2edffff377aad0","modified":1614877623469},{"_id":"public/2020/11/26/love-live/index.html","hash":"5b04e3ef334a753010c0fdde18323a9f9ca2035e","modified":1614877623469},{"_id":"public/2020/11/05/to-2021/index.html","hash":"4e45354584dba28b89801b73f85a16d1f925f10a","modified":1614877623469},{"_id":"public/2020/07/29/soft-Keys/index.html","hash":"015b2b96349cf6eba6f8ffc77869c8fa66302053","modified":1614877623469},{"_id":"public/categories/教程技巧/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/categories/生活随笔/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/categories/共享/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/categories/教程技巧/python/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/categories/游戏人生/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469},{"_id":"public/categories/游戏人生/天龙八部/index.html","hash":"2650b235feb42e108240dcb350aa014bbb1bd2a7","modified":1614877623469}],"Category":[{"name":"教程 MarkDown","_id":"cklt3r3d500028cw44gg4bkfr"},{"name":"original","_id":"cklt3r3dc00078cw4akmvb5cz"},{"name":"python","_id":"cklt3r3df000c8cw4fayp4e04"},{"name":"user-agent","_id":"cklt3r3dk000i8cw487h1etp7"},{"name":"softkeys","_id":"cklt3r3dv00108cw4hqvyeb9u"},{"name":"教程和技巧","_id":"ckluxh3zv000258w42ugw9uy4"},{"name":"人生与哲学","_id":"cklv3ileu0000j4w41375bcbv"},{"name":"教程与技巧","_id":"cklv3ilf20002j4w43ieb6fvy"},{"name":"教程与技巧 - python","_id":"cklv3ilf9000aj4w45fzjbtsi"},{"name":"python","parent":"cklv3ilf20002j4w43ieb6fvy","_id":"cklv3ny2g00005ow484w35zsz"},{"name":"教程与技巧>python","_id":"cklv43znj0000l0w4b2ph1sxh"},{"name":"教程技巧","_id":"cklv4fxeq000094w4ffxp7o3t"},{"name":"生活随笔","_id":"cklv4fxf1000294w4hk3iacor"},{"name":"共享","_id":"cklv4fxf3000494w455bza63f"},{"name":"python","parent":"cklv4fxeq000094w4ffxp7o3t","_id":"cklv4fxf7000894w43hf81kl7"},{"name":"游戏人生","_id":"cklv4fxfc000j94w4b2wm7fch"},{"name":"天龙八部","parent":"cklv4fxfc000j94w4b2wm7fch","_id":"cklv4fxfe000p94w4c58gd37h"}],"Data":[],"Page":[{"title":"关于博主","date":"2021-03-03T10:35:27.000Z","_content":"\n## 关于博主（一个无所求的人）\n\n\n回想自己，90后，一个五线都算不上的城市跌落者。\n\n那会儿，一直向往自由，曾想游览天下，却是在家每天重复着两点一线的生活。\n\n曾是那么的开朗，阳光，在体制的压力下，变得更暴躁，总会无故生气默然，为此，老婆孩子没少受气，想想真是无聊。\n\n兴趣众多，总想什么都会，什么都了解，却一无所成，总是半途而废，对IT数码科技有着极大的兴趣，一个问题总要将之弄清才罢休。\n\n孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。\n\n兴趣众多，然无一精通。正努力成为一个有趣的人。\n\n","source":"about/index.md","raw":"---\ntitle: 关于博主\ndate: 2021-03-03 18:35:27\n---\n\n## 关于博主（一个无所求的人）\n\n\n回想自己，90后，一个五线都算不上的城市跌落者。\n\n那会儿，一直向往自由，曾想游览天下，却是在家每天重复着两点一线的生活。\n\n曾是那么的开朗，阳光，在体制的压力下，变得更暴躁，总会无故生气默然，为此，老婆孩子没少受气，想想真是无聊。\n\n兴趣众多，总想什么都会，什么都了解，却一无所成，总是半途而废，对IT数码科技有着极大的兴趣，一个问题总要将之弄清才罢休。\n\n孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。\n\n兴趣众多，然无一精通。正努力成为一个有趣的人。\n\n","updated":"2021-03-04T12:10:18.352Z","path":"about/index.html","_id":"cklu486wa00000cw4bc3xd69s","comments":1,"layout":"page","content":"<h2 id=\"关于博主（一个无所求的人）\"><a href=\"#关于博主（一个无所求的人）\" class=\"headerlink\" title=\"关于博主（一个无所求的人）\"></a>关于博主（一个无所求的人）</h2><p>回想自己，90后，一个五线都算不上的城市跌落者。</p>\n<p>那会儿，一直向往自由，曾想游览天下，却是在家每天重复着两点一线的生活。</p>\n<p>曾是那么的开朗，阳光，在体制的压力下，变得更暴躁，总会无故生气默然，为此，老婆孩子没少受气，想想真是无聊。</p>\n<p>兴趣众多，总想什么都会，什么都了解，却一无所成，总是半途而废，对IT数码科技有着极大的兴趣，一个问题总要将之弄清才罢休。</p>\n<p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p>\n<p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于博主（一个无所求的人）\"><a href=\"#关于博主（一个无所求的人）\" class=\"headerlink\" title=\"关于博主（一个无所求的人）\"></a>关于博主（一个无所求的人）</h2><p>回想自己，90后，一个五线都算不上的城市跌落者。</p>\n<p>那会儿，一直向往自由，曾想游览天下，却是在家每天重复着两点一线的生活。</p>\n<p>曾是那么的开朗，阳光，在体制的压力下，变得更暴躁，总会无故生气默然，为此，老婆孩子没少受气，想想真是无聊。</p>\n<p>兴趣众多，总想什么都会，什么都了解，却一无所成，总是半途而废，对IT数码科技有着极大的兴趣，一个问题总要将之弄清才罢休。</p>\n<p>孤独患者，懒癌中期，无脑幻想者。但却人畜无害，无需远离。</p>\n<p>兴趣众多，然无一精通。正努力成为一个有趣的人。</p>\n"}],"Post":[{"layout":"post","title":"Markdown使用方法","date":"2020-06-17T14:03:25.000Z","_content":"# MarkDown使用方法  \nMarkdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。  \nMarkdown 编写的文档后缀为 .md, .markdown。  \n\n以上为段落，用“两个空格+回车” 来标注，或者中间空一行空格标。  \n***\n## 1. 标题  \n> 1.1 = - 标注法(能标二级)：  \n> 这是一级标题  \n> =========  \n> 方法：  \n> 这是一级标题  \n> \\=\\=\\=\\=\\=\\=\\=  \n> 这是二级标题\n> ----------\n> 方法：  \n> 这是二级标题  \n> \\-\\-\\-\\-\\-\\-\\-\\-\\-  \n> \n### 1.2 # 标注法：\n\n用'#'可标注六级标题，用1-6个#来标注：  \n# 一级标题（# 一级标题）\n## 二级标题（## 二级标题）\n### 三级标题（### 三级标题）  \n...\n\n***\n## 3. 段落和格式 \n\n> ### 3.1 段落  \n>>\n用“两个空格+回车” 来标注，或者中间空一行空格标注。  \n\n> ### 3.2 字体  \n>> Markdown 可以使用以下几种字体：\n\n* *斜体文本* （使用：   \\*斜体文本\\*）  \n* _斜体文本_  （使用：  \\_斜体文本\\_）  \n* **粗体文本**  （使用：  \\*\\*粗体文体\\*\\*）  \n* __粗体文本__  (使用： \\_\\_粗体文体\\_\\_)  \n* ***粗斜体文本***  (使用： \\*\\*\\*粗斜体文本\\*\\*\\*)  \n* ___粗斜体文本___  (\\_\\_\\_粗斜体文本\\_\\_\\_)\n\n> ### 3.3 分隔线  \n> 在单行使用3个以上*、___、---  \n> 下面是3个星号（*）：  \n***\n> 下面是5个减号（-）：  \n-----\n> 下面是3个下划线（_）：  \n___\n\n> ### 3.4 删除线  \n>> 语法：  \n>> \\~\\~删除线\\~\\~ ：~~删除线~~  \n\n> ### 3.5 下划线  \n>> md的下划线可用html的\\<u\\>文字\\<\\/u\\>标签来标注  \n>>  <u>下划线文字</u>\n\n> ### 3.6 脚注  \n> 长鸿的博客 ^^coolxy^^\n> \n\n\n***\n\n## 4. markdown列表\n\n\n## 5. markdown区块\n\n## 6. 代码区块  \n语法：  \n单行用：  '`代码'` 实现  \n` for i in range(100):`\n\n多行区块：  \\`\\`\\`代码块\\`\\`\\`  \n\n```python\nfor i in range(100):\n    print(i,i**2)\n```\n    i=100\n    while i>0:\n        i-=1\n        print(i)   i-=1\n        print(i)\n\n\n## 7. 链接  \n 语法：  \n> \\[链接名称\\]\\(链接地址\\)  \n> Eg:  \\[长鸿的博客\\]\\(http://www.coolxy.cn\\)  \n> 效果：[长鸿的博客](http://www.coolxy.cn)  \n\n> 也可以直接用：<链接地址>  ：\n> \\<http://www.coolxy.cn\\>   \n> 效果：  \n> <http://www.coolxy.cn>  \n\n> 高级链接：  \n> 用变量来设置链接地址，变量在后面赋值地址。  \n> Eg: \\[长鸿的博客\\]\\[ch\\]  \n> \\[ch\\]:http://www.coolxy.cn/  \n\n> 效果：  \n> [长鸿的博客][ch]  \n\n> [ch]: http://www.coolxy.cn/\n\n***\n\n## 8. 图片  \n语法：  \n> \\!\\[图片替代文字\\]\\(图片地址\\)  \n\n> 还可将图片放上链接（将图片内容当成链接文字的整体）：  \n> \\[!\\[图片替代文字\\]\\(图片地址\\)\\]\\(链接地址\\)  \n\n> [![图片说明文字](/assets/images/xixia.gif)](http://www.coolxy.cn)  \n\n****\n## 9. MarkDown表格  \n> Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。\n语法：  \n|序号|姓名|Email|电话|备注|\n|:---:|:---|:---:|---:|:---:|\n|1|长鸿|admin@coolxy.cn|18888888888||\n\n\n|序号|姓名|Email|电话|备注|\n|:---:|:---|:---:|---:|:---:|\n|1|长鸿|admin@coolxy.cn|18888888888||\n| 2 | xy | aa@qq.com | 155 |  |\n|  |  |  |  |  |\n\n对齐方式：  \n> * 左对齐：:--  \n> * 右对齐：--:  \n> * 居中对齐：:----:  \n\n## 10. 高级技巧\n支持的 HTML 元素  \n> 不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n\n目前支持的 HTML 元素有：  \n\\<kbd\\> \\<b\\> \\<i\\> \\<em\\> \\<sup\\> \\<sub\\> \\<br\\>等 ，如： \n\n> 使用\\<kbd\\>Ctrl\\</kbd\\>+>\\<kbd\\>Alt\\<\\/kbd\\>+\\<kbd\\>Del\\<\\/kbd\\> 重启电脑\n\n> 显示结果为：  \n> 使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑\n\n\n> 转义\n> Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n\n**文本加粗** \n\\*\\* 正常显示星号 \\*\\*\n\n> Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n> \n> * \\\\     反斜线  \n> * \\`     反引号  \n> * \\*     星号  \n> * \\_     下划线  \n> * \\{\\}    花括号  \n> * \\[\\]    方括号  \n> * \\(\\)    小括号  \n> * \\#     井字号  \n> * \\+     加号  \n> * \\-     减号  \n> * \\.     英文句点  \n> * \\!     感叹号  \n\n### 公式 \n> 当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTex ","source":"_posts/2020-06-17-markdown-usage.md","raw":"---\nlayout: post\ntitle:  \"Markdown使用方法\"\ndate:   2020-06-17 22:03:25\ncategories: \n  - 教程技巧\n---\n# MarkDown使用方法  \nMarkdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。  \nMarkdown 编写的文档后缀为 .md, .markdown。  \n\n以上为段落，用“两个空格+回车” 来标注，或者中间空一行空格标。  \n***\n## 1. 标题  \n> 1.1 = - 标注法(能标二级)：  \n> 这是一级标题  \n> =========  \n> 方法：  \n> 这是一级标题  \n> \\=\\=\\=\\=\\=\\=\\=  \n> 这是二级标题\n> ----------\n> 方法：  \n> 这是二级标题  \n> \\-\\-\\-\\-\\-\\-\\-\\-\\-  \n> \n### 1.2 # 标注法：\n\n用'#'可标注六级标题，用1-6个#来标注：  \n# 一级标题（# 一级标题）\n## 二级标题（## 二级标题）\n### 三级标题（### 三级标题）  \n...\n\n***\n## 3. 段落和格式 \n\n> ### 3.1 段落  \n>>\n用“两个空格+回车” 来标注，或者中间空一行空格标注。  \n\n> ### 3.2 字体  \n>> Markdown 可以使用以下几种字体：\n\n* *斜体文本* （使用：   \\*斜体文本\\*）  \n* _斜体文本_  （使用：  \\_斜体文本\\_）  \n* **粗体文本**  （使用：  \\*\\*粗体文体\\*\\*）  \n* __粗体文本__  (使用： \\_\\_粗体文体\\_\\_)  \n* ***粗斜体文本***  (使用： \\*\\*\\*粗斜体文本\\*\\*\\*)  \n* ___粗斜体文本___  (\\_\\_\\_粗斜体文本\\_\\_\\_)\n\n> ### 3.3 分隔线  \n> 在单行使用3个以上*、___、---  \n> 下面是3个星号（*）：  \n***\n> 下面是5个减号（-）：  \n-----\n> 下面是3个下划线（_）：  \n___\n\n> ### 3.4 删除线  \n>> 语法：  \n>> \\~\\~删除线\\~\\~ ：~~删除线~~  \n\n> ### 3.5 下划线  \n>> md的下划线可用html的\\<u\\>文字\\<\\/u\\>标签来标注  \n>>  <u>下划线文字</u>\n\n> ### 3.6 脚注  \n> 长鸿的博客 ^^coolxy^^\n> \n\n\n***\n\n## 4. markdown列表\n\n\n## 5. markdown区块\n\n## 6. 代码区块  \n语法：  \n单行用：  '`代码'` 实现  \n` for i in range(100):`\n\n多行区块：  \\`\\`\\`代码块\\`\\`\\`  \n\n```python\nfor i in range(100):\n    print(i,i**2)\n```\n    i=100\n    while i>0:\n        i-=1\n        print(i)   i-=1\n        print(i)\n\n\n## 7. 链接  \n 语法：  \n> \\[链接名称\\]\\(链接地址\\)  \n> Eg:  \\[长鸿的博客\\]\\(http://www.coolxy.cn\\)  \n> 效果：[长鸿的博客](http://www.coolxy.cn)  \n\n> 也可以直接用：<链接地址>  ：\n> \\<http://www.coolxy.cn\\>   \n> 效果：  \n> <http://www.coolxy.cn>  \n\n> 高级链接：  \n> 用变量来设置链接地址，变量在后面赋值地址。  \n> Eg: \\[长鸿的博客\\]\\[ch\\]  \n> \\[ch\\]:http://www.coolxy.cn/  \n\n> 效果：  \n> [长鸿的博客][ch]  \n\n> [ch]: http://www.coolxy.cn/\n\n***\n\n## 8. 图片  \n语法：  \n> \\!\\[图片替代文字\\]\\(图片地址\\)  \n\n> 还可将图片放上链接（将图片内容当成链接文字的整体）：  \n> \\[!\\[图片替代文字\\]\\(图片地址\\)\\]\\(链接地址\\)  \n\n> [![图片说明文字](/assets/images/xixia.gif)](http://www.coolxy.cn)  \n\n****\n## 9. MarkDown表格  \n> Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。\n语法：  \n|序号|姓名|Email|电话|备注|\n|:---:|:---|:---:|---:|:---:|\n|1|长鸿|admin@coolxy.cn|18888888888||\n\n\n|序号|姓名|Email|电话|备注|\n|:---:|:---|:---:|---:|:---:|\n|1|长鸿|admin@coolxy.cn|18888888888||\n| 2 | xy | aa@qq.com | 155 |  |\n|  |  |  |  |  |\n\n对齐方式：  \n> * 左对齐：:--  \n> * 右对齐：--:  \n> * 居中对齐：:----:  \n\n## 10. 高级技巧\n支持的 HTML 元素  \n> 不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n\n目前支持的 HTML 元素有：  \n\\<kbd\\> \\<b\\> \\<i\\> \\<em\\> \\<sup\\> \\<sub\\> \\<br\\>等 ，如： \n\n> 使用\\<kbd\\>Ctrl\\</kbd\\>+>\\<kbd\\>Alt\\<\\/kbd\\>+\\<kbd\\>Del\\<\\/kbd\\> 重启电脑\n\n> 显示结果为：  \n> 使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑\n\n\n> 转义\n> Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n\n**文本加粗** \n\\*\\* 正常显示星号 \\*\\*\n\n> Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n> \n> * \\\\     反斜线  \n> * \\`     反引号  \n> * \\*     星号  \n> * \\_     下划线  \n> * \\{\\}    花括号  \n> * \\[\\]    方括号  \n> * \\(\\)    小括号  \n> * \\#     井字号  \n> * \\+     加号  \n> * \\-     减号  \n> * \\.     英文句点  \n> * \\!     感叹号  \n\n### 公式 \n> 当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTex ","slug":"markdown-usage","published":1,"updated":"2021-03-04T17:05:34.560Z","_id":"cklt3r3cv00008cw4buel9kzw","comments":1,"photos":[],"link":"","content":"<h1 id=\"MarkDown使用方法\"><a href=\"#MarkDown使用方法\" class=\"headerlink\" title=\"MarkDown使用方法\"></a>MarkDown使用方法</h1><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 .md, .markdown。  </p>\n<p>以上为段落，用“两个空格+回车” 来标注，或者中间空一行空格标。  </p>\n<hr>\n<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1. 标题\"></a>1. 标题</h2><blockquote>\n<p>1.1 = - 标注法(能标二级)：<br>这是一级标题<br>=========<br>方法：<br>这是一级标题<br>=======<br>这是二级标题</p>\n<hr>\n<p>方法：<br>这是二级标题<br>---------  </p>\n</blockquote>\n<h3 id=\"1-2-标注法：\"><a href=\"#1-2-标注法：\" class=\"headerlink\" title=\"1.2 # 标注法：\"></a>1.2 # 标注法：</h3><p>用’#’可标注六级标题，用1-6个#来标注：  </p>\n<h1 id=\"一级标题（-一级标题）\"><a href=\"#一级标题（-一级标题）\" class=\"headerlink\" title=\"一级标题（# 一级标题）\"></a>一级标题（# 一级标题）</h1><h2 id=\"二级标题（-二级标题）\"><a href=\"#二级标题（-二级标题）\" class=\"headerlink\" title=\"二级标题（## 二级标题）\"></a>二级标题（## 二级标题）</h2><h3 id=\"三级标题（-三级标题）\"><a href=\"#三级标题（-三级标题）\" class=\"headerlink\" title=\"三级标题（### 三级标题）\"></a>三级标题（### 三级标题）</h3><p>…</p>\n<hr>\n<h2 id=\"3-段落和格式\"><a href=\"#3-段落和格式\" class=\"headerlink\" title=\"3. 段落和格式\"></a>3. 段落和格式</h2><blockquote>\n<h3 id=\"3-1-段落\"><a href=\"#3-1-段落\" class=\"headerlink\" title=\"3.1 段落\"></a>3.1 段落</h3><blockquote>\n</blockquote>\n<p>用“两个空格+回车” 来标注，或者中间空一行空格标注。  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"3-2-字体\"><a href=\"#3-2-字体\" class=\"headerlink\" title=\"3.2 字体\"></a>3.2 字体</h3><blockquote>\n<p>Markdown 可以使用以下几种字体：</p>\n</blockquote>\n</blockquote>\n<ul>\n<li><em>斜体文本</em> （使用：   *斜体文本*）  </li>\n<li><em>斜体文本</em>  （使用：  _斜体文本_）  </li>\n<li><strong>粗体文本</strong>  （使用：  **粗体文体**）  </li>\n<li><strong>粗体文本</strong>  (使用： __粗体文体__)  </li>\n<li><em><strong>粗斜体文本</strong></em>  (使用： ***粗斜体文本***)  </li>\n<li><em><strong>粗斜体文本</strong></em>  (___粗斜体文本___)</li>\n</ul>\n<blockquote>\n<h3 id=\"3-3-分隔线\"><a href=\"#3-3-分隔线\" class=\"headerlink\" title=\"3.3 分隔线\"></a>3.3 分隔线</h3><p>在单行使用3个以上<em>、___、—<br>下面是3个星号（</em>）：  </p>\n</blockquote>\n<hr>\n<blockquote>\n<p>下面是5个减号（-）：  </p>\n</blockquote>\n<hr>\n<blockquote>\n<p>下面是3个下划线（_）：  </p>\n</blockquote>\n<hr>\n<blockquote>\n<h3 id=\"3-4-删除线\"><a href=\"#3-4-删除线\" class=\"headerlink\" title=\"3.4 删除线\"></a>3.4 删除线</h3><blockquote>\n<p>语法：<br>~~删除线~~ ：<del>删除线</del>  </p>\n</blockquote>\n</blockquote>\n<blockquote>\n<h3 id=\"3-5-下划线\"><a href=\"#3-5-下划线\" class=\"headerlink\" title=\"3.5 下划线\"></a>3.5 下划线</h3><blockquote>\n<p>md的下划线可用html的&lt;u&gt;文字&lt;/u&gt;标签来标注<br> <u>下划线文字</u></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<h3 id=\"3-6-脚注\"><a href=\"#3-6-脚注\" class=\"headerlink\" title=\"3.6 脚注\"></a>3.6 脚注</h3><p>长鸿的博客 ^^coolxy^^</p>\n</blockquote>\n<hr>\n<h2 id=\"4-markdown列表\"><a href=\"#4-markdown列表\" class=\"headerlink\" title=\"4. markdown列表\"></a>4. markdown列表</h2><h2 id=\"5-markdown区块\"><a href=\"#5-markdown区块\" class=\"headerlink\" title=\"5. markdown区块\"></a>5. markdown区块</h2><h2 id=\"6-代码区块\"><a href=\"#6-代码区块\" class=\"headerlink\" title=\"6. 代码区块\"></a>6. 代码区块</h2><p>语法：<br>单行用：  ‘<code>代码&#39;</code> 实现<br><code> for i in range(100):</code></p>\n<p>多行区块：  ```代码块```  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">    print(i,i**<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>i=100\nwhile i&gt;0:\n    i-=1\n    print(i)   i-=1\n    print(i)\n</code></pre>\n<h2 id=\"7-链接\"><a href=\"#7-链接\" class=\"headerlink\" title=\"7. 链接\"></a>7. 链接</h2><p> 语法：  </p>\n<blockquote>\n<p>[链接名称](链接地址)<br>Eg:  [长鸿的博客](<a href=\"http://www.coolxy.cn/\">http://www.coolxy.cn\\</a>)<br>效果：<a href=\"http://www.coolxy.cn/\">长鸿的博客</a>  </p>\n</blockquote>\n<blockquote>\n<p>也可以直接用：&lt;链接地址&gt;  ：<br>&lt;<a href=\"http://www.coolxy.cn/&gt;\">http://www.coolxy.cn\\&gt;</a><br>效果：<br><a href=\"http://www.coolxy.cn/\">http://www.coolxy.cn</a>  </p>\n</blockquote>\n<blockquote>\n<p>高级链接：<br>用变量来设置链接地址，变量在后面赋值地址。<br>Eg: [长鸿的博客][ch]<br>[ch]:<a href=\"http://www.coolxy.cn/\">http://www.coolxy.cn/</a>  </p>\n</blockquote>\n<blockquote>\n<p>效果：<br><a href=\"http://www.coolxy.cn/\">长鸿的博客</a>  </p>\n</blockquote>\n<blockquote>\n</blockquote>\n<hr>\n<h2 id=\"8-图片\"><a href=\"#8-图片\" class=\"headerlink\" title=\"8. 图片\"></a>8. 图片</h2><p>语法：  </p>\n<blockquote>\n<p>![图片替代文字](图片地址)  </p>\n</blockquote>\n<blockquote>\n<p>还可将图片放上链接（将图片内容当成链接文字的整体）：<br>[![图片替代文字](图片地址)](链接地址)  </p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://www.coolxy.cn/\"><img src=\"/assets/images/xixia.gif\" alt=\"图片说明文字\"></a>  </p>\n</blockquote>\n<hr>\n<h2 id=\"9-MarkDown表格\"><a href=\"#9-MarkDown表格\" class=\"headerlink\" title=\"9. MarkDown表格\"></a>9. MarkDown表格</h2><blockquote>\n<p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。<br>语法：<br>|序号|姓名|Email|电话|备注|<br>|:—:|:—|:—:|—:|:—:|<br>|1|长鸿|admin@coolxy.cn|18888888888||</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">序号</th>\n<th align=\"left\">姓名</th>\n<th align=\"center\">Email</th>\n<th align=\"right\">电话</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1</td>\n<td align=\"left\">长鸿</td>\n<td align=\"center\"><a href=\"mailto:&#x61;&#x64;&#109;&#105;&#x6e;&#x40;&#99;&#x6f;&#111;&#108;&#120;&#x79;&#46;&#x63;&#110;\">&#x61;&#x64;&#109;&#105;&#x6e;&#x40;&#99;&#x6f;&#111;&#108;&#120;&#x79;&#46;&#x63;&#110;</a></td>\n<td align=\"right\">18888888888</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"left\">xy</td>\n<td align=\"center\"><a href=\"mailto:&#x61;&#97;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;\">&#x61;&#97;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;</a></td>\n<td align=\"right\">155</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"left\"></td>\n<td align=\"center\"></td>\n<td align=\"right\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<p>对齐方式：  </p>\n<blockquote>\n<ul>\n<li>左对齐：:–  </li>\n<li>右对齐：–:  </li>\n<li>居中对齐：:—-:  </li>\n</ul>\n</blockquote>\n<h2 id=\"10-高级技巧\"><a href=\"#10-高级技巧\" class=\"headerlink\" title=\"10. 高级技巧\"></a>10. 高级技巧</h2><p>支持的 HTML 元素  </p>\n<blockquote>\n<p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p>\n</blockquote>\n<p>目前支持的 HTML 元素有：<br>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如： </p>\n<blockquote>\n<p>使用&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</p>\n</blockquote>\n<blockquote>\n<p>显示结果为：<br>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p>\n</blockquote>\n<blockquote>\n<p>转义<br>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p>\n</blockquote>\n<p><strong>文本加粗</strong><br>** 正常显示星号 **</p>\n<blockquote>\n<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>\n<ul>\n<li>\\     反斜线  </li>\n<li>`     反引号  </li>\n<li>*     星号  </li>\n<li>_     下划线  </li>\n<li>{}    花括号  </li>\n<li>[]    方括号  </li>\n<li>()    小括号  </li>\n<li>#     井字号  </li>\n<li>+     加号  </li>\n<li>-     减号  </li>\n<li>.     英文句点  </li>\n<li>!     感叹号  </li>\n</ul>\n</blockquote>\n<h3 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h3><blockquote>\n<p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTex </p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"MarkDown使用方法\"><a href=\"#MarkDown使用方法\" class=\"headerlink\" title=\"MarkDown使用方法\"></a>MarkDown使用方法</h1><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 .md, .markdown。  </p>\n<p>以上为段落，用“两个空格+回车” 来标注，或者中间空一行空格标。  </p>\n<hr>\n<h2 id=\"1-标题\"><a href=\"#1-标题\" class=\"headerlink\" title=\"1. 标题\"></a>1. 标题</h2><blockquote>\n<p>1.1 = - 标注法(能标二级)：<br>这是一级标题<br>=========<br>方法：<br>这是一级标题<br>=======<br>这是二级标题</p>\n<hr>\n<p>方法：<br>这是二级标题<br>---------  </p>\n</blockquote>\n<h3 id=\"1-2-标注法：\"><a href=\"#1-2-标注法：\" class=\"headerlink\" title=\"1.2 # 标注法：\"></a>1.2 # 标注法：</h3><p>用’#’可标注六级标题，用1-6个#来标注：  </p>\n<h1 id=\"一级标题（-一级标题）\"><a href=\"#一级标题（-一级标题）\" class=\"headerlink\" title=\"一级标题（# 一级标题）\"></a>一级标题（# 一级标题）</h1><h2 id=\"二级标题（-二级标题）\"><a href=\"#二级标题（-二级标题）\" class=\"headerlink\" title=\"二级标题（## 二级标题）\"></a>二级标题（## 二级标题）</h2><h3 id=\"三级标题（-三级标题）\"><a href=\"#三级标题（-三级标题）\" class=\"headerlink\" title=\"三级标题（### 三级标题）\"></a>三级标题（### 三级标题）</h3><p>…</p>\n<hr>\n<h2 id=\"3-段落和格式\"><a href=\"#3-段落和格式\" class=\"headerlink\" title=\"3. 段落和格式\"></a>3. 段落和格式</h2><blockquote>\n<h3 id=\"3-1-段落\"><a href=\"#3-1-段落\" class=\"headerlink\" title=\"3.1 段落\"></a>3.1 段落</h3><blockquote>\n</blockquote>\n<p>用“两个空格+回车” 来标注，或者中间空一行空格标注。  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"3-2-字体\"><a href=\"#3-2-字体\" class=\"headerlink\" title=\"3.2 字体\"></a>3.2 字体</h3><blockquote>\n<p>Markdown 可以使用以下几种字体：</p>\n</blockquote>\n</blockquote>\n<ul>\n<li><em>斜体文本</em> （使用：   *斜体文本*）  </li>\n<li><em>斜体文本</em>  （使用：  _斜体文本_）  </li>\n<li><strong>粗体文本</strong>  （使用：  **粗体文体**）  </li>\n<li><strong>粗体文本</strong>  (使用： __粗体文体__)  </li>\n<li><em><strong>粗斜体文本</strong></em>  (使用： ***粗斜体文本***)  </li>\n<li><em><strong>粗斜体文本</strong></em>  (___粗斜体文本___)</li>\n</ul>\n<blockquote>\n<h3 id=\"3-3-分隔线\"><a href=\"#3-3-分隔线\" class=\"headerlink\" title=\"3.3 分隔线\"></a>3.3 分隔线</h3><p>在单行使用3个以上<em>、___、—<br>下面是3个星号（</em>）：  </p>\n</blockquote>\n<hr>\n<blockquote>\n<p>下面是5个减号（-）：  </p>\n</blockquote>\n<hr>\n<blockquote>\n<p>下面是3个下划线（_）：  </p>\n</blockquote>\n<hr>\n<blockquote>\n<h3 id=\"3-4-删除线\"><a href=\"#3-4-删除线\" class=\"headerlink\" title=\"3.4 删除线\"></a>3.4 删除线</h3><blockquote>\n<p>语法：<br>~~删除线~~ ：<del>删除线</del>  </p>\n</blockquote>\n</blockquote>\n<blockquote>\n<h3 id=\"3-5-下划线\"><a href=\"#3-5-下划线\" class=\"headerlink\" title=\"3.5 下划线\"></a>3.5 下划线</h3><blockquote>\n<p>md的下划线可用html的&lt;u&gt;文字&lt;/u&gt;标签来标注<br> <u>下划线文字</u></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<h3 id=\"3-6-脚注\"><a href=\"#3-6-脚注\" class=\"headerlink\" title=\"3.6 脚注\"></a>3.6 脚注</h3><p>长鸿的博客 ^^coolxy^^</p>\n</blockquote>\n<hr>\n<h2 id=\"4-markdown列表\"><a href=\"#4-markdown列表\" class=\"headerlink\" title=\"4. markdown列表\"></a>4. markdown列表</h2><h2 id=\"5-markdown区块\"><a href=\"#5-markdown区块\" class=\"headerlink\" title=\"5. markdown区块\"></a>5. markdown区块</h2><h2 id=\"6-代码区块\"><a href=\"#6-代码区块\" class=\"headerlink\" title=\"6. 代码区块\"></a>6. 代码区块</h2><p>语法：<br>单行用：  ‘<code>代码&#39;</code> 实现<br><code> for i in range(100):</code></p>\n<p>多行区块：  ```代码块```  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">    print(i,i**<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>i=100\nwhile i&gt;0:\n    i-=1\n    print(i)   i-=1\n    print(i)\n</code></pre>\n<h2 id=\"7-链接\"><a href=\"#7-链接\" class=\"headerlink\" title=\"7. 链接\"></a>7. 链接</h2><p> 语法：  </p>\n<blockquote>\n<p>[链接名称](链接地址)<br>Eg:  [长鸿的博客](<a href=\"http://www.coolxy.cn/\">http://www.coolxy.cn\\</a>)<br>效果：<a href=\"http://www.coolxy.cn/\">长鸿的博客</a>  </p>\n</blockquote>\n<blockquote>\n<p>也可以直接用：&lt;链接地址&gt;  ：<br>&lt;<a href=\"http://www.coolxy.cn/&gt;\">http://www.coolxy.cn\\&gt;</a><br>效果：<br><a href=\"http://www.coolxy.cn/\">http://www.coolxy.cn</a>  </p>\n</blockquote>\n<blockquote>\n<p>高级链接：<br>用变量来设置链接地址，变量在后面赋值地址。<br>Eg: [长鸿的博客][ch]<br>[ch]:<a href=\"http://www.coolxy.cn/\">http://www.coolxy.cn/</a>  </p>\n</blockquote>\n<blockquote>\n<p>效果：<br><a href=\"http://www.coolxy.cn/\">长鸿的博客</a>  </p>\n</blockquote>\n<blockquote>\n</blockquote>\n<hr>\n<h2 id=\"8-图片\"><a href=\"#8-图片\" class=\"headerlink\" title=\"8. 图片\"></a>8. 图片</h2><p>语法：  </p>\n<blockquote>\n<p>![图片替代文字](图片地址)  </p>\n</blockquote>\n<blockquote>\n<p>还可将图片放上链接（将图片内容当成链接文字的整体）：<br>[![图片替代文字](图片地址)](链接地址)  </p>\n</blockquote>\n<blockquote>\n<p><a href=\"http://www.coolxy.cn/\"><img src=\"/assets/images/xixia.gif\" alt=\"图片说明文字\"></a>  </p>\n</blockquote>\n<hr>\n<h2 id=\"9-MarkDown表格\"><a href=\"#9-MarkDown表格\" class=\"headerlink\" title=\"9. MarkDown表格\"></a>9. MarkDown表格</h2><blockquote>\n<p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。<br>语法：<br>|序号|姓名|Email|电话|备注|<br>|:—:|:—|:—:|—:|:—:|<br>|1|长鸿|admin@coolxy.cn|18888888888||</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"center\">序号</th>\n<th align=\"left\">姓名</th>\n<th align=\"center\">Email</th>\n<th align=\"right\">电话</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1</td>\n<td align=\"left\">长鸿</td>\n<td align=\"center\"><a href=\"mailto:&#x61;&#x64;&#109;&#105;&#x6e;&#x40;&#99;&#x6f;&#111;&#108;&#120;&#x79;&#46;&#x63;&#110;\">&#x61;&#x64;&#109;&#105;&#x6e;&#x40;&#99;&#x6f;&#111;&#108;&#120;&#x79;&#46;&#x63;&#110;</a></td>\n<td align=\"right\">18888888888</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"left\">xy</td>\n<td align=\"center\"><a href=\"mailto:&#x61;&#97;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;\">&#x61;&#97;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;</a></td>\n<td align=\"right\">155</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"left\"></td>\n<td align=\"center\"></td>\n<td align=\"right\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<p>对齐方式：  </p>\n<blockquote>\n<ul>\n<li>左对齐：:–  </li>\n<li>右对齐：–:  </li>\n<li>居中对齐：:—-:  </li>\n</ul>\n</blockquote>\n<h2 id=\"10-高级技巧\"><a href=\"#10-高级技巧\" class=\"headerlink\" title=\"10. 高级技巧\"></a>10. 高级技巧</h2><p>支持的 HTML 元素  </p>\n<blockquote>\n<p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p>\n</blockquote>\n<p>目前支持的 HTML 元素有：<br>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如： </p>\n<blockquote>\n<p>使用&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</p>\n</blockquote>\n<blockquote>\n<p>显示结果为：<br>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p>\n</blockquote>\n<blockquote>\n<p>转义<br>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p>\n</blockquote>\n<p><strong>文本加粗</strong><br>** 正常显示星号 **</p>\n<blockquote>\n<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>\n<ul>\n<li>\\     反斜线  </li>\n<li>`     反引号  </li>\n<li>*     星号  </li>\n<li>_     下划线  </li>\n<li>{}    花括号  </li>\n<li>[]    方括号  </li>\n<li>()    小括号  </li>\n<li>#     井字号  </li>\n<li>+     加号  </li>\n<li>-     减号  </li>\n<li>.     英文句点  </li>\n<li>!     感叹号  </li>\n</ul>\n</blockquote>\n<h3 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h3><blockquote>\n<p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTex </p>\n</blockquote>\n"},{"layout":"post","title":"重开博客，重启人生","date":"2020-06-17T07:03:25.000Z","_content":"\n# 重开博客，重启人生\n## -写在圆满的和不圆满的2020\n\n***\n\n过去的2019年，有喜有悲，忙于工作的我们啊，有多少人认真的思考过人生的意义，思考过如何做真正的自己。  \n上半年为别人而忙碌，下半年为单位而碎心，工作是我们赖以生存的手段，不得不为啊，当一个人担起要多人合作的工作时，家已不是家，自己已不是自己。  \n夜已深，键盘的声音却还响个不停。孩子哭声还在耳帝回荡，老婆催促大宝功课的抱怨声也还声声在耳，长期没有得到足够睡眠的大脑时不时又在嗡嗡作响，个人记性有了长足的下降，导致年终工作错误百出。  \n曾说，同一个人不宜在同一个地方同一个岗位呆的时间太久，深有体会，于是惰性出来了，积极性降低了。虽然在年底又上个新台阶，但总的来说却不是那么开心。  \n去年四川那个自杀的女孩曾发博告戒后来的同志们，但凡有一丝丝的可能，千万不要进入体制内，这是一个毁灭梦想的地方。  \n今年以来，工作困难重重，老板见一次批评一次能力不足，工作推动不力。三人成虎，百语成谶，我是学心理学的，知道这对一个人的影响巨大，所以努力的让自己不受类似语言的影响，却还是难以避免。  \n\n***\n多年来的博客未能及时维护，已不想再折腾，故此用github建立一个静态博客，不为别的，只为记录一下自己的经历和心声，也许多年之后回头之时，还有令自己回味的东西。  \n\n人生苦短，不要太委屈自己。  \n\n特此立博，重启人生，好好而活，家有老小，你不能倒。  \n","source":"_posts/2020-06-17-restart-blog.md","raw":"---\nlayout: post\ntitle:  \"重开博客，重启人生\"\ndate:   2020-06-17 15:03:25\ncategories: 生活随笔\ntags: 人生与哲学\n---\n\n# 重开博客，重启人生\n## -写在圆满的和不圆满的2020\n\n***\n\n过去的2019年，有喜有悲，忙于工作的我们啊，有多少人认真的思考过人生的意义，思考过如何做真正的自己。  \n上半年为别人而忙碌，下半年为单位而碎心，工作是我们赖以生存的手段，不得不为啊，当一个人担起要多人合作的工作时，家已不是家，自己已不是自己。  \n夜已深，键盘的声音却还响个不停。孩子哭声还在耳帝回荡，老婆催促大宝功课的抱怨声也还声声在耳，长期没有得到足够睡眠的大脑时不时又在嗡嗡作响，个人记性有了长足的下降，导致年终工作错误百出。  \n曾说，同一个人不宜在同一个地方同一个岗位呆的时间太久，深有体会，于是惰性出来了，积极性降低了。虽然在年底又上个新台阶，但总的来说却不是那么开心。  \n去年四川那个自杀的女孩曾发博告戒后来的同志们，但凡有一丝丝的可能，千万不要进入体制内，这是一个毁灭梦想的地方。  \n今年以来，工作困难重重，老板见一次批评一次能力不足，工作推动不力。三人成虎，百语成谶，我是学心理学的，知道这对一个人的影响巨大，所以努力的让自己不受类似语言的影响，却还是难以避免。  \n\n***\n多年来的博客未能及时维护，已不想再折腾，故此用github建立一个静态博客，不为别的，只为记录一下自己的经历和心声，也许多年之后回头之时，还有令自己回味的东西。  \n\n人生苦短，不要太委屈自己。  \n\n特此立博，重启人生，好好而活，家有老小，你不能倒。  \n","slug":"restart-blog","published":1,"updated":"2021-03-04T17:05:15.039Z","_id":"cklt3r3d300018cw498nc7h0t","comments":1,"photos":[],"link":"","content":"<h1 id=\"重开博客，重启人生\"><a href=\"#重开博客，重启人生\" class=\"headerlink\" title=\"重开博客，重启人生\"></a>重开博客，重启人生</h1><h2 id=\"写在圆满的和不圆满的2020\"><a href=\"#写在圆满的和不圆满的2020\" class=\"headerlink\" title=\"-写在圆满的和不圆满的2020\"></a>-写在圆满的和不圆满的2020</h2><hr>\n<p>过去的2019年，有喜有悲，忙于工作的我们啊，有多少人认真的思考过人生的意义，思考过如何做真正的自己。<br>上半年为别人而忙碌，下半年为单位而碎心，工作是我们赖以生存的手段，不得不为啊，当一个人担起要多人合作的工作时，家已不是家，自己已不是自己。<br>夜已深，键盘的声音却还响个不停。孩子哭声还在耳帝回荡，老婆催促大宝功课的抱怨声也还声声在耳，长期没有得到足够睡眠的大脑时不时又在嗡嗡作响，个人记性有了长足的下降，导致年终工作错误百出。<br>曾说，同一个人不宜在同一个地方同一个岗位呆的时间太久，深有体会，于是惰性出来了，积极性降低了。虽然在年底又上个新台阶，但总的来说却不是那么开心。<br>去年四川那个自杀的女孩曾发博告戒后来的同志们，但凡有一丝丝的可能，千万不要进入体制内，这是一个毁灭梦想的地方。<br>今年以来，工作困难重重，老板见一次批评一次能力不足，工作推动不力。三人成虎，百语成谶，我是学心理学的，知道这对一个人的影响巨大，所以努力的让自己不受类似语言的影响，却还是难以避免。  </p>\n<hr>\n<p>多年来的博客未能及时维护，已不想再折腾，故此用github建立一个静态博客，不为别的，只为记录一下自己的经历和心声，也许多年之后回头之时，还有令自己回味的东西。  </p>\n<p>人生苦短，不要太委屈自己。  </p>\n<p>特此立博，重启人生，好好而活，家有老小，你不能倒。  </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"重开博客，重启人生\"><a href=\"#重开博客，重启人生\" class=\"headerlink\" title=\"重开博客，重启人生\"></a>重开博客，重启人生</h1><h2 id=\"写在圆满的和不圆满的2020\"><a href=\"#写在圆满的和不圆满的2020\" class=\"headerlink\" title=\"-写在圆满的和不圆满的2020\"></a>-写在圆满的和不圆满的2020</h2><hr>\n<p>过去的2019年，有喜有悲，忙于工作的我们啊，有多少人认真的思考过人生的意义，思考过如何做真正的自己。<br>上半年为别人而忙碌，下半年为单位而碎心，工作是我们赖以生存的手段，不得不为啊，当一个人担起要多人合作的工作时，家已不是家，自己已不是自己。<br>夜已深，键盘的声音却还响个不停。孩子哭声还在耳帝回荡，老婆催促大宝功课的抱怨声也还声声在耳，长期没有得到足够睡眠的大脑时不时又在嗡嗡作响，个人记性有了长足的下降，导致年终工作错误百出。<br>曾说，同一个人不宜在同一个地方同一个岗位呆的时间太久，深有体会，于是惰性出来了，积极性降低了。虽然在年底又上个新台阶，但总的来说却不是那么开心。<br>去年四川那个自杀的女孩曾发博告戒后来的同志们，但凡有一丝丝的可能，千万不要进入体制内，这是一个毁灭梦想的地方。<br>今年以来，工作困难重重，老板见一次批评一次能力不足，工作推动不力。三人成虎，百语成谶，我是学心理学的，知道这对一个人的影响巨大，所以努力的让自己不受类似语言的影响，却还是难以避免。  </p>\n<hr>\n<p>多年来的博客未能及时维护，已不想再折腾，故此用github建立一个静态博客，不为别的，只为记录一下自己的经历和心声，也许多年之后回头之时，还有令自己回味的东西。  </p>\n<p>人生苦短，不要太委屈自己。  </p>\n<p>特此立博，重启人生，好好而活，家有老小，你不能倒。  </p>\n"},{"layout":"post","title":"Python经典习题代码","date":"2020-06-18T07:03:25.000Z","author":"coolxy","_content":"\n## 精心收集的Python经典习题代码\n\n### 1. 用4个数字组成多少个不重复3位数？\n```python\n    print('用2,4,8,9 `组成不重复的3位数：')\n    l=0\n    for i in (2,4,8,9):\n        for j in (2,4,8,9):\n            for k in (2,4,8,9):\n                if i!=j and i!=k and j!=k:\n                    print(i*100+j*10+k)\n                    l+=1\n                        print('共有%d个不同的3位数。'%l)\n```\n\n### 2.企业资金利润发放问题  \n\n'''\n企业发放的奖金根据利润提成。利润(profit)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；\n20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，\n超过100万元的部分按1%提成，从键盘输入当月利润profit，求应发放奖金总数？\n程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成长整型\n'''\n\n#### 方法1：比较笨的方法，才开始学的时候弄的\n\n```python\nbonus=0\nprofit=int(input('请输入你本月的业绩（总利润  元）：'))\nif profit>100000 :\n    if profit <=200000:\n        bonus = 100000 * 0.1 + (profit - 100000)*0.075\n    elif profit <=400000 :\n        bonus = 100000 * 0.1 + 100000 * 0.075+ (profit - 200000)*0.05\n    elif profit <= 600000 :\n        bonus = 100000 * 0.1 +100000*0.075 +200000*0.05+ (profit - 400000)*0.03\n    elif profit <= 1000000 :\n        bonus = 100000 * 0.1 +100000*0.075 +200000*0.05+ 200000*0.03+(profit - 600000)*0.0015\n    elif profit >1000000 :\n        bonus = 100000 * 0.1 +100000*0.075 +200000*0.05+ 200000*0.03+400000*0.015+(profit - 1000000)*0.001\n\nelse:\n    bonus = profit * 0.1\n   \nprint('你本月的业绩利润是：%d 元，共发放奖金：%d 元，继续加油！'%(profit,bonus))\n```\n\n#### 方法2：利用函数，自行调用\n\n函数1：\n\n```python\ndef test_02(profit): \n    rate = [0.1, 0.075, 0.05, 0.03, 0.015, 0.01] \n    amount = [10, 20, 40, 60, 100] \n    sum0 = amount[0] * rate[0] \n    sum1 = sum0 + (amount[1] - amount[0]) * rate[1] \n    sum2 = sum1 + (amount[2] - amount[1]) * rate[2] \n    sum3 = sum2 + (amount[3] - amount[2]) * rate[3] \n    sum4 = sum3 + (amount[4] - amount[3]) * rate[4] \n    if profit <= 10: \n        return profit * rate[0] \n    elif (profit > 10) and (profit <= 20): \n        return sum0 + (profit - amount[0]) * rate[1] \n    elif (profit > 20) and (profit <= 40): \n        return sum1 + (profit - amount[1]) * rate[2] \n    elif (profit > 40) and (profit <= 60): \n        return sum2 + (profit - amount[2]) * rate[3] \n    elif (profit > 60) and (profit <= 100): \n        return sum3 + (profit - amount[3]) * rate[4] \n    elif profit > 100: \n        return sum4 + (profit - amount[4]) * rate[5] \n    else: print(\"输入金额错误！\") \n```\n\n函数2：    \n\n```python\ndef test_02_1(): \n    i = int(input(\"净利润:\")) \n    arr = [1000000, 600000, 400000, 200000, 100000, 0] \n    rat = [0.01, 0.015, 0.03, 0.05, 0.075, 0.1] \n    r = 0 \n    for idx in range(0, 6): \n    \tif i > arr[idx]: \n            # print(idx) \n            r += (i - arr[idx]) * rat[idx] \n            # print((i - arr[idx]) * rat[idx]) \n            i = arr[idx] \n            print(r) \n            return r\n```\n\n### 3. 判断1000以内的完全平方数\n\n问题：一个整数，它加上100后是一个完全平方数，再加上268又是一个完全平方数，\n请问该数是多少？\n\n```python\nimport math\n\n#笨办法1,效率低下：\ndef check_sqrt1():\n    print('用多个循环嵌套来解决')\n    num1=1\n    num2=False\n    while num1<1000:\n        for i in range(num2,num1):\n            for j in range(num2,num1):\n                for k in range(num2,num1):\n                    if j**2==i+100 and k**2==i+268:\n                        print('这个数是%d'%i)\n                        num2=True\n        if num2:\n            break\n        num1+=1\n```\n\n​    \n\n```python\ndef check_sqrt2():\n    #用数学函数平方根sqrt()来解决，效率高\n    print('用int(sqrt())==sqrt() 来判断')\n    num=1\n    while num <1000:\n        if math.sqrt(num + 100)==int(math.sqrt(num+100)) and math.sqrt(num+268)==int(math.sqrt(num+268)):\n            print('这个数是:%d  '%num)\n        num+=1\n\n#check_sqrt1()\ncheck_sqrt2()d  '%num)\n        num+=1\n```\n### 4. 判断一年中的第几天的问题\n\n问题描述：输入某年某月某日，判断这一天是这一年的第几天？\n\n思路：要判断这年有多少天，是不是闰年，再算是第几天\n\n闰年：被4整除、不被100整除，整百年被400整除\n\n```python\ndef day_in_year(date):\n    month_days=[31,28,31,30,31,30,31,31,30,31,30,31]\n    year=int(date[:4])\n    month=int(date[4:6])\n    day=int(date[6:])\n    print(year,month,day)\n    if year % 4==0 and year%100!=0 or year % 400==0:\n        month_days[1]=29\n    dayth=0\n    for i in range(month-1):\n        dayth+=month_days[i]\n    dayth+=day\n    return dayth\n\ndate=input('请输入日期，如：20200202：')\ndayth=day_in_year(date)\nprint('%s 在%s 年中是第%d天。'%(date,date[:4],dayth))\n```\n\n### 5.输入数字的排序问题\n\n有几个整数，请把这几个数由小到大输出\n\n```python\nimport math\n\ndef paixu(n): #这是经典的冒泡法排序\n    tmp=int\n    for i in range(len(n)):\n        for j in range(i+1,len(n)):\n            if n[i]>n[j]:\n                n[i],n[j]=n[j],n[i]\n    return n\n\nnum_list=[4,2,9,65,1]\nprint('原数字组：',num_list)\n\nprint('冒泡法排序：',paixu(num_list))\nnum_list.sort()\nprint('函数sort() 排序：',num_list)\n```\n### 6. 斐波那契数列\n```\ndef fib(n):\n    fib1=1\n    fib2=2\n    for i in range(n):\n        print(fib1)\n        fib1+=fib2\n        fib1,fib2 =fib2,fib1\n        time.sleep(0.05)\n        #print(fib1)\n    \nn=int(input('请输入斐波那契个数:'))\nfib(n)\n```\n### 7. 输出 9*9 乘法口诀表\n输出 9*9 乘法口诀表  \n```\nfor i in range(1,10): #乘数1-9循环\n    for j in range(1,i+1):#乘数1-i\n        print('%d*%d=%d  '%(i,j,i*j),end='') #\n        if i == j:\n            print('\\n')\n```\n### 9. 输出1000内的水仙花数  \n打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个“水仙花数”，因为153=1的三次方＋5的三次方＋3的三次方。  \n```\nfor i in range(100,1000):\n    bai=int(i/100)\n    shi=int(((i-int(i/100)*100))/10)\n    ge=int((i-int(i/10)*10))\n    if i==bai**3+shi**3+ge**3:\n        print('%d = %d + %d + %d '%(i,bai**3,shi**3,ge**3))\n```\n### 10. 将一个正整数分解质因数  \n例如：输入90,打印出90=2\\*3\\*3\\*5  \n```\ndef zys(num):\n    for i in range(2,num):\n        if num%i==0:\n            yinshu.append(str(i))\n            if num/i >i:\n                zys(num//i)\n            elif num/i>1:\n                yinshu.append(str(num//i))\n            break\n    else:\n        yinshu.append(str(num))\n\nnum=int(input('请输入一个数字：'))\nif num <=1:\n    num = int(input('输入错误，请重新输入：'))\n    \nyinshu=[]\nzys(num)\ny='+'.join(yinshu)\nprint(num,'=',y)\n```\n### 11. 汉诺塔问题  \n```\ndef hano(num,a,b,c):\n    if num ==1:\n        print(a,' -> ',c)\n        return\n    else:\n        hano(num-1,a,c,b)\n        print(a,' -> ',c)\n        hano(num-1,b,a,c)\n        return\n\nnum=int(input('请输入要移动的汉诺塔层数：'))\na,b,c='A','B','C'\n\nhano(num,a,b,c)\n```\n### 12. 输出完数  \n完数：一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。\n```\ndef wanshu(start,end):\n    for i in range(start,end):\n        num_list=[1]\n        for j in range(2,i):\n            if i%j==0:\n                num_list.append(j)\n                num_list.append(i//j)\n        if len(num_list)>2:\n            s=0\n            num_list=list(set(num_list))\n            num_list.sort()\n            for k in num_list:\n                s+=k\n            if s==i:\n                print(num_list)\n                print(sum(num_list))\n    \nwanshu(1,10000)\n```\n### 13. 球体下落问题  \n一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？  \n#### 方法1（我自己的）\n```\nh=100.0\ns=0.0\nfor i in range(1,11):\n    s+=h    #每次下降的距离\n    h=h/2    #弹起的距离\n    print('第%d次弹起%f米，球已行动了%f米。'\\\n    \t%(i,h,s))\n    if i <10:\n        s+=h    #这h是前九次下落的距离，第十次不下落，总距离不再加\n    \nprint(h,'   ',s)\n```\n#### 方法2：\n```\ntour = []\nheight = []\nhei = 100.0  # 起始高度\ntim = 10  # 次数\nfor i in range(1, tim + 1):\n     # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2 * hei)\n    hei /= 2\n    height.append(hei)\nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))\n```\n### 14.猴子吃桃问题\n题目：猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个，第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。程序分析：采取逆向思维的方法，从后往前推断。\n```\nbea_sum=1\nfor i in range(10,0,-1):\n    if i ==10:\n        bea_sum=1\n    else:\n        bea_sum=(bea_sum+1)*2\n  \nprint('第1天共摘了%d个桃子'%bea_sum)\n\nfor i in range(1,11):\n    print('第%d 天吃了%d 个桃子'%(i,bea_sum//2+1))\n    bea_sum=bea_sum//2 -1\n```\n### 15. 求阶乘\n#### 15.1 函数递归\n```\ndef jiec(n):\n    if n==1:\n        return 1\n    else:\n        return jiec(n-1)*n\n    \nn=int(input('请输入要求阶乘的数字：'))\njie=jiec(n)\nprint('递归函数：\\n%d 的阶乘是：%d '%(n,jie))\nprint('%d!=%d \\n'%(n,jie))\n```\n#### 15.2 for循环：\n```\njie2=1\nfor i in range(1,n+1):\n    jie2*=i\nprint('for循环求解：\\n%d 的阶乘是：%d \\n'%(n,jie2))\n```\n#### 15.3 while 循环求解\n```\njie3=1\nwhile i>=1:\n    jie3 *=i\n    i-=1\nprint('while循环求解：\\n%d 的阶乘是：%d '%(n,jie3))\n```\n### 16. 输出101-200（区间数可自定）以内的素数\n判断101-200之间有多少个素数，并输出所有素数。\n```\ncount=0\nfor i in range(101,1001):\n    for j in range(2,int(i/2)):\n        if i%j==0 : #int(i/j)==i/j:\n            print('%d 不是素数:%d=%d x %d'%(i,i,j,i/j))\n            break\n    else:\n        count+=1\n        print(i ,' 是素数')\n            \t\nprint('101-200之间共有%d个素数'%count)\n```\n### 17. \n\n***\n## 以下问题摘自<https://codingbat.com/>  \n### monkey_trouble\nWe have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.\n\nmonkey_trouble(True, True) → True\nmonkey_trouble(False, False) → True\nmonkey_trouble(True, False) → False\n```\ndef mokey_trouble(a_smile,b_smile):\n    if (a_smile and b_smile) or (not a_smile and not b_smile):\n        return True\n    else:\n    return False\n```","source":"_posts/2020-06-18-python-exercise.md","raw":"---\nlayout: post\ntitle:  \"Python经典习题代码\"\ndate:   2020-06-18 15:03:25\nauthor: coolxy\ncategories: \n  - 教程技巧\n  - python\ntags: python\n---\n\n## 精心收集的Python经典习题代码\n\n### 1. 用4个数字组成多少个不重复3位数？\n```python\n    print('用2,4,8,9 `组成不重复的3位数：')\n    l=0\n    for i in (2,4,8,9):\n        for j in (2,4,8,9):\n            for k in (2,4,8,9):\n                if i!=j and i!=k and j!=k:\n                    print(i*100+j*10+k)\n                    l+=1\n                        print('共有%d个不同的3位数。'%l)\n```\n\n### 2.企业资金利润发放问题  \n\n'''\n企业发放的奖金根据利润提成。利润(profit)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；\n20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，\n超过100万元的部分按1%提成，从键盘输入当月利润profit，求应发放奖金总数？\n程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成长整型\n'''\n\n#### 方法1：比较笨的方法，才开始学的时候弄的\n\n```python\nbonus=0\nprofit=int(input('请输入你本月的业绩（总利润  元）：'))\nif profit>100000 :\n    if profit <=200000:\n        bonus = 100000 * 0.1 + (profit - 100000)*0.075\n    elif profit <=400000 :\n        bonus = 100000 * 0.1 + 100000 * 0.075+ (profit - 200000)*0.05\n    elif profit <= 600000 :\n        bonus = 100000 * 0.1 +100000*0.075 +200000*0.05+ (profit - 400000)*0.03\n    elif profit <= 1000000 :\n        bonus = 100000 * 0.1 +100000*0.075 +200000*0.05+ 200000*0.03+(profit - 600000)*0.0015\n    elif profit >1000000 :\n        bonus = 100000 * 0.1 +100000*0.075 +200000*0.05+ 200000*0.03+400000*0.015+(profit - 1000000)*0.001\n\nelse:\n    bonus = profit * 0.1\n   \nprint('你本月的业绩利润是：%d 元，共发放奖金：%d 元，继续加油！'%(profit,bonus))\n```\n\n#### 方法2：利用函数，自行调用\n\n函数1：\n\n```python\ndef test_02(profit): \n    rate = [0.1, 0.075, 0.05, 0.03, 0.015, 0.01] \n    amount = [10, 20, 40, 60, 100] \n    sum0 = amount[0] * rate[0] \n    sum1 = sum0 + (amount[1] - amount[0]) * rate[1] \n    sum2 = sum1 + (amount[2] - amount[1]) * rate[2] \n    sum3 = sum2 + (amount[3] - amount[2]) * rate[3] \n    sum4 = sum3 + (amount[4] - amount[3]) * rate[4] \n    if profit <= 10: \n        return profit * rate[0] \n    elif (profit > 10) and (profit <= 20): \n        return sum0 + (profit - amount[0]) * rate[1] \n    elif (profit > 20) and (profit <= 40): \n        return sum1 + (profit - amount[1]) * rate[2] \n    elif (profit > 40) and (profit <= 60): \n        return sum2 + (profit - amount[2]) * rate[3] \n    elif (profit > 60) and (profit <= 100): \n        return sum3 + (profit - amount[3]) * rate[4] \n    elif profit > 100: \n        return sum4 + (profit - amount[4]) * rate[5] \n    else: print(\"输入金额错误！\") \n```\n\n函数2：    \n\n```python\ndef test_02_1(): \n    i = int(input(\"净利润:\")) \n    arr = [1000000, 600000, 400000, 200000, 100000, 0] \n    rat = [0.01, 0.015, 0.03, 0.05, 0.075, 0.1] \n    r = 0 \n    for idx in range(0, 6): \n    \tif i > arr[idx]: \n            # print(idx) \n            r += (i - arr[idx]) * rat[idx] \n            # print((i - arr[idx]) * rat[idx]) \n            i = arr[idx] \n            print(r) \n            return r\n```\n\n### 3. 判断1000以内的完全平方数\n\n问题：一个整数，它加上100后是一个完全平方数，再加上268又是一个完全平方数，\n请问该数是多少？\n\n```python\nimport math\n\n#笨办法1,效率低下：\ndef check_sqrt1():\n    print('用多个循环嵌套来解决')\n    num1=1\n    num2=False\n    while num1<1000:\n        for i in range(num2,num1):\n            for j in range(num2,num1):\n                for k in range(num2,num1):\n                    if j**2==i+100 and k**2==i+268:\n                        print('这个数是%d'%i)\n                        num2=True\n        if num2:\n            break\n        num1+=1\n```\n\n​    \n\n```python\ndef check_sqrt2():\n    #用数学函数平方根sqrt()来解决，效率高\n    print('用int(sqrt())==sqrt() 来判断')\n    num=1\n    while num <1000:\n        if math.sqrt(num + 100)==int(math.sqrt(num+100)) and math.sqrt(num+268)==int(math.sqrt(num+268)):\n            print('这个数是:%d  '%num)\n        num+=1\n\n#check_sqrt1()\ncheck_sqrt2()d  '%num)\n        num+=1\n```\n### 4. 判断一年中的第几天的问题\n\n问题描述：输入某年某月某日，判断这一天是这一年的第几天？\n\n思路：要判断这年有多少天，是不是闰年，再算是第几天\n\n闰年：被4整除、不被100整除，整百年被400整除\n\n```python\ndef day_in_year(date):\n    month_days=[31,28,31,30,31,30,31,31,30,31,30,31]\n    year=int(date[:4])\n    month=int(date[4:6])\n    day=int(date[6:])\n    print(year,month,day)\n    if year % 4==0 and year%100!=0 or year % 400==0:\n        month_days[1]=29\n    dayth=0\n    for i in range(month-1):\n        dayth+=month_days[i]\n    dayth+=day\n    return dayth\n\ndate=input('请输入日期，如：20200202：')\ndayth=day_in_year(date)\nprint('%s 在%s 年中是第%d天。'%(date,date[:4],dayth))\n```\n\n### 5.输入数字的排序问题\n\n有几个整数，请把这几个数由小到大输出\n\n```python\nimport math\n\ndef paixu(n): #这是经典的冒泡法排序\n    tmp=int\n    for i in range(len(n)):\n        for j in range(i+1,len(n)):\n            if n[i]>n[j]:\n                n[i],n[j]=n[j],n[i]\n    return n\n\nnum_list=[4,2,9,65,1]\nprint('原数字组：',num_list)\n\nprint('冒泡法排序：',paixu(num_list))\nnum_list.sort()\nprint('函数sort() 排序：',num_list)\n```\n### 6. 斐波那契数列\n```\ndef fib(n):\n    fib1=1\n    fib2=2\n    for i in range(n):\n        print(fib1)\n        fib1+=fib2\n        fib1,fib2 =fib2,fib1\n        time.sleep(0.05)\n        #print(fib1)\n    \nn=int(input('请输入斐波那契个数:'))\nfib(n)\n```\n### 7. 输出 9*9 乘法口诀表\n输出 9*9 乘法口诀表  \n```\nfor i in range(1,10): #乘数1-9循环\n    for j in range(1,i+1):#乘数1-i\n        print('%d*%d=%d  '%(i,j,i*j),end='') #\n        if i == j:\n            print('\\n')\n```\n### 9. 输出1000内的水仙花数  \n打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个“水仙花数”，因为153=1的三次方＋5的三次方＋3的三次方。  \n```\nfor i in range(100,1000):\n    bai=int(i/100)\n    shi=int(((i-int(i/100)*100))/10)\n    ge=int((i-int(i/10)*10))\n    if i==bai**3+shi**3+ge**3:\n        print('%d = %d + %d + %d '%(i,bai**3,shi**3,ge**3))\n```\n### 10. 将一个正整数分解质因数  \n例如：输入90,打印出90=2\\*3\\*3\\*5  \n```\ndef zys(num):\n    for i in range(2,num):\n        if num%i==0:\n            yinshu.append(str(i))\n            if num/i >i:\n                zys(num//i)\n            elif num/i>1:\n                yinshu.append(str(num//i))\n            break\n    else:\n        yinshu.append(str(num))\n\nnum=int(input('请输入一个数字：'))\nif num <=1:\n    num = int(input('输入错误，请重新输入：'))\n    \nyinshu=[]\nzys(num)\ny='+'.join(yinshu)\nprint(num,'=',y)\n```\n### 11. 汉诺塔问题  \n```\ndef hano(num,a,b,c):\n    if num ==1:\n        print(a,' -> ',c)\n        return\n    else:\n        hano(num-1,a,c,b)\n        print(a,' -> ',c)\n        hano(num-1,b,a,c)\n        return\n\nnum=int(input('请输入要移动的汉诺塔层数：'))\na,b,c='A','B','C'\n\nhano(num,a,b,c)\n```\n### 12. 输出完数  \n完数：一个数如果恰好等于它的因子之和，这个数就称为\"完数\"。例如6=1＋2＋3.编程找出1000以内的所有完数。\n```\ndef wanshu(start,end):\n    for i in range(start,end):\n        num_list=[1]\n        for j in range(2,i):\n            if i%j==0:\n                num_list.append(j)\n                num_list.append(i//j)\n        if len(num_list)>2:\n            s=0\n            num_list=list(set(num_list))\n            num_list.sort()\n            for k in num_list:\n                s+=k\n            if s==i:\n                print(num_list)\n                print(sum(num_list))\n    \nwanshu(1,10000)\n```\n### 13. 球体下落问题  \n一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？  \n#### 方法1（我自己的）\n```\nh=100.0\ns=0.0\nfor i in range(1,11):\n    s+=h    #每次下降的距离\n    h=h/2    #弹起的距离\n    print('第%d次弹起%f米，球已行动了%f米。'\\\n    \t%(i,h,s))\n    if i <10:\n        s+=h    #这h是前九次下落的距离，第十次不下落，总距离不再加\n    \nprint(h,'   ',s)\n```\n#### 方法2：\n```\ntour = []\nheight = []\nhei = 100.0  # 起始高度\ntim = 10  # 次数\nfor i in range(1, tim + 1):\n     # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）\n    if i == 1:\n        tour.append(hei)\n    else:\n        tour.append(2 * hei)\n    hei /= 2\n    height.append(hei)\nprint('总高度：tour = {0}'.format(sum(tour)))\nprint('第10次反弹高度：height = {0}'.format(height[-1]))\n```\n### 14.猴子吃桃问题\n题目：猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个，第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。程序分析：采取逆向思维的方法，从后往前推断。\n```\nbea_sum=1\nfor i in range(10,0,-1):\n    if i ==10:\n        bea_sum=1\n    else:\n        bea_sum=(bea_sum+1)*2\n  \nprint('第1天共摘了%d个桃子'%bea_sum)\n\nfor i in range(1,11):\n    print('第%d 天吃了%d 个桃子'%(i,bea_sum//2+1))\n    bea_sum=bea_sum//2 -1\n```\n### 15. 求阶乘\n#### 15.1 函数递归\n```\ndef jiec(n):\n    if n==1:\n        return 1\n    else:\n        return jiec(n-1)*n\n    \nn=int(input('请输入要求阶乘的数字：'))\njie=jiec(n)\nprint('递归函数：\\n%d 的阶乘是：%d '%(n,jie))\nprint('%d!=%d \\n'%(n,jie))\n```\n#### 15.2 for循环：\n```\njie2=1\nfor i in range(1,n+1):\n    jie2*=i\nprint('for循环求解：\\n%d 的阶乘是：%d \\n'%(n,jie2))\n```\n#### 15.3 while 循环求解\n```\njie3=1\nwhile i>=1:\n    jie3 *=i\n    i-=1\nprint('while循环求解：\\n%d 的阶乘是：%d '%(n,jie3))\n```\n### 16. 输出101-200（区间数可自定）以内的素数\n判断101-200之间有多少个素数，并输出所有素数。\n```\ncount=0\nfor i in range(101,1001):\n    for j in range(2,int(i/2)):\n        if i%j==0 : #int(i/j)==i/j:\n            print('%d 不是素数:%d=%d x %d'%(i,i,j,i/j))\n            break\n    else:\n        count+=1\n        print(i ,' 是素数')\n            \t\nprint('101-200之间共有%d个素数'%count)\n```\n### 17. \n\n***\n## 以下问题摘自<https://codingbat.com/>  \n### monkey_trouble\nWe have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.\n\nmonkey_trouble(True, True) → True\nmonkey_trouble(False, False) → True\nmonkey_trouble(True, False) → False\n```\ndef mokey_trouble(a_smile,b_smile):\n    if (a_smile and b_smile) or (not a_smile and not b_smile):\n        return True\n    else:\n    return False\n```","slug":"python-exercise","published":1,"updated":"2021-03-04T17:05:01.108Z","_id":"cklt3r3d600038cw426mgf7xd","comments":1,"photos":[],"link":"","content":"<h2 id=\"精心收集的Python经典习题代码\"><a href=\"#精心收集的Python经典习题代码\" class=\"headerlink\" title=\"精心收集的Python经典习题代码\"></a>精心收集的Python经典习题代码</h2><h3 id=\"1-用4个数字组成多少个不重复3位数？\"><a href=\"#1-用4个数字组成多少个不重复3位数？\" class=\"headerlink\" title=\"1. 用4个数字组成多少个不重复3位数？\"></a>1. 用4个数字组成多少个不重复3位数？</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">&#x27;用2,4,8,9 `组成不重复的3位数：&#x27;</span>)</span><br><span class=\"line\">l=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> (<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> (<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> (<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> i!=j <span class=\"keyword\">and</span> i!=k <span class=\"keyword\">and</span> j!=k:</span><br><span class=\"line\">                print(i*<span class=\"number\">100</span>+j*<span class=\"number\">10</span>+k)</span><br><span class=\"line\">                l+=<span class=\"number\">1</span></span><br><span class=\"line\">                    print(<span class=\"string\">&#x27;共有%d个不同的3位数。&#x27;</span>%l)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-企业资金利润发放问题\"><a href=\"#2-企业资金利润发放问题\" class=\"headerlink\" title=\"2.企业资金利润发放问题\"></a>2.企业资金利润发放问题</h3><p>‘’’<br>企业发放的奖金根据利润提成。利润(profit)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；<br>20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，<br>超过100万元的部分按1%提成，从键盘输入当月利润profit，求应发放奖金总数？<br>程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成长整型<br>‘’’</p>\n<h4 id=\"方法1：比较笨的方法，才开始学的时候弄的\"><a href=\"#方法1：比较笨的方法，才开始学的时候弄的\" class=\"headerlink\" title=\"方法1：比较笨的方法，才开始学的时候弄的\"></a>方法1：比较笨的方法，才开始学的时候弄的</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bonus=<span class=\"number\">0</span></span><br><span class=\"line\">profit=<span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你本月的业绩（总利润  元）：&#x27;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> profit&gt;<span class=\"number\">100000</span> :</span><br><span class=\"line\">    <span class=\"keyword\">if</span> profit &lt;=<span class=\"number\">200000</span>:</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> + (profit - <span class=\"number\">100000</span>)*<span class=\"number\">0.075</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &lt;=<span class=\"number\">400000</span> :</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> + <span class=\"number\">100000</span> * <span class=\"number\">0.075</span>+ (profit - <span class=\"number\">200000</span>)*<span class=\"number\">0.05</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &lt;= <span class=\"number\">600000</span> :</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> +<span class=\"number\">100000</span>*<span class=\"number\">0.075</span> +<span class=\"number\">200000</span>*<span class=\"number\">0.05</span>+ (profit - <span class=\"number\">400000</span>)*<span class=\"number\">0.03</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &lt;= <span class=\"number\">1000000</span> :</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> +<span class=\"number\">100000</span>*<span class=\"number\">0.075</span> +<span class=\"number\">200000</span>*<span class=\"number\">0.05</span>+ <span class=\"number\">200000</span>*<span class=\"number\">0.03</span>+(profit - <span class=\"number\">600000</span>)*<span class=\"number\">0.0015</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &gt;<span class=\"number\">1000000</span> :</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> +<span class=\"number\">100000</span>*<span class=\"number\">0.075</span> +<span class=\"number\">200000</span>*<span class=\"number\">0.05</span>+ <span class=\"number\">200000</span>*<span class=\"number\">0.03</span>+<span class=\"number\">400000</span>*<span class=\"number\">0.015</span>+(profit - <span class=\"number\">1000000</span>)*<span class=\"number\">0.001</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    bonus = profit * <span class=\"number\">0.1</span></span><br><span class=\"line\">   </span><br><span class=\"line\">print(<span class=\"string\">&#x27;你本月的业绩利润是：%d 元，共发放奖金：%d 元，继续加油！&#x27;</span>%(profit,bonus))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"方法2：利用函数，自行调用\"><a href=\"#方法2：利用函数，自行调用\" class=\"headerlink\" title=\"方法2：利用函数，自行调用\"></a>方法2：利用函数，自行调用</h4><p>函数1：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_02</span>(<span class=\"params\">profit</span>):</span> </span><br><span class=\"line\">    rate = [<span class=\"number\">0.1</span>, <span class=\"number\">0.075</span>, <span class=\"number\">0.05</span>, <span class=\"number\">0.03</span>, <span class=\"number\">0.015</span>, <span class=\"number\">0.01</span>] </span><br><span class=\"line\">    amount = [<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">40</span>, <span class=\"number\">60</span>, <span class=\"number\">100</span>] </span><br><span class=\"line\">    sum0 = amount[<span class=\"number\">0</span>] * rate[<span class=\"number\">0</span>] </span><br><span class=\"line\">    sum1 = sum0 + (amount[<span class=\"number\">1</span>] - amount[<span class=\"number\">0</span>]) * rate[<span class=\"number\">1</span>] </span><br><span class=\"line\">    sum2 = sum1 + (amount[<span class=\"number\">2</span>] - amount[<span class=\"number\">1</span>]) * rate[<span class=\"number\">2</span>] </span><br><span class=\"line\">    sum3 = sum2 + (amount[<span class=\"number\">3</span>] - amount[<span class=\"number\">2</span>]) * rate[<span class=\"number\">3</span>] </span><br><span class=\"line\">    sum4 = sum3 + (amount[<span class=\"number\">4</span>] - amount[<span class=\"number\">3</span>]) * rate[<span class=\"number\">4</span>] </span><br><span class=\"line\">    <span class=\"keyword\">if</span> profit &lt;= <span class=\"number\">10</span>: </span><br><span class=\"line\">        <span class=\"keyword\">return</span> profit * rate[<span class=\"number\">0</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (profit &gt; <span class=\"number\">10</span>) <span class=\"keyword\">and</span> (profit &lt;= <span class=\"number\">20</span>): </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum0 + (profit - amount[<span class=\"number\">0</span>]) * rate[<span class=\"number\">1</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (profit &gt; <span class=\"number\">20</span>) <span class=\"keyword\">and</span> (profit &lt;= <span class=\"number\">40</span>): </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum1 + (profit - amount[<span class=\"number\">1</span>]) * rate[<span class=\"number\">2</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (profit &gt; <span class=\"number\">40</span>) <span class=\"keyword\">and</span> (profit &lt;= <span class=\"number\">60</span>): </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum2 + (profit - amount[<span class=\"number\">2</span>]) * rate[<span class=\"number\">3</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (profit &gt; <span class=\"number\">60</span>) <span class=\"keyword\">and</span> (profit &lt;= <span class=\"number\">100</span>): </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum3 + (profit - amount[<span class=\"number\">3</span>]) * rate[<span class=\"number\">4</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &gt; <span class=\"number\">100</span>: </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum4 + (profit - amount[<span class=\"number\">4</span>]) * rate[<span class=\"number\">5</span>] </span><br><span class=\"line\">    <span class=\"keyword\">else</span>: print(<span class=\"string\">&quot;输入金额错误！&quot;</span>) </span><br></pre></td></tr></table></figure>\n\n<p>函数2：    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_02_1</span>():</span> </span><br><span class=\"line\">    i = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;净利润:&quot;</span>)) </span><br><span class=\"line\">    arr = [<span class=\"number\">1000000</span>, <span class=\"number\">600000</span>, <span class=\"number\">400000</span>, <span class=\"number\">200000</span>, <span class=\"number\">100000</span>, <span class=\"number\">0</span>] </span><br><span class=\"line\">    rat = [<span class=\"number\">0.01</span>, <span class=\"number\">0.015</span>, <span class=\"number\">0.03</span>, <span class=\"number\">0.05</span>, <span class=\"number\">0.075</span>, <span class=\"number\">0.1</span>] </span><br><span class=\"line\">    r = <span class=\"number\">0</span> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">6</span>): </span><br><span class=\"line\">    \t<span class=\"keyword\">if</span> i &gt; arr[idx]: </span><br><span class=\"line\">            <span class=\"comment\"># print(idx) </span></span><br><span class=\"line\">            r += (i - arr[idx]) * rat[idx] </span><br><span class=\"line\">            <span class=\"comment\"># print((i - arr[idx]) * rat[idx]) </span></span><br><span class=\"line\">            i = arr[idx] </span><br><span class=\"line\">            print(r) </span><br><span class=\"line\">            <span class=\"keyword\">return</span> r</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-判断1000以内的完全平方数\"><a href=\"#3-判断1000以内的完全平方数\" class=\"headerlink\" title=\"3. 判断1000以内的完全平方数\"></a>3. 判断1000以内的完全平方数</h3><p>问题：一个整数，它加上100后是一个完全平方数，再加上268又是一个完全平方数，<br>请问该数是多少？</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#笨办法1,效率低下：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_sqrt1</span>():</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;用多个循环嵌套来解决&#x27;</span>)</span><br><span class=\"line\">    num1=<span class=\"number\">1</span></span><br><span class=\"line\">    num2=<span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> num1&lt;<span class=\"number\">1000</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num2,num1):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num2,num1):</span><br><span class=\"line\">                <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num2,num1):</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> j**<span class=\"number\">2</span>==i+<span class=\"number\">100</span> <span class=\"keyword\">and</span> k**<span class=\"number\">2</span>==i+<span class=\"number\">268</span>:</span><br><span class=\"line\">                        print(<span class=\"string\">&#x27;这个数是%d&#x27;</span>%i)</span><br><span class=\"line\">                        num2=<span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> num2:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        num1+=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>​    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_sqrt2</span>():</span></span><br><span class=\"line\">    <span class=\"comment\">#用数学函数平方根sqrt()来解决，效率高</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;用int(sqrt())==sqrt() 来判断&#x27;</span>)</span><br><span class=\"line\">    num=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> num &lt;<span class=\"number\">1000</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> math.sqrt(num + <span class=\"number\">100</span>)==<span class=\"built_in\">int</span>(math.sqrt(num+<span class=\"number\">100</span>)) <span class=\"keyword\">and</span> math.sqrt(num+<span class=\"number\">268</span>)==<span class=\"built_in\">int</span>(math.sqrt(num+<span class=\"number\">268</span>)):</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;这个数是:%d  &#x27;</span>%num)</span><br><span class=\"line\">        num+=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#check_sqrt1()</span></span><br><span class=\"line\">check_sqrt2()d  <span class=\"string\">&#x27;%num)</span></span><br><span class=\"line\"><span class=\"string\">        num+=1</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-判断一年中的第几天的问题\"><a href=\"#4-判断一年中的第几天的问题\" class=\"headerlink\" title=\"4. 判断一年中的第几天的问题\"></a>4. 判断一年中的第几天的问题</h3><p>问题描述：输入某年某月某日，判断这一天是这一年的第几天？</p>\n<p>思路：要判断这年有多少天，是不是闰年，再算是第几天</p>\n<p>闰年：被4整除、不被100整除，整百年被400整除</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">day_in_year</span>(<span class=\"params\">date</span>):</span></span><br><span class=\"line\">    month_days=[<span class=\"number\">31</span>,<span class=\"number\">28</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>]</span><br><span class=\"line\">    year=<span class=\"built_in\">int</span>(date[:<span class=\"number\">4</span>])</span><br><span class=\"line\">    month=<span class=\"built_in\">int</span>(date[<span class=\"number\">4</span>:<span class=\"number\">6</span>])</span><br><span class=\"line\">    day=<span class=\"built_in\">int</span>(date[<span class=\"number\">6</span>:])</span><br><span class=\"line\">    print(year,month,day)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> year % <span class=\"number\">4</span>==<span class=\"number\">0</span> <span class=\"keyword\">and</span> year%<span class=\"number\">100</span>!=<span class=\"number\">0</span> <span class=\"keyword\">or</span> year % <span class=\"number\">400</span>==<span class=\"number\">0</span>:</span><br><span class=\"line\">        month_days[<span class=\"number\">1</span>]=<span class=\"number\">29</span></span><br><span class=\"line\">    dayth=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(month-<span class=\"number\">1</span>):</span><br><span class=\"line\">        dayth+=month_days[i]</span><br><span class=\"line\">    dayth+=day</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dayth</span><br><span class=\"line\"></span><br><span class=\"line\">date=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入日期，如：20200202：&#x27;</span>)</span><br><span class=\"line\">dayth=day_in_year(date)</span><br><span class=\"line\">print(<span class=\"string\">&#x27;%s 在%s 年中是第%d天。&#x27;</span>%(date,date[:<span class=\"number\">4</span>],dayth))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-输入数字的排序问题\"><a href=\"#5-输入数字的排序问题\" class=\"headerlink\" title=\"5.输入数字的排序问题\"></a>5.输入数字的排序问题</h3><p>有几个整数，请把这几个数由小到大输出</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">paixu</span>(<span class=\"params\">n</span>):</span> <span class=\"comment\">#这是经典的冒泡法排序</span></span><br><span class=\"line\">    tmp=<span class=\"built_in\">int</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(n)):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i+<span class=\"number\">1</span>,<span class=\"built_in\">len</span>(n)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> n[i]&gt;n[j]:</span><br><span class=\"line\">                n[i],n[j]=n[j],n[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\"></span><br><span class=\"line\">num_list=[<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">65</span>,<span class=\"number\">1</span>]</span><br><span class=\"line\">print(<span class=\"string\">&#x27;原数字组：&#x27;</span>,num_list)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">&#x27;冒泡法排序：&#x27;</span>,paixu(num_list))</span><br><span class=\"line\">num_list.sort()</span><br><span class=\"line\">print(<span class=\"string\">&#x27;函数sort() 排序：&#x27;</span>,num_list)</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-斐波那契数列\"><a href=\"#6-斐波那契数列\" class=\"headerlink\" title=\"6. 斐波那契数列\"></a>6. 斐波那契数列</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def fib(n):</span><br><span class=\"line\">    fib1&#x3D;1</span><br><span class=\"line\">    fib2&#x3D;2</span><br><span class=\"line\">    for i in range(n):</span><br><span class=\"line\">        print(fib1)</span><br><span class=\"line\">        fib1+&#x3D;fib2</span><br><span class=\"line\">        fib1,fib2 &#x3D;fib2,fib1</span><br><span class=\"line\">        time.sleep(0.05)</span><br><span class=\"line\">        #print(fib1)</span><br><span class=\"line\">    </span><br><span class=\"line\">n&#x3D;int(input(&#39;请输入斐波那契个数:&#39;))</span><br><span class=\"line\">fib(n)</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-输出-9-9-乘法口诀表\"><a href=\"#7-输出-9-9-乘法口诀表\" class=\"headerlink\" title=\"7. 输出 9*9 乘法口诀表\"></a>7. 输出 9*9 乘法口诀表</h3><p>输出 9*9 乘法口诀表  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for i in range(1,10): #乘数1-9循环</span><br><span class=\"line\">    for j in range(1,i+1):#乘数1-i</span><br><span class=\"line\">        print(&#39;%d*%d&#x3D;%d  &#39;%(i,j,i*j),end&#x3D;&#39;&#39;) #</span><br><span class=\"line\">        if i &#x3D;&#x3D; j:</span><br><span class=\"line\">            print(&#39;\\n&#39;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-输出1000内的水仙花数\"><a href=\"#9-输出1000内的水仙花数\" class=\"headerlink\" title=\"9. 输出1000内的水仙花数\"></a>9. 输出1000内的水仙花数</h3><p>打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个“水仙花数”，因为153=1的三次方＋5的三次方＋3的三次方。  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for i in range(100,1000):</span><br><span class=\"line\">    bai&#x3D;int(i&#x2F;100)</span><br><span class=\"line\">    shi&#x3D;int(((i-int(i&#x2F;100)*100))&#x2F;10)</span><br><span class=\"line\">    ge&#x3D;int((i-int(i&#x2F;10)*10))</span><br><span class=\"line\">    if i&#x3D;&#x3D;bai**3+shi**3+ge**3:</span><br><span class=\"line\">        print(&#39;%d &#x3D; %d + %d + %d &#39;%(i,bai**3,shi**3,ge**3))</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-将一个正整数分解质因数\"><a href=\"#10-将一个正整数分解质因数\" class=\"headerlink\" title=\"10. 将一个正整数分解质因数\"></a>10. 将一个正整数分解质因数</h3><p>例如：输入90,打印出90=2*3*3*5  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def zys(num):</span><br><span class=\"line\">    for i in range(2,num):</span><br><span class=\"line\">        if num%i&#x3D;&#x3D;0:</span><br><span class=\"line\">            yinshu.append(str(i))</span><br><span class=\"line\">            if num&#x2F;i &gt;i:</span><br><span class=\"line\">                zys(num&#x2F;&#x2F;i)</span><br><span class=\"line\">            elif num&#x2F;i&gt;1:</span><br><span class=\"line\">                yinshu.append(str(num&#x2F;&#x2F;i))</span><br><span class=\"line\">            break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        yinshu.append(str(num))</span><br><span class=\"line\"></span><br><span class=\"line\">num&#x3D;int(input(&#39;请输入一个数字：&#39;))</span><br><span class=\"line\">if num &lt;&#x3D;1:</span><br><span class=\"line\">    num &#x3D; int(input(&#39;输入错误，请重新输入：&#39;))</span><br><span class=\"line\">    </span><br><span class=\"line\">yinshu&#x3D;[]</span><br><span class=\"line\">zys(num)</span><br><span class=\"line\">y&#x3D;&#39;+&#39;.join(yinshu)</span><br><span class=\"line\">print(num,&#39;&#x3D;&#39;,y)</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-汉诺塔问题\"><a href=\"#11-汉诺塔问题\" class=\"headerlink\" title=\"11. 汉诺塔问题\"></a>11. 汉诺塔问题</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def hano(num,a,b,c):</span><br><span class=\"line\">    if num &#x3D;&#x3D;1:</span><br><span class=\"line\">        print(a,&#39; -&gt; &#39;,c)</span><br><span class=\"line\">        return</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        hano(num-1,a,c,b)</span><br><span class=\"line\">        print(a,&#39; -&gt; &#39;,c)</span><br><span class=\"line\">        hano(num-1,b,a,c)</span><br><span class=\"line\">        return</span><br><span class=\"line\"></span><br><span class=\"line\">num&#x3D;int(input(&#39;请输入要移动的汉诺塔层数：&#39;))</span><br><span class=\"line\">a,b,c&#x3D;&#39;A&#39;,&#39;B&#39;,&#39;C&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">hano(num,a,b,c)</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-输出完数\"><a href=\"#12-输出完数\" class=\"headerlink\" title=\"12. 输出完数\"></a>12. 输出完数</h3><p>完数：一个数如果恰好等于它的因子之和，这个数就称为”完数”。例如6=1＋2＋3.编程找出1000以内的所有完数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def wanshu(start,end):</span><br><span class=\"line\">    for i in range(start,end):</span><br><span class=\"line\">        num_list&#x3D;[1]</span><br><span class=\"line\">        for j in range(2,i):</span><br><span class=\"line\">            if i%j&#x3D;&#x3D;0:</span><br><span class=\"line\">                num_list.append(j)</span><br><span class=\"line\">                num_list.append(i&#x2F;&#x2F;j)</span><br><span class=\"line\">        if len(num_list)&gt;2:</span><br><span class=\"line\">            s&#x3D;0</span><br><span class=\"line\">            num_list&#x3D;list(set(num_list))</span><br><span class=\"line\">            num_list.sort()</span><br><span class=\"line\">            for k in num_list:</span><br><span class=\"line\">                s+&#x3D;k</span><br><span class=\"line\">            if s&#x3D;&#x3D;i:</span><br><span class=\"line\">                print(num_list)</span><br><span class=\"line\">                print(sum(num_list))</span><br><span class=\"line\">    </span><br><span class=\"line\">wanshu(1,10000)</span><br></pre></td></tr></table></figure>\n<h3 id=\"13-球体下落问题\"><a href=\"#13-球体下落问题\" class=\"headerlink\" title=\"13. 球体下落问题\"></a>13. 球体下落问题</h3><p>一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？  </p>\n<h4 id=\"方法1（我自己的）\"><a href=\"#方法1（我自己的）\" class=\"headerlink\" title=\"方法1（我自己的）\"></a>方法1（我自己的）</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h&#x3D;100.0</span><br><span class=\"line\">s&#x3D;0.0</span><br><span class=\"line\">for i in range(1,11):</span><br><span class=\"line\">    s+&#x3D;h    #每次下降的距离</span><br><span class=\"line\">    h&#x3D;h&#x2F;2    #弹起的距离</span><br><span class=\"line\">    print(&#39;第%d次弹起%f米，球已行动了%f米。&#39;\\</span><br><span class=\"line\">    \t%(i,h,s))</span><br><span class=\"line\">    if i &lt;10:</span><br><span class=\"line\">        s+&#x3D;h    #这h是前九次下落的距离，第十次不下落，总距离不再加</span><br><span class=\"line\">    </span><br><span class=\"line\">print(h,&#39;   &#39;,s)</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法2：\"><a href=\"#方法2：\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tour &#x3D; []</span><br><span class=\"line\">height &#x3D; []</span><br><span class=\"line\">hei &#x3D; 100.0  # 起始高度</span><br><span class=\"line\">tim &#x3D; 10  # 次数</span><br><span class=\"line\">for i in range(1, tim + 1):</span><br><span class=\"line\">     # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）</span><br><span class=\"line\">    if i &#x3D;&#x3D; 1:</span><br><span class=\"line\">        tour.append(hei)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        tour.append(2 * hei)</span><br><span class=\"line\">    hei &#x2F;&#x3D; 2</span><br><span class=\"line\">    height.append(hei)</span><br><span class=\"line\">print(&#39;总高度：tour &#x3D; &#123;0&#125;&#39;.format(sum(tour)))</span><br><span class=\"line\">print(&#39;第10次反弹高度：height &#x3D; &#123;0&#125;&#39;.format(height[-1]))</span><br></pre></td></tr></table></figure>\n<h3 id=\"14-猴子吃桃问题\"><a href=\"#14-猴子吃桃问题\" class=\"headerlink\" title=\"14.猴子吃桃问题\"></a>14.猴子吃桃问题</h3><p>题目：猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个，第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。程序分析：采取逆向思维的方法，从后往前推断。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bea_sum&#x3D;1</span><br><span class=\"line\">for i in range(10,0,-1):</span><br><span class=\"line\">    if i &#x3D;&#x3D;10:</span><br><span class=\"line\">        bea_sum&#x3D;1</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        bea_sum&#x3D;(bea_sum+1)*2</span><br><span class=\"line\">  </span><br><span class=\"line\">print(&#39;第1天共摘了%d个桃子&#39;%bea_sum)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(1,11):</span><br><span class=\"line\">    print(&#39;第%d 天吃了%d 个桃子&#39;%(i,bea_sum&#x2F;&#x2F;2+1))</span><br><span class=\"line\">    bea_sum&#x3D;bea_sum&#x2F;&#x2F;2 -1</span><br></pre></td></tr></table></figure>\n<h3 id=\"15-求阶乘\"><a href=\"#15-求阶乘\" class=\"headerlink\" title=\"15. 求阶乘\"></a>15. 求阶乘</h3><h4 id=\"15-1-函数递归\"><a href=\"#15-1-函数递归\" class=\"headerlink\" title=\"15.1 函数递归\"></a>15.1 函数递归</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def jiec(n):</span><br><span class=\"line\">    if n&#x3D;&#x3D;1:</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return jiec(n-1)*n</span><br><span class=\"line\">    </span><br><span class=\"line\">n&#x3D;int(input(&#39;请输入要求阶乘的数字：&#39;))</span><br><span class=\"line\">jie&#x3D;jiec(n)</span><br><span class=\"line\">print(&#39;递归函数：\\n%d 的阶乘是：%d &#39;%(n,jie))</span><br><span class=\"line\">print(&#39;%d!&#x3D;%d \\n&#39;%(n,jie))</span><br></pre></td></tr></table></figure>\n<h4 id=\"15-2-for循环：\"><a href=\"#15-2-for循环：\" class=\"headerlink\" title=\"15.2 for循环：\"></a>15.2 for循环：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jie2&#x3D;1</span><br><span class=\"line\">for i in range(1,n+1):</span><br><span class=\"line\">    jie2*&#x3D;i</span><br><span class=\"line\">print(&#39;for循环求解：\\n%d 的阶乘是：%d \\n&#39;%(n,jie2))</span><br></pre></td></tr></table></figure>\n<h4 id=\"15-3-while-循环求解\"><a href=\"#15-3-while-循环求解\" class=\"headerlink\" title=\"15.3 while 循环求解\"></a>15.3 while 循环求解</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jie3&#x3D;1</span><br><span class=\"line\">while i&gt;&#x3D;1:</span><br><span class=\"line\">    jie3 *&#x3D;i</span><br><span class=\"line\">    i-&#x3D;1</span><br><span class=\"line\">print(&#39;while循环求解：\\n%d 的阶乘是：%d &#39;%(n,jie3))</span><br></pre></td></tr></table></figure>\n<h3 id=\"16-输出101-200（区间数可自定）以内的素数\"><a href=\"#16-输出101-200（区间数可自定）以内的素数\" class=\"headerlink\" title=\"16. 输出101-200（区间数可自定）以内的素数\"></a>16. 输出101-200（区间数可自定）以内的素数</h3><p>判断101-200之间有多少个素数，并输出所有素数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count&#x3D;0</span><br><span class=\"line\">for i in range(101,1001):</span><br><span class=\"line\">    for j in range(2,int(i&#x2F;2)):</span><br><span class=\"line\">        if i%j&#x3D;&#x3D;0 : #int(i&#x2F;j)&#x3D;&#x3D;i&#x2F;j:</span><br><span class=\"line\">            print(&#39;%d 不是素数:%d&#x3D;%d x %d&#39;%(i,i,j,i&#x2F;j))</span><br><span class=\"line\">            break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        count+&#x3D;1</span><br><span class=\"line\">        print(i ,&#39; 是素数&#39;)</span><br><span class=\"line\">            \t</span><br><span class=\"line\">print(&#39;101-200之间共有%d个素数&#39;%count)</span><br></pre></td></tr></table></figure>\n<h3 id=\"17\"><a href=\"#17\" class=\"headerlink\" title=\"17.\"></a>17.</h3><hr>\n<h2 id=\"以下问题摘自https-codingbat-com\"><a href=\"#以下问题摘自https-codingbat-com\" class=\"headerlink\" title=\"以下问题摘自https://codingbat.com/\"></a>以下问题摘自<a href=\"https://codingbat.com/\">https://codingbat.com/</a></h2><h3 id=\"monkey-trouble\"><a href=\"#monkey-trouble\" class=\"headerlink\" title=\"monkey_trouble\"></a>monkey_trouble</h3><p>We have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.</p>\n<p>monkey_trouble(True, True) → True<br>monkey_trouble(False, False) → True<br>monkey_trouble(True, False) → False</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def mokey_trouble(a_smile,b_smile):</span><br><span class=\"line\">    if (a_smile and b_smile) or (not a_smile and not b_smile):</span><br><span class=\"line\">        return True</span><br><span class=\"line\">    else:</span><br><span class=\"line\">    return False</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"精心收集的Python经典习题代码\"><a href=\"#精心收集的Python经典习题代码\" class=\"headerlink\" title=\"精心收集的Python经典习题代码\"></a>精心收集的Python经典习题代码</h2><h3 id=\"1-用4个数字组成多少个不重复3位数？\"><a href=\"#1-用4个数字组成多少个不重复3位数？\" class=\"headerlink\" title=\"1. 用4个数字组成多少个不重复3位数？\"></a>1. 用4个数字组成多少个不重复3位数？</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">&#x27;用2,4,8,9 `组成不重复的3位数：&#x27;</span>)</span><br><span class=\"line\">l=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> (<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> (<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> (<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> i!=j <span class=\"keyword\">and</span> i!=k <span class=\"keyword\">and</span> j!=k:</span><br><span class=\"line\">                print(i*<span class=\"number\">100</span>+j*<span class=\"number\">10</span>+k)</span><br><span class=\"line\">                l+=<span class=\"number\">1</span></span><br><span class=\"line\">                    print(<span class=\"string\">&#x27;共有%d个不同的3位数。&#x27;</span>%l)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-企业资金利润发放问题\"><a href=\"#2-企业资金利润发放问题\" class=\"headerlink\" title=\"2.企业资金利润发放问题\"></a>2.企业资金利润发放问题</h3><p>‘’’<br>企业发放的奖金根据利润提成。利润(profit)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；<br>20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，<br>超过100万元的部分按1%提成，从键盘输入当月利润profit，求应发放奖金总数？<br>程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成长整型<br>‘’’</p>\n<h4 id=\"方法1：比较笨的方法，才开始学的时候弄的\"><a href=\"#方法1：比较笨的方法，才开始学的时候弄的\" class=\"headerlink\" title=\"方法1：比较笨的方法，才开始学的时候弄的\"></a>方法1：比较笨的方法，才开始学的时候弄的</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bonus=<span class=\"number\">0</span></span><br><span class=\"line\">profit=<span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你本月的业绩（总利润  元）：&#x27;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> profit&gt;<span class=\"number\">100000</span> :</span><br><span class=\"line\">    <span class=\"keyword\">if</span> profit &lt;=<span class=\"number\">200000</span>:</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> + (profit - <span class=\"number\">100000</span>)*<span class=\"number\">0.075</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &lt;=<span class=\"number\">400000</span> :</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> + <span class=\"number\">100000</span> * <span class=\"number\">0.075</span>+ (profit - <span class=\"number\">200000</span>)*<span class=\"number\">0.05</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &lt;= <span class=\"number\">600000</span> :</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> +<span class=\"number\">100000</span>*<span class=\"number\">0.075</span> +<span class=\"number\">200000</span>*<span class=\"number\">0.05</span>+ (profit - <span class=\"number\">400000</span>)*<span class=\"number\">0.03</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &lt;= <span class=\"number\">1000000</span> :</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> +<span class=\"number\">100000</span>*<span class=\"number\">0.075</span> +<span class=\"number\">200000</span>*<span class=\"number\">0.05</span>+ <span class=\"number\">200000</span>*<span class=\"number\">0.03</span>+(profit - <span class=\"number\">600000</span>)*<span class=\"number\">0.0015</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &gt;<span class=\"number\">1000000</span> :</span><br><span class=\"line\">        bonus = <span class=\"number\">100000</span> * <span class=\"number\">0.1</span> +<span class=\"number\">100000</span>*<span class=\"number\">0.075</span> +<span class=\"number\">200000</span>*<span class=\"number\">0.05</span>+ <span class=\"number\">200000</span>*<span class=\"number\">0.03</span>+<span class=\"number\">400000</span>*<span class=\"number\">0.015</span>+(profit - <span class=\"number\">1000000</span>)*<span class=\"number\">0.001</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    bonus = profit * <span class=\"number\">0.1</span></span><br><span class=\"line\">   </span><br><span class=\"line\">print(<span class=\"string\">&#x27;你本月的业绩利润是：%d 元，共发放奖金：%d 元，继续加油！&#x27;</span>%(profit,bonus))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"方法2：利用函数，自行调用\"><a href=\"#方法2：利用函数，自行调用\" class=\"headerlink\" title=\"方法2：利用函数，自行调用\"></a>方法2：利用函数，自行调用</h4><p>函数1：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_02</span>(<span class=\"params\">profit</span>):</span> </span><br><span class=\"line\">    rate = [<span class=\"number\">0.1</span>, <span class=\"number\">0.075</span>, <span class=\"number\">0.05</span>, <span class=\"number\">0.03</span>, <span class=\"number\">0.015</span>, <span class=\"number\">0.01</span>] </span><br><span class=\"line\">    amount = [<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">40</span>, <span class=\"number\">60</span>, <span class=\"number\">100</span>] </span><br><span class=\"line\">    sum0 = amount[<span class=\"number\">0</span>] * rate[<span class=\"number\">0</span>] </span><br><span class=\"line\">    sum1 = sum0 + (amount[<span class=\"number\">1</span>] - amount[<span class=\"number\">0</span>]) * rate[<span class=\"number\">1</span>] </span><br><span class=\"line\">    sum2 = sum1 + (amount[<span class=\"number\">2</span>] - amount[<span class=\"number\">1</span>]) * rate[<span class=\"number\">2</span>] </span><br><span class=\"line\">    sum3 = sum2 + (amount[<span class=\"number\">3</span>] - amount[<span class=\"number\">2</span>]) * rate[<span class=\"number\">3</span>] </span><br><span class=\"line\">    sum4 = sum3 + (amount[<span class=\"number\">4</span>] - amount[<span class=\"number\">3</span>]) * rate[<span class=\"number\">4</span>] </span><br><span class=\"line\">    <span class=\"keyword\">if</span> profit &lt;= <span class=\"number\">10</span>: </span><br><span class=\"line\">        <span class=\"keyword\">return</span> profit * rate[<span class=\"number\">0</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (profit &gt; <span class=\"number\">10</span>) <span class=\"keyword\">and</span> (profit &lt;= <span class=\"number\">20</span>): </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum0 + (profit - amount[<span class=\"number\">0</span>]) * rate[<span class=\"number\">1</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (profit &gt; <span class=\"number\">20</span>) <span class=\"keyword\">and</span> (profit &lt;= <span class=\"number\">40</span>): </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum1 + (profit - amount[<span class=\"number\">1</span>]) * rate[<span class=\"number\">2</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (profit &gt; <span class=\"number\">40</span>) <span class=\"keyword\">and</span> (profit &lt;= <span class=\"number\">60</span>): </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum2 + (profit - amount[<span class=\"number\">2</span>]) * rate[<span class=\"number\">3</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (profit &gt; <span class=\"number\">60</span>) <span class=\"keyword\">and</span> (profit &lt;= <span class=\"number\">100</span>): </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum3 + (profit - amount[<span class=\"number\">3</span>]) * rate[<span class=\"number\">4</span>] </span><br><span class=\"line\">    <span class=\"keyword\">elif</span> profit &gt; <span class=\"number\">100</span>: </span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum4 + (profit - amount[<span class=\"number\">4</span>]) * rate[<span class=\"number\">5</span>] </span><br><span class=\"line\">    <span class=\"keyword\">else</span>: print(<span class=\"string\">&quot;输入金额错误！&quot;</span>) </span><br></pre></td></tr></table></figure>\n\n<p>函数2：    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test_02_1</span>():</span> </span><br><span class=\"line\">    i = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;净利润:&quot;</span>)) </span><br><span class=\"line\">    arr = [<span class=\"number\">1000000</span>, <span class=\"number\">600000</span>, <span class=\"number\">400000</span>, <span class=\"number\">200000</span>, <span class=\"number\">100000</span>, <span class=\"number\">0</span>] </span><br><span class=\"line\">    rat = [<span class=\"number\">0.01</span>, <span class=\"number\">0.015</span>, <span class=\"number\">0.03</span>, <span class=\"number\">0.05</span>, <span class=\"number\">0.075</span>, <span class=\"number\">0.1</span>] </span><br><span class=\"line\">    r = <span class=\"number\">0</span> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">6</span>): </span><br><span class=\"line\">    \t<span class=\"keyword\">if</span> i &gt; arr[idx]: </span><br><span class=\"line\">            <span class=\"comment\"># print(idx) </span></span><br><span class=\"line\">            r += (i - arr[idx]) * rat[idx] </span><br><span class=\"line\">            <span class=\"comment\"># print((i - arr[idx]) * rat[idx]) </span></span><br><span class=\"line\">            i = arr[idx] </span><br><span class=\"line\">            print(r) </span><br><span class=\"line\">            <span class=\"keyword\">return</span> r</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-判断1000以内的完全平方数\"><a href=\"#3-判断1000以内的完全平方数\" class=\"headerlink\" title=\"3. 判断1000以内的完全平方数\"></a>3. 判断1000以内的完全平方数</h3><p>问题：一个整数，它加上100后是一个完全平方数，再加上268又是一个完全平方数，<br>请问该数是多少？</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#笨办法1,效率低下：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_sqrt1</span>():</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;用多个循环嵌套来解决&#x27;</span>)</span><br><span class=\"line\">    num1=<span class=\"number\">1</span></span><br><span class=\"line\">    num2=<span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> num1&lt;<span class=\"number\">1000</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num2,num1):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num2,num1):</span><br><span class=\"line\">                <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num2,num1):</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> j**<span class=\"number\">2</span>==i+<span class=\"number\">100</span> <span class=\"keyword\">and</span> k**<span class=\"number\">2</span>==i+<span class=\"number\">268</span>:</span><br><span class=\"line\">                        print(<span class=\"string\">&#x27;这个数是%d&#x27;</span>%i)</span><br><span class=\"line\">                        num2=<span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> num2:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        num1+=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>​    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_sqrt2</span>():</span></span><br><span class=\"line\">    <span class=\"comment\">#用数学函数平方根sqrt()来解决，效率高</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;用int(sqrt())==sqrt() 来判断&#x27;</span>)</span><br><span class=\"line\">    num=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> num &lt;<span class=\"number\">1000</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> math.sqrt(num + <span class=\"number\">100</span>)==<span class=\"built_in\">int</span>(math.sqrt(num+<span class=\"number\">100</span>)) <span class=\"keyword\">and</span> math.sqrt(num+<span class=\"number\">268</span>)==<span class=\"built_in\">int</span>(math.sqrt(num+<span class=\"number\">268</span>)):</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;这个数是:%d  &#x27;</span>%num)</span><br><span class=\"line\">        num+=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#check_sqrt1()</span></span><br><span class=\"line\">check_sqrt2()d  <span class=\"string\">&#x27;%num)</span></span><br><span class=\"line\"><span class=\"string\">        num+=1</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-判断一年中的第几天的问题\"><a href=\"#4-判断一年中的第几天的问题\" class=\"headerlink\" title=\"4. 判断一年中的第几天的问题\"></a>4. 判断一年中的第几天的问题</h3><p>问题描述：输入某年某月某日，判断这一天是这一年的第几天？</p>\n<p>思路：要判断这年有多少天，是不是闰年，再算是第几天</p>\n<p>闰年：被4整除、不被100整除，整百年被400整除</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">day_in_year</span>(<span class=\"params\">date</span>):</span></span><br><span class=\"line\">    month_days=[<span class=\"number\">31</span>,<span class=\"number\">28</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>]</span><br><span class=\"line\">    year=<span class=\"built_in\">int</span>(date[:<span class=\"number\">4</span>])</span><br><span class=\"line\">    month=<span class=\"built_in\">int</span>(date[<span class=\"number\">4</span>:<span class=\"number\">6</span>])</span><br><span class=\"line\">    day=<span class=\"built_in\">int</span>(date[<span class=\"number\">6</span>:])</span><br><span class=\"line\">    print(year,month,day)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> year % <span class=\"number\">4</span>==<span class=\"number\">0</span> <span class=\"keyword\">and</span> year%<span class=\"number\">100</span>!=<span class=\"number\">0</span> <span class=\"keyword\">or</span> year % <span class=\"number\">400</span>==<span class=\"number\">0</span>:</span><br><span class=\"line\">        month_days[<span class=\"number\">1</span>]=<span class=\"number\">29</span></span><br><span class=\"line\">    dayth=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(month-<span class=\"number\">1</span>):</span><br><span class=\"line\">        dayth+=month_days[i]</span><br><span class=\"line\">    dayth+=day</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dayth</span><br><span class=\"line\"></span><br><span class=\"line\">date=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入日期，如：20200202：&#x27;</span>)</span><br><span class=\"line\">dayth=day_in_year(date)</span><br><span class=\"line\">print(<span class=\"string\">&#x27;%s 在%s 年中是第%d天。&#x27;</span>%(date,date[:<span class=\"number\">4</span>],dayth))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-输入数字的排序问题\"><a href=\"#5-输入数字的排序问题\" class=\"headerlink\" title=\"5.输入数字的排序问题\"></a>5.输入数字的排序问题</h3><p>有几个整数，请把这几个数由小到大输出</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">paixu</span>(<span class=\"params\">n</span>):</span> <span class=\"comment\">#这是经典的冒泡法排序</span></span><br><span class=\"line\">    tmp=<span class=\"built_in\">int</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(n)):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i+<span class=\"number\">1</span>,<span class=\"built_in\">len</span>(n)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> n[i]&gt;n[j]:</span><br><span class=\"line\">                n[i],n[j]=n[j],n[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\"></span><br><span class=\"line\">num_list=[<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">65</span>,<span class=\"number\">1</span>]</span><br><span class=\"line\">print(<span class=\"string\">&#x27;原数字组：&#x27;</span>,num_list)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">&#x27;冒泡法排序：&#x27;</span>,paixu(num_list))</span><br><span class=\"line\">num_list.sort()</span><br><span class=\"line\">print(<span class=\"string\">&#x27;函数sort() 排序：&#x27;</span>,num_list)</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-斐波那契数列\"><a href=\"#6-斐波那契数列\" class=\"headerlink\" title=\"6. 斐波那契数列\"></a>6. 斐波那契数列</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def fib(n):</span><br><span class=\"line\">    fib1&#x3D;1</span><br><span class=\"line\">    fib2&#x3D;2</span><br><span class=\"line\">    for i in range(n):</span><br><span class=\"line\">        print(fib1)</span><br><span class=\"line\">        fib1+&#x3D;fib2</span><br><span class=\"line\">        fib1,fib2 &#x3D;fib2,fib1</span><br><span class=\"line\">        time.sleep(0.05)</span><br><span class=\"line\">        #print(fib1)</span><br><span class=\"line\">    </span><br><span class=\"line\">n&#x3D;int(input(&#39;请输入斐波那契个数:&#39;))</span><br><span class=\"line\">fib(n)</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-输出-9-9-乘法口诀表\"><a href=\"#7-输出-9-9-乘法口诀表\" class=\"headerlink\" title=\"7. 输出 9*9 乘法口诀表\"></a>7. 输出 9*9 乘法口诀表</h3><p>输出 9*9 乘法口诀表  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for i in range(1,10): #乘数1-9循环</span><br><span class=\"line\">    for j in range(1,i+1):#乘数1-i</span><br><span class=\"line\">        print(&#39;%d*%d&#x3D;%d  &#39;%(i,j,i*j),end&#x3D;&#39;&#39;) #</span><br><span class=\"line\">        if i &#x3D;&#x3D; j:</span><br><span class=\"line\">            print(&#39;\\n&#39;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-输出1000内的水仙花数\"><a href=\"#9-输出1000内的水仙花数\" class=\"headerlink\" title=\"9. 输出1000内的水仙花数\"></a>9. 输出1000内的水仙花数</h3><p>打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个“水仙花数”，因为153=1的三次方＋5的三次方＋3的三次方。  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for i in range(100,1000):</span><br><span class=\"line\">    bai&#x3D;int(i&#x2F;100)</span><br><span class=\"line\">    shi&#x3D;int(((i-int(i&#x2F;100)*100))&#x2F;10)</span><br><span class=\"line\">    ge&#x3D;int((i-int(i&#x2F;10)*10))</span><br><span class=\"line\">    if i&#x3D;&#x3D;bai**3+shi**3+ge**3:</span><br><span class=\"line\">        print(&#39;%d &#x3D; %d + %d + %d &#39;%(i,bai**3,shi**3,ge**3))</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-将一个正整数分解质因数\"><a href=\"#10-将一个正整数分解质因数\" class=\"headerlink\" title=\"10. 将一个正整数分解质因数\"></a>10. 将一个正整数分解质因数</h3><p>例如：输入90,打印出90=2*3*3*5  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def zys(num):</span><br><span class=\"line\">    for i in range(2,num):</span><br><span class=\"line\">        if num%i&#x3D;&#x3D;0:</span><br><span class=\"line\">            yinshu.append(str(i))</span><br><span class=\"line\">            if num&#x2F;i &gt;i:</span><br><span class=\"line\">                zys(num&#x2F;&#x2F;i)</span><br><span class=\"line\">            elif num&#x2F;i&gt;1:</span><br><span class=\"line\">                yinshu.append(str(num&#x2F;&#x2F;i))</span><br><span class=\"line\">            break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        yinshu.append(str(num))</span><br><span class=\"line\"></span><br><span class=\"line\">num&#x3D;int(input(&#39;请输入一个数字：&#39;))</span><br><span class=\"line\">if num &lt;&#x3D;1:</span><br><span class=\"line\">    num &#x3D; int(input(&#39;输入错误，请重新输入：&#39;))</span><br><span class=\"line\">    </span><br><span class=\"line\">yinshu&#x3D;[]</span><br><span class=\"line\">zys(num)</span><br><span class=\"line\">y&#x3D;&#39;+&#39;.join(yinshu)</span><br><span class=\"line\">print(num,&#39;&#x3D;&#39;,y)</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-汉诺塔问题\"><a href=\"#11-汉诺塔问题\" class=\"headerlink\" title=\"11. 汉诺塔问题\"></a>11. 汉诺塔问题</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def hano(num,a,b,c):</span><br><span class=\"line\">    if num &#x3D;&#x3D;1:</span><br><span class=\"line\">        print(a,&#39; -&gt; &#39;,c)</span><br><span class=\"line\">        return</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        hano(num-1,a,c,b)</span><br><span class=\"line\">        print(a,&#39; -&gt; &#39;,c)</span><br><span class=\"line\">        hano(num-1,b,a,c)</span><br><span class=\"line\">        return</span><br><span class=\"line\"></span><br><span class=\"line\">num&#x3D;int(input(&#39;请输入要移动的汉诺塔层数：&#39;))</span><br><span class=\"line\">a,b,c&#x3D;&#39;A&#39;,&#39;B&#39;,&#39;C&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">hano(num,a,b,c)</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-输出完数\"><a href=\"#12-输出完数\" class=\"headerlink\" title=\"12. 输出完数\"></a>12. 输出完数</h3><p>完数：一个数如果恰好等于它的因子之和，这个数就称为”完数”。例如6=1＋2＋3.编程找出1000以内的所有完数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def wanshu(start,end):</span><br><span class=\"line\">    for i in range(start,end):</span><br><span class=\"line\">        num_list&#x3D;[1]</span><br><span class=\"line\">        for j in range(2,i):</span><br><span class=\"line\">            if i%j&#x3D;&#x3D;0:</span><br><span class=\"line\">                num_list.append(j)</span><br><span class=\"line\">                num_list.append(i&#x2F;&#x2F;j)</span><br><span class=\"line\">        if len(num_list)&gt;2:</span><br><span class=\"line\">            s&#x3D;0</span><br><span class=\"line\">            num_list&#x3D;list(set(num_list))</span><br><span class=\"line\">            num_list.sort()</span><br><span class=\"line\">            for k in num_list:</span><br><span class=\"line\">                s+&#x3D;k</span><br><span class=\"line\">            if s&#x3D;&#x3D;i:</span><br><span class=\"line\">                print(num_list)</span><br><span class=\"line\">                print(sum(num_list))</span><br><span class=\"line\">    </span><br><span class=\"line\">wanshu(1,10000)</span><br></pre></td></tr></table></figure>\n<h3 id=\"13-球体下落问题\"><a href=\"#13-球体下落问题\" class=\"headerlink\" title=\"13. 球体下落问题\"></a>13. 球体下落问题</h3><p>一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？  </p>\n<h4 id=\"方法1（我自己的）\"><a href=\"#方法1（我自己的）\" class=\"headerlink\" title=\"方法1（我自己的）\"></a>方法1（我自己的）</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h&#x3D;100.0</span><br><span class=\"line\">s&#x3D;0.0</span><br><span class=\"line\">for i in range(1,11):</span><br><span class=\"line\">    s+&#x3D;h    #每次下降的距离</span><br><span class=\"line\">    h&#x3D;h&#x2F;2    #弹起的距离</span><br><span class=\"line\">    print(&#39;第%d次弹起%f米，球已行动了%f米。&#39;\\</span><br><span class=\"line\">    \t%(i,h,s))</span><br><span class=\"line\">    if i &lt;10:</span><br><span class=\"line\">        s+&#x3D;h    #这h是前九次下落的距离，第十次不下落，总距离不再加</span><br><span class=\"line\">    </span><br><span class=\"line\">print(h,&#39;   &#39;,s)</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法2：\"><a href=\"#方法2：\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tour &#x3D; []</span><br><span class=\"line\">height &#x3D; []</span><br><span class=\"line\">hei &#x3D; 100.0  # 起始高度</span><br><span class=\"line\">tim &#x3D; 10  # 次数</span><br><span class=\"line\">for i in range(1, tim + 1):</span><br><span class=\"line\">     # 从第二次开始，落地时的距离应该是反弹高度乘以2（弹到最高点再落下）</span><br><span class=\"line\">    if i &#x3D;&#x3D; 1:</span><br><span class=\"line\">        tour.append(hei)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        tour.append(2 * hei)</span><br><span class=\"line\">    hei &#x2F;&#x3D; 2</span><br><span class=\"line\">    height.append(hei)</span><br><span class=\"line\">print(&#39;总高度：tour &#x3D; &#123;0&#125;&#39;.format(sum(tour)))</span><br><span class=\"line\">print(&#39;第10次反弹高度：height &#x3D; &#123;0&#125;&#39;.format(height[-1]))</span><br></pre></td></tr></table></figure>\n<h3 id=\"14-猴子吃桃问题\"><a href=\"#14-猴子吃桃问题\" class=\"headerlink\" title=\"14.猴子吃桃问题\"></a>14.猴子吃桃问题</h3><p>题目：猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个，第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。程序分析：采取逆向思维的方法，从后往前推断。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bea_sum&#x3D;1</span><br><span class=\"line\">for i in range(10,0,-1):</span><br><span class=\"line\">    if i &#x3D;&#x3D;10:</span><br><span class=\"line\">        bea_sum&#x3D;1</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        bea_sum&#x3D;(bea_sum+1)*2</span><br><span class=\"line\">  </span><br><span class=\"line\">print(&#39;第1天共摘了%d个桃子&#39;%bea_sum)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(1,11):</span><br><span class=\"line\">    print(&#39;第%d 天吃了%d 个桃子&#39;%(i,bea_sum&#x2F;&#x2F;2+1))</span><br><span class=\"line\">    bea_sum&#x3D;bea_sum&#x2F;&#x2F;2 -1</span><br></pre></td></tr></table></figure>\n<h3 id=\"15-求阶乘\"><a href=\"#15-求阶乘\" class=\"headerlink\" title=\"15. 求阶乘\"></a>15. 求阶乘</h3><h4 id=\"15-1-函数递归\"><a href=\"#15-1-函数递归\" class=\"headerlink\" title=\"15.1 函数递归\"></a>15.1 函数递归</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def jiec(n):</span><br><span class=\"line\">    if n&#x3D;&#x3D;1:</span><br><span class=\"line\">        return 1</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return jiec(n-1)*n</span><br><span class=\"line\">    </span><br><span class=\"line\">n&#x3D;int(input(&#39;请输入要求阶乘的数字：&#39;))</span><br><span class=\"line\">jie&#x3D;jiec(n)</span><br><span class=\"line\">print(&#39;递归函数：\\n%d 的阶乘是：%d &#39;%(n,jie))</span><br><span class=\"line\">print(&#39;%d!&#x3D;%d \\n&#39;%(n,jie))</span><br></pre></td></tr></table></figure>\n<h4 id=\"15-2-for循环：\"><a href=\"#15-2-for循环：\" class=\"headerlink\" title=\"15.2 for循环：\"></a>15.2 for循环：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jie2&#x3D;1</span><br><span class=\"line\">for i in range(1,n+1):</span><br><span class=\"line\">    jie2*&#x3D;i</span><br><span class=\"line\">print(&#39;for循环求解：\\n%d 的阶乘是：%d \\n&#39;%(n,jie2))</span><br></pre></td></tr></table></figure>\n<h4 id=\"15-3-while-循环求解\"><a href=\"#15-3-while-循环求解\" class=\"headerlink\" title=\"15.3 while 循环求解\"></a>15.3 while 循环求解</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jie3&#x3D;1</span><br><span class=\"line\">while i&gt;&#x3D;1:</span><br><span class=\"line\">    jie3 *&#x3D;i</span><br><span class=\"line\">    i-&#x3D;1</span><br><span class=\"line\">print(&#39;while循环求解：\\n%d 的阶乘是：%d &#39;%(n,jie3))</span><br></pre></td></tr></table></figure>\n<h3 id=\"16-输出101-200（区间数可自定）以内的素数\"><a href=\"#16-输出101-200（区间数可自定）以内的素数\" class=\"headerlink\" title=\"16. 输出101-200（区间数可自定）以内的素数\"></a>16. 输出101-200（区间数可自定）以内的素数</h3><p>判断101-200之间有多少个素数，并输出所有素数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count&#x3D;0</span><br><span class=\"line\">for i in range(101,1001):</span><br><span class=\"line\">    for j in range(2,int(i&#x2F;2)):</span><br><span class=\"line\">        if i%j&#x3D;&#x3D;0 : #int(i&#x2F;j)&#x3D;&#x3D;i&#x2F;j:</span><br><span class=\"line\">            print(&#39;%d 不是素数:%d&#x3D;%d x %d&#39;%(i,i,j,i&#x2F;j))</span><br><span class=\"line\">            break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        count+&#x3D;1</span><br><span class=\"line\">        print(i ,&#39; 是素数&#39;)</span><br><span class=\"line\">            \t</span><br><span class=\"line\">print(&#39;101-200之间共有%d个素数&#39;%count)</span><br></pre></td></tr></table></figure>\n<h3 id=\"17\"><a href=\"#17\" class=\"headerlink\" title=\"17.\"></a>17.</h3><hr>\n<h2 id=\"以下问题摘自https-codingbat-com\"><a href=\"#以下问题摘自https-codingbat-com\" class=\"headerlink\" title=\"以下问题摘自https://codingbat.com/\"></a>以下问题摘自<a href=\"https://codingbat.com/\">https://codingbat.com/</a></h2><h3 id=\"monkey-trouble\"><a href=\"#monkey-trouble\" class=\"headerlink\" title=\"monkey_trouble\"></a>monkey_trouble</h3><p>We have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.</p>\n<p>monkey_trouble(True, True) → True<br>monkey_trouble(False, False) → True<br>monkey_trouble(True, False) → False</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def mokey_trouble(a_smile,b_smile):</span><br><span class=\"line\">    if (a_smile and b_smile) or (not a_smile and not b_smile):</span><br><span class=\"line\">        return True</span><br><span class=\"line\">    else:</span><br><span class=\"line\">    return False</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"浏览器user-agent大全","date":"2020-06-19T13:03:25.000Z","author":"coolxy","_content":"### 收集的浏览器大全，可用于在爬虫时随机选择user-agent\n```\nuser_agent=[\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60',\n'Opera/8.0 (Windows NT 5.1; U; en)',\n'Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50',\n'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50',\n'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0',\n'Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36',\n'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',\n'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 Safari/534.16',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36',\n'Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER',\n'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)',\n'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)',\n'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)',\n'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)',\n'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 SE 2.X MetaSr 1.0',\n'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Maxthon/4.4.3.4000 Chrome/30.0.1599.101 Safari/537.36',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36',\n'Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',\n'Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',\n'Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5',\n'Mozilla/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',\n'Mozilla/5.0 (Linux; U; Android 2.2.1; zh-cn; HTC_Wildfire_A3333 Build/FRG83D) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1',\n'Mozilla/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1',\n'MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1',\n'Opera/9.80 (Android 2.3.4; Linux; Opera Mobi/build-1107180945; U; en-GB) Presto/2.8.149 Version/11.10',\n'Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13',\n'Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+',\n'Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.70 Safari/534.6 TouchPad/1.0',\n'Mozilla/5.0 (SymbianOS/9.4; Series60/5.0 NokiaN97-1/20.0.019; Profile/MIDP-2.1 Configuration/CLDC-1.1) AppleWebKit/525 (KHTML, like Gecko) BrowserNG/7.1.18124',\n'Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; HTC; Titan)',\n'UCWEB7.0.2.37/28/999',\n'NOKIA5700/ UCWEB7.0.2.37/28/999',\n'Openwave/ UCWEB7.0.2.37/28/999',\n'Mozilla/4.0 (compatible; MSIE 6.0; ) Opera/UCWEB7.0.2.37/28/999'\n]\n\nuser_agent={'user-agent',random.choice(user_agent)}\n```","source":"_posts/2020-06-19-user-agent.md","raw":"---\nlayout: post\ntitle:  \"浏览器user-agent大全\"\ndate:   2020-06-19 21:03:25\nauthor: coolxy\ncategories: 共享\ntags: user-agent\n---\n### 收集的浏览器大全，可用于在爬虫时随机选择user-agent\n```\nuser_agent=[\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60',\n'Opera/8.0 (Windows NT 5.1; U; en)',\n'Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50',\n'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50',\n'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0',\n'Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36',\n'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',\n'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 Safari/534.16',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36',\n'Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER',\n'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)',\n'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)',\n'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)',\n'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)',\n'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 SE 2.X MetaSr 1.0',\n'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Maxthon/4.4.3.4000 Chrome/30.0.1599.101 Safari/537.36',\n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36',\n'Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',\n'Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',\n'Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5',\n'Mozilla/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5',\n'Mozilla/5.0 (Linux; U; Android 2.2.1; zh-cn; HTC_Wildfire_A3333 Build/FRG83D) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1',\n'Mozilla/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1',\n'MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1',\n'Opera/9.80 (Android 2.3.4; Linux; Opera Mobi/build-1107180945; U; en-GB) Presto/2.8.149 Version/11.10',\n'Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13',\n'Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+',\n'Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.70 Safari/534.6 TouchPad/1.0',\n'Mozilla/5.0 (SymbianOS/9.4; Series60/5.0 NokiaN97-1/20.0.019; Profile/MIDP-2.1 Configuration/CLDC-1.1) AppleWebKit/525 (KHTML, like Gecko) BrowserNG/7.1.18124',\n'Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; HTC; Titan)',\n'UCWEB7.0.2.37/28/999',\n'NOKIA5700/ UCWEB7.0.2.37/28/999',\n'Openwave/ UCWEB7.0.2.37/28/999',\n'Mozilla/4.0 (compatible; MSIE 6.0; ) Opera/UCWEB7.0.2.37/28/999'\n]\n\nuser_agent={'user-agent',random.choice(user_agent)}\n```","slug":"user-agent","published":1,"updated":"2021-03-04T17:04:28.307Z","_id":"cklt3r3d900048cw489zi3ae4","comments":1,"photos":[],"link":"","content":"<h3 id=\"收集的浏览器大全，可用于在爬虫时随机选择user-agent\"><a href=\"#收集的浏览器大全，可用于在爬虫时随机选择user-agent\" class=\"headerlink\" title=\"收集的浏览器大全，可用于在爬虫时随机选择user-agent\"></a>收集的浏览器大全，可用于在爬虫时随机选择user-agent</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_agent&#x3D;[</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;39.0.2171.95 Safari&#x2F;537.36 OPR&#x2F;26.0.1656.60&#39;,</span><br><span class=\"line\">&#39;Opera&#x2F;8.0 (Windows NT 5.1; U; en)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko&#x2F;20061208 Firefox&#x2F;2.0.0 Opera 9.50&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko&#x2F;20100101 Firefox&#x2F;34.0&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko&#x2F;20100922 Ubuntu&#x2F;10.10 (maverick) Firefox&#x2F;3.6.10&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;534.57.2 (KHTML, like Gecko) Version&#x2F;5.1.7 Safari&#x2F;534.57.2&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;39.0.2171.71 Safari&#x2F;537.36&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.11 (KHTML, like Gecko) Chrome&#x2F;23.0.1271.64 Safari&#x2F;537.11&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit&#x2F;534.16 (KHTML, like Gecko) Chrome&#x2F;10.0.648.133 Safari&#x2F;534.16&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;30.0.1599.101 Safari&#x2F;537.36&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64; Trident&#x2F;7.0; rv:11.0) like Gecko&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;536.11 (KHTML, like Gecko) Chrome&#x2F;20.0.1132.11 TaoBrowser&#x2F;2.0 Safari&#x2F;536.11&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.1 (KHTML, like Gecko) Chrome&#x2F;21.0.1180.71 Safari&#x2F;537.1 LBBROWSER&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident&#x2F;5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident&#x2F;5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser&#x2F;7.0.3698.400)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 5.1) AppleWebKit&#x2F;535.11 (KHTML, like Gecko) Chrome&#x2F;17.0.963.84 Safari&#x2F;535.11 SE 2.X MetaSr 1.0&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident&#x2F;4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Maxthon&#x2F;4.4.3.4000 Chrome&#x2F;30.0.1599.101 Safari&#x2F;537.36&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;38.0.2125.122 UBrowser&#x2F;4.0.3214.0 Safari&#x2F;537.36&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit&#x2F;533.17.9 (KHTML, like Gecko) Version&#x2F;5.0.2 Mobile&#x2F;8J2 Safari&#x2F;6533.18.5&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit&#x2F;533.17.9 (KHTML, like Gecko) Version&#x2F;5.0.2 Mobile&#x2F;8J2 Safari&#x2F;6533.18.5&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit&#x2F;533.17.9 (KHTML, like Gecko) Version&#x2F;5.0.2 Mobile&#x2F;8C148 Safari&#x2F;6533.18.5&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit&#x2F;533.17.9 (KHTML, like Gecko) Version&#x2F;5.0.2 Mobile&#x2F;8J2 Safari&#x2F;6533.18.5&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Linux; U; Android 2.2.1; zh-cn; HTC_Wildfire_A3333 Build&#x2F;FRG83D) AppleWebKit&#x2F;533.1 (KHTML, like Gecko) Version&#x2F;4.0 Mobile Safari&#x2F;533.1&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build&#x2F;FRF91) AppleWebKit&#x2F;533.1 (KHTML, like Gecko) Version&#x2F;4.0 Mobile Safari&#x2F;533.1&#39;,</span><br><span class=\"line\">&#39;MQQBrowser&#x2F;26 Mozilla&#x2F;5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build&#x2F;GRJ22; CyanogenMod-7) AppleWebKit&#x2F;533.1 (KHTML, like Gecko) Version&#x2F;4.0 Mobile Safari&#x2F;533.1&#39;,</span><br><span class=\"line\">&#39;Opera&#x2F;9.80 (Android 2.3.4; Linux; Opera Mobi&#x2F;build-1107180945; U; en-GB) Presto&#x2F;2.8.149 Version&#x2F;11.10&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Linux; U; Android 3.0; en-us; Xoom Build&#x2F;HRI39) AppleWebKit&#x2F;534.13 (KHTML, like Gecko) Version&#x2F;4.0 Safari&#x2F;534.13&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit&#x2F;534.1+ (KHTML, like Gecko) Version&#x2F;6.0.0.337 Mobile Safari&#x2F;534.1+&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (hp-tablet; Linux; hpwOS&#x2F;3.0.0; U; en-US) AppleWebKit&#x2F;534.6 (KHTML, like Gecko) wOSBrowser&#x2F;233.70 Safari&#x2F;534.6 TouchPad&#x2F;1.0&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (SymbianOS&#x2F;9.4; Series60&#x2F;5.0 NokiaN97-1&#x2F;20.0.019; Profile&#x2F;MIDP-2.1 Configuration&#x2F;CLDC-1.1) AppleWebKit&#x2F;525 (KHTML, like Gecko) BrowserNG&#x2F;7.1.18124&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident&#x2F;5.0; IEMobile&#x2F;9.0; HTC; Titan)&#39;,</span><br><span class=\"line\">&#39;UCWEB7.0.2.37&#x2F;28&#x2F;999&#39;,</span><br><span class=\"line\">&#39;NOKIA5700&#x2F; UCWEB7.0.2.37&#x2F;28&#x2F;999&#39;,</span><br><span class=\"line\">&#39;Openwave&#x2F; UCWEB7.0.2.37&#x2F;28&#x2F;999&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; ) Opera&#x2F;UCWEB7.0.2.37&#x2F;28&#x2F;999&#39;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">user_agent&#x3D;&#123;&#39;user-agent&#39;,random.choice(user_agent)&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"收集的浏览器大全，可用于在爬虫时随机选择user-agent\"><a href=\"#收集的浏览器大全，可用于在爬虫时随机选择user-agent\" class=\"headerlink\" title=\"收集的浏览器大全，可用于在爬虫时随机选择user-agent\"></a>收集的浏览器大全，可用于在爬虫时随机选择user-agent</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_agent&#x3D;[</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;39.0.2171.95 Safari&#x2F;537.36 OPR&#x2F;26.0.1656.60&#39;,</span><br><span class=\"line\">&#39;Opera&#x2F;8.0 (Windows NT 5.1; U; en)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko&#x2F;20061208 Firefox&#x2F;2.0.0 Opera 9.50&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko&#x2F;20100101 Firefox&#x2F;34.0&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko&#x2F;20100922 Ubuntu&#x2F;10.10 (maverick) Firefox&#x2F;3.6.10&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;534.57.2 (KHTML, like Gecko) Version&#x2F;5.1.7 Safari&#x2F;534.57.2&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;39.0.2171.71 Safari&#x2F;537.36&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.11 (KHTML, like Gecko) Chrome&#x2F;23.0.1271.64 Safari&#x2F;537.11&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit&#x2F;534.16 (KHTML, like Gecko) Chrome&#x2F;10.0.648.133 Safari&#x2F;534.16&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;30.0.1599.101 Safari&#x2F;537.36&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64; Trident&#x2F;7.0; rv:11.0) like Gecko&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;536.11 (KHTML, like Gecko) Chrome&#x2F;20.0.1132.11 TaoBrowser&#x2F;2.0 Safari&#x2F;536.11&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.1 (KHTML, like Gecko) Chrome&#x2F;21.0.1180.71 Safari&#x2F;537.1 LBBROWSER&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident&#x2F;5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident&#x2F;5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser&#x2F;7.0.3698.400)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 5.1) AppleWebKit&#x2F;535.11 (KHTML, like Gecko) Chrome&#x2F;17.0.963.84 Safari&#x2F;535.11 SE 2.X MetaSr 1.0&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident&#x2F;4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Maxthon&#x2F;4.4.3.4000 Chrome&#x2F;30.0.1599.101 Safari&#x2F;537.36&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Windows NT 6.1; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;38.0.2125.122 UBrowser&#x2F;4.0.3214.0 Safari&#x2F;537.36&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit&#x2F;533.17.9 (KHTML, like Gecko) Version&#x2F;5.0.2 Mobile&#x2F;8J2 Safari&#x2F;6533.18.5&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit&#x2F;533.17.9 (KHTML, like Gecko) Version&#x2F;5.0.2 Mobile&#x2F;8J2 Safari&#x2F;6533.18.5&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit&#x2F;533.17.9 (KHTML, like Gecko) Version&#x2F;5.0.2 Mobile&#x2F;8C148 Safari&#x2F;6533.18.5&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit&#x2F;533.17.9 (KHTML, like Gecko) Version&#x2F;5.0.2 Mobile&#x2F;8J2 Safari&#x2F;6533.18.5&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Linux; U; Android 2.2.1; zh-cn; HTC_Wildfire_A3333 Build&#x2F;FRG83D) AppleWebKit&#x2F;533.1 (KHTML, like Gecko) Version&#x2F;4.0 Mobile Safari&#x2F;533.1&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build&#x2F;FRF91) AppleWebKit&#x2F;533.1 (KHTML, like Gecko) Version&#x2F;4.0 Mobile Safari&#x2F;533.1&#39;,</span><br><span class=\"line\">&#39;MQQBrowser&#x2F;26 Mozilla&#x2F;5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build&#x2F;GRJ22; CyanogenMod-7) AppleWebKit&#x2F;533.1 (KHTML, like Gecko) Version&#x2F;4.0 Mobile Safari&#x2F;533.1&#39;,</span><br><span class=\"line\">&#39;Opera&#x2F;9.80 (Android 2.3.4; Linux; Opera Mobi&#x2F;build-1107180945; U; en-GB) Presto&#x2F;2.8.149 Version&#x2F;11.10&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (Linux; U; Android 3.0; en-us; Xoom Build&#x2F;HRI39) AppleWebKit&#x2F;534.13 (KHTML, like Gecko) Version&#x2F;4.0 Safari&#x2F;534.13&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit&#x2F;534.1+ (KHTML, like Gecko) Version&#x2F;6.0.0.337 Mobile Safari&#x2F;534.1+&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (hp-tablet; Linux; hpwOS&#x2F;3.0.0; U; en-US) AppleWebKit&#x2F;534.6 (KHTML, like Gecko) wOSBrowser&#x2F;233.70 Safari&#x2F;534.6 TouchPad&#x2F;1.0&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (SymbianOS&#x2F;9.4; Series60&#x2F;5.0 NokiaN97-1&#x2F;20.0.019; Profile&#x2F;MIDP-2.1 Configuration&#x2F;CLDC-1.1) AppleWebKit&#x2F;525 (KHTML, like Gecko) BrowserNG&#x2F;7.1.18124&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident&#x2F;5.0; IEMobile&#x2F;9.0; HTC; Titan)&#39;,</span><br><span class=\"line\">&#39;UCWEB7.0.2.37&#x2F;28&#x2F;999&#39;,</span><br><span class=\"line\">&#39;NOKIA5700&#x2F; UCWEB7.0.2.37&#x2F;28&#x2F;999&#39;,</span><br><span class=\"line\">&#39;Openwave&#x2F; UCWEB7.0.2.37&#x2F;28&#x2F;999&#39;,</span><br><span class=\"line\">&#39;Mozilla&#x2F;4.0 (compatible; MSIE 6.0; ) Opera&#x2F;UCWEB7.0.2.37&#x2F;28&#x2F;999&#39;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">user_agent&#x3D;&#123;&#39;user-agent&#39;,random.choice(user_agent)&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"保持童心","date":"2020-06-17T14:03:25.000Z","_content":"\n## 我们要保持一颗童真的心。\n","source":"_posts/2020-06-20-one.md","raw":"---\nlayout: post\ntitle:  保持童心\ndate:   2020-06-17 22:03:25\ncategories:  生活随笔\n---\n\n## 我们要保持一颗童真的心。\n","slug":"one","published":1,"updated":"2021-03-04T17:04:17.706Z","_id":"cklt3r3dc00068cw480t195rj","comments":1,"photos":[],"link":"","content":"<h2 id=\"我们要保持一颗童真的心。\"><a href=\"#我们要保持一颗童真的心。\" class=\"headerlink\" title=\"我们要保持一颗童真的心。\"></a>我们要保持一颗童真的心。</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"我们要保持一颗童真的心。\"><a href=\"#我们要保持一颗童真的心。\" class=\"headerlink\" title=\"我们要保持一颗童真的心。\"></a>我们要保持一颗童真的心。</h2>"},{"layout":"post","title":"python练习园地（一）——Warmup篇","date":"2020-06-21T02:03:25.000Z","author":"coolxy","_content":"## python练习题园地（一）——Warmup篇\n最近找到一个网站：<https://codingbat.com/python>，这里是python和java初学者的园地，在这里你可以充分的发挥你在程序学习上的逻辑推理能力。一关一关的过，做你没做过或是曾做过后练习题，在学习的同时还可以熟悉一下英文，大多数都可以看懂。\n## Warmup-1:\n### Warmup-1 > sleep_in：\nThe parameter weekday is True if it is a weekday, and the parameter vacation is True if we are on vacation. We sleep in if it is not a weekday or we're on vacation. Return True if we sleep in.  \nsleep_in(False, False) → True  \nsleep_in(True, False) → False  \nsleep_in(False, True) → True  \n\n```python\ndef sleep_in(weekday, vacation):\n  if not weekday and not vacation:\n    return True\n  elif weekday and not vacation:\n    return False\n  elif not weekday and vacation:\n    return True\n  else:\n    return True\n```\n### Warmup-1 > monkey_trouble\nWe have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.  \nmonkey_trouble(True, True) → True  \nmonkey_trouble(False, False) → True  \nmonkey_trouble(True, False) → False  \n```python\ndef monkey_trouble(a_smile, b_smile):\n  if a_smile and b_smile:\n    return True\n  elif not a_smile and not b_smile:\n    return True\n  else:\n    return False\n```\n### Warmup-1 > sum_double\nGiven two int values, return their sum. Unless the two values are the same, then return double their sum.  \nsum_double(1, 2) → 3  \nsum_double(3, 2) → 5  \nsum_double(2, 2) → 8  \n```python\ndef sum_double(a, b):\n  if a!=b:\n    return a+b\n  else:\n    return (a+b)*2\n```\n### Warmup-1 > diff21\nGiven an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.  \ndiff21(19) → 2  \ndiff21(10) → 11  \ndiff21(21) → 0  \n```python\ndef diff21(n):\n  if n<=21:\n    return 21-n\n  else:\n    return (n-21)*2\n```\n### Warmup-1 > parrot_trouble\nWe have a loud talking parrot. The \"hour\" parameter is the current hour time in the range 0..23. We are in trouble if the parrot is talking and the hour is before 7 or after 20. Return True if we are in trouble.  \nparrot_trouble(True, 6) → True  \nparrot_trouble(True, 7) → False  \nparrot_trouble(False, 6) → False  \n```python\ndef parrot_trouble(talking, hour):\n  if talking and (hour<7 or hour>20):\n    return True\n  else:\n    return False\n```\n###  Warmup-1 > makes10\nGiven 2 ints, a and b, return True if one if them is 10 or if their sum is 10.  \nmakes10(9, 10) → True  \nmakes10(9, 9) → False  \nmakes10(1, 9) → True  \n```python\ndef makes10(a, b):\n  if a==10 or b==10 or a+b==10:\n    return True\n  else:\n    return False\n```\n简洁版（官方版），仔细思量：\n```python\ndef makes10(a, b):\n  return (a == 10 or b == 10 or a+b == 10)\n```\n### Warmup-1 > near_hundred\nGiven an int n, return True if it is within 10 of 100 or 200. Note: abs(num) computes the absolute value of a number.  \nnear_hundred(93) → True  \nnear_hundred(90) → True  \nnear_hundred(89) → False  \n```python\ndef near_hundred(n):\n  if abs(100-n)<=10 or abs(200-n)<=10 :\n    return True\n  else:\n    return False\n```\n官方版：\n```python\ndef near_hundred(n):\n  return ((abs(100 - n) <= 10) or (abs(200 - n) <= 10))\n```\n### Warmup-1 > pos_neg\nGiven 2 int values, return True if one is negative(负数) and one is positive(正数）. Except if the parameter \"negative\" is True, then return True only if both are negative.  \npos_neg(1, -1, False) → True  \npos_neg(-1, 1, False) → True   \npos_neg(-4, -5, True) → True\n```python\ndef pos_neg(a, b, negative):\n  if  ((a<0 and b>0) or(a>0 and b<0)) and not negative:\n    return True\n  elif negative and (a<0 and b<0) :\n    return True \n  else:\n    return False\n```\n官方版：\n```python\ndef pos_neg(a, b, negative):\n  if negative:\n    return (a < 0 and b < 0)\n  else:\n    return ((a < 0 and b > 0) or (a > 0 and b < 0))\n```\n### Warmup-1 > not_string\nGiven a string, return a new string where \"not \" has been added to the front. However, if the string already begins with \"not\", return the string unchanged.  (给定一个字符串，返回一个新字符串，将“not ”添加到字符串开头。但是，如果字符串已经以“not”开头，则不加更改地返回字符串。)\nnot_string('candy') → 'not candy'  \nnot_string('x') → 'not x'  \nnot_string('not bad') → 'not bad'  \n```python\ndef not_string(str):\n  if 'not' in str[0:3]:\n    return str\n  else:\n    return \"not \"+str\n```\n官方版：\n```python\ndef not_string(str):\n  if len(str) >= 3 and str[:3] == \"not\":\n    return str\n  return \"not \" + str\n  # str[:3] goes from the start of the string up to but not\n  # including index 3\n```\n### Warmup-1 > missing_char\nGiven a non-empty string and an int n, return a new string where the char at index n has been removed. The value of n will be a valid index of a char in the original string (i.e. n will be in the range 0..len(str)-1 inclusive).  \nmissing_char('kitten', 1) → 'ktten'  \nmissing_char('kitten', 0) → 'itten'  \nmissing_char('kitten', 4) → 'kittn'  \n```python\ndef missing_char(str, n):\n  return str[:n]+str[n+1:]\n```\n官方版：\n```python\ndef missing_char(str, n):\n  front = str[:n]   # up to but not including n\n  back = str[n+1:]  # n+1 through end of string\n  return front + back\n```\n### Warmup-1 > front_back\nGiven a string, return a new string where the first and last chars have been exchanged.  (返回首尾字符交换的字符串）\nfront_back('code') → 'eodc'  \nfront_back('a') → 'a'  \nfront_back('ab') → 'ba'  \n以下代码本机测试通过(考虑字符串只有1，或0时）：\n```python\ndef front_back(str):\n  if len(str)<=1:\n    return str\n  else:\n    l=len(str)\n    first=str[0]\n    last=str[l-1]\n    return last+str[1:(l-1)]+first\n```\n官方版：\n```python\ndef front_back(str):\n  if len(str) <= 1:\n    return str\n    mid = str[1:len(str)-1]  # can be written as str[1:-1]\n    # last + mid + first\n  return str[len(str)-1] + mid + str[0]\n```\n### Warmup-1 > front3\nGiven a string, we'll say that the front is the first 3 chars of the string. If the string length is less than 3, the front is whatever is there. Return a new string which is 3 copies of the front.  \nfront3('Java') → 'JavJavJav'  \nfront3('Chocolate') → 'ChoChoCho'  \nfront3('abc') → 'abcabcabc'  \n```python\ndef front3(str):\n  if len(str)<3:\n    return str*3\n  else:\n    return str[:3]*3\n```\n官方代码：\n```python\ndef front3(str):\n  # Figure the end of the front\n  front_end = 3\n  if len(str) < front_end:\n    front_end = len(str)\n  front = str[:front_end]\n  return front + front + front \n  \n  # Could omit the if logic, and write simply front = str[:3]\n  # since the slice is silent about out-of-bounds conditions.\n```\n## Warmup-2\n### Warmup-2 > string_times\nGiven a string and a non-negative int n, return a larger string that is n copies of the original string.  (给一个字符串和非负整数，返回整数倍的字符串）\nstring_times('Hi', 2) → 'HiHi'  \nstring_times('Hi', 3) → 'HiHiHi'  \nstring_times('Hi', 1) → 'Hi'  \n```python\ndef string_times(str, n):\n  return str*n\n```\n官方代码：\n```python\ndef string_times(str, n):\n  result = \"\"\n  for i in range(n):  # range(n) is [0, 1, 2, .... n-1]\n    result = result + str  # could use += here\n  return result\n```\n### Warmup-2 > front_times\nGiven a string and a non-negative int n, we'll say that the front of the string is the first 3 chars, or whatever is there if the string is less than length 3. Return n copies of the front;（返回字符串的前3个字符的N个副本，小于3则返回3个）  \nfront_times('Chocolate', 2) → 'ChoCho'  \nfront_times('Chocolate', 3) → 'ChoChoCho'  \nfront_times('Abc', 3) → 'AbcAbcAbc'  \n```python\ndef front_times(str, n):\n  if len(str)<3:\n    return str*n\n  else:\n    return str[:3]*n\n```\n官方代码：\n```python\ndef front_times(str, n):\n  front_len = 3\n  if front_len > len(str):\n    front_len = len(str)\n  front = str[:front_len]\n  \n  result = \"\"\n  for i in range(n):\n    result = result + front\n  return result\n```\n### Warmup-2 > string_bits\nGiven a string, return a new string made of every other char starting with the first, so \"Hello\" yields \"Hlo\".  \nstring_bits('Hello') → 'Hlo'  \nstring_bits('Hi') → 'H'  \nstring_bits('Heeololeo') → 'Hello'  \n```python\ndef string_bits(str):\n  result=''\n  if len(str)<=1: #这两句多于了，有i%2==0足够表达\n    result=str\n  else:\n    for i in range(len(str)):\n      if i%2==0:\n        result=result+str[i]\n  return result\n```\n官方代码：\n```python\ndef string_bits(str):\n  result = \"\"\n  # Many ways to do this. This uses the standard loop of i on every char,\n  # and inside the loop skips the odd index values.\n  for i in range(len(str)):\n    if i % 2 == 0:\n      result = result + str[i]\n  return result\n```\n### Warmup-2 > string_splosion\nGiven a non-empty string like \"Code\" return a string like \"CCoCodCode\".  \nstring_splosion('Code') → 'CCoCodCode'  \nstring_splosion('abc') → 'aababc'  \nstring_splosion('ab') → 'aab'  \n```python\ndef string_splosion(str):\n  result=''\n  for i in range(len(str)):\n    if i==0:\t\t\t#这三句多余了，有str[:i+1]就足以包含，参考官方代码\n      result=result+str[i]\n    else:\n      result=result+str[:i+1]\n  return result\n```\n官方代码：\n```python\ndef string_splosion(str):\n  result = \"\"\n  # On each iteration, add the substring of the chars 0..i\n  for i in range(len(str)):\n    result = result + str[:i+1]\n  return result\n```\n### Warmup-2 > last2\nGiven a string, return the count of the number of times that a substring length 2 appears in the string and also as the last 2 chars of the string, so \"hixxxhi\" yields 1 (we won't count the end substring).  (返回字符串最后两个字符出现的次数，不计最后出现这一次）\nlast2('hixxhi') → 1  \nlast2('xaxxaxaxx') → 1  \nlast2('axxxaaxx') → 2  \n```pthon\ndef last2(str):\n  count=0\n  str_len=len(str)\n  last=str[str_len-2:str_len]\n  for i in range(str_len):\n    if str[i:i+2]==last and i<str_len-2:\n      count+=1\n\n  return count\n```\n官方代码：\n```python\ndef last2(str):\n  # Screen out too-short string case.\n  if len(str) < 2:\n    return 0\n  \n  # last 2 chars, can be written as str[-2:]\n  last2 = str[len(str)-2:]\n  count = 0\n  \n  # Check each substring length 2 starting at i\n  for i in range(len(str)-2):\n    sub = str[i:i+2]\n    if sub == last2:\n      count = count + 1\n\n  return count\n```\n### Warmup-2 > array_count9\nGiven an array of ints, return the number of 9's in the array.（返回整数数组中9出现的次数）\narray_count9([1, 2, 9]) → 1\narray_count9([1, 9, 9]) → 2\narray_count9([1, 9, 9, 3, 9]) → 3\n```python\ndef array_count9(nums):\n  count=0\n  for each in nums:\n    if each==9:\n      count+=1\n  return count\n```\n官方代码一致，唯变量不同：\n### Warmup-2 > array_front9\nGiven an array of ints, return True if one of the first 4 elements in the array is a 9. The array length may be less than 4.  (返回整数数组中前4位数中出现9的布尔值）\narray_front9([1, 2, 9, 3, 4]) → True  \narray_front9([1, 2, 3, 4, 9]) → False  \narray_front9([1, 2, 3, 4, 5]) → False  \n```python\ndef array_front9(nums):\n  return (9 in nums[:4])\n```\n官方代码：\n```python\ndef array_front9(nums):\n  # First figure the end for the loop\n  end = len(nums)\n  if end > 4:\n    end = 4\n  \n  for i in range(end):  # loop over index [0, 1, 2, 3]\n    if nums[i] == 9:\n      return True\n  return False\n```\n### Warmup-2 > array123\nGiven an array of ints, return True if the sequence of numbers 1, 2, 3 appears in the array somewhere.  \narray123([1, 1, 2, 3, 1]) → True  \narray123([1, 1, 2, 4, 1]) → False  \narray123([1, 1, 2, 1, 2, 3]) → True  \n```python\ndef array123(nums):\n  if len(nums)==0:\n    return False\n  for i in range(len(nums)):\n    if i+2<len(nums):\n      if nums[i]==1 and nums[i+1]==2 and nums[i+2]==3:\n        return True\n    else:\n        return False\n```\n官方代码：\n```python\ndef array123(nums):\n  # Note: iterate with length-2, so can use i+1 and i+2 in the loop\n  for i in range(len(nums)-2):\n    if nums[i]==1 and nums[i+1]==2 and nums[i+2]==3:\n      return True\n  return False\n```\n### Warmup-2 > string_match\nGiven 2 strings, a and b, return the number of the positions where they contain the same length 2 substring. So \"xxcaazz\" and \"xxbaaz\" yields 3, since the \"xx\", \"aa\", and \"az\" substrings appear in the same place in both strings.  （返回两个字符串中在相同位置出现相同两个字符的次数）\nstring_match('xxcaazz', 'xxbaaz') → 3  \nstring_match('abc', 'abc') → 2  \nstring_match('abc', 'axc') → 0  \n```python\ndef string_match(a, b):\n  if len(a)<=len(b):\t#以最短的字串长度为主\n    len_s=len(a)\n  else:\n    len_s=len(b)\n  count=0\n  for i in range(len_s-1):\n    if a[i]+a[i+1] == b[i]+b[i+1]:\n      count+=1\n  return count\n```\n官方代码：\n```python\ndef string_match(a, b):\n  # Figure which string is shorter.\n  shorter = min(len(a), len(b))\n  count = 0\n  \n  # Loop i over every substring starting spot.\n  # Use length-1 here, so can use char str[i+1] in the loop\n  for i in range(shorter-1):\n    a_sub = a[i:i+2]\n    b_sub = b[i:i+2]\n    if a_sub == b_sub:\n      count = count + 1\n\n  return count\n```","source":"_posts/2020-06-21-codingbat-warmup.md","raw":"---\nlayout: post\ntitle:  \"python练习园地（一）——Warmup篇\"\ndate:   2020-06-21 10:03:25\nauthor: coolxy\ncategories: \n  - 教程技巧\n  - python\ntags: python\n---\n## python练习题园地（一）——Warmup篇\n最近找到一个网站：<https://codingbat.com/python>，这里是python和java初学者的园地，在这里你可以充分的发挥你在程序学习上的逻辑推理能力。一关一关的过，做你没做过或是曾做过后练习题，在学习的同时还可以熟悉一下英文，大多数都可以看懂。\n## Warmup-1:\n### Warmup-1 > sleep_in：\nThe parameter weekday is True if it is a weekday, and the parameter vacation is True if we are on vacation. We sleep in if it is not a weekday or we're on vacation. Return True if we sleep in.  \nsleep_in(False, False) → True  \nsleep_in(True, False) → False  \nsleep_in(False, True) → True  \n\n```python\ndef sleep_in(weekday, vacation):\n  if not weekday and not vacation:\n    return True\n  elif weekday and not vacation:\n    return False\n  elif not weekday and vacation:\n    return True\n  else:\n    return True\n```\n### Warmup-1 > monkey_trouble\nWe have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.  \nmonkey_trouble(True, True) → True  \nmonkey_trouble(False, False) → True  \nmonkey_trouble(True, False) → False  \n```python\ndef monkey_trouble(a_smile, b_smile):\n  if a_smile and b_smile:\n    return True\n  elif not a_smile and not b_smile:\n    return True\n  else:\n    return False\n```\n### Warmup-1 > sum_double\nGiven two int values, return their sum. Unless the two values are the same, then return double their sum.  \nsum_double(1, 2) → 3  \nsum_double(3, 2) → 5  \nsum_double(2, 2) → 8  \n```python\ndef sum_double(a, b):\n  if a!=b:\n    return a+b\n  else:\n    return (a+b)*2\n```\n### Warmup-1 > diff21\nGiven an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.  \ndiff21(19) → 2  \ndiff21(10) → 11  \ndiff21(21) → 0  \n```python\ndef diff21(n):\n  if n<=21:\n    return 21-n\n  else:\n    return (n-21)*2\n```\n### Warmup-1 > parrot_trouble\nWe have a loud talking parrot. The \"hour\" parameter is the current hour time in the range 0..23. We are in trouble if the parrot is talking and the hour is before 7 or after 20. Return True if we are in trouble.  \nparrot_trouble(True, 6) → True  \nparrot_trouble(True, 7) → False  \nparrot_trouble(False, 6) → False  \n```python\ndef parrot_trouble(talking, hour):\n  if talking and (hour<7 or hour>20):\n    return True\n  else:\n    return False\n```\n###  Warmup-1 > makes10\nGiven 2 ints, a and b, return True if one if them is 10 or if their sum is 10.  \nmakes10(9, 10) → True  \nmakes10(9, 9) → False  \nmakes10(1, 9) → True  \n```python\ndef makes10(a, b):\n  if a==10 or b==10 or a+b==10:\n    return True\n  else:\n    return False\n```\n简洁版（官方版），仔细思量：\n```python\ndef makes10(a, b):\n  return (a == 10 or b == 10 or a+b == 10)\n```\n### Warmup-1 > near_hundred\nGiven an int n, return True if it is within 10 of 100 or 200. Note: abs(num) computes the absolute value of a number.  \nnear_hundred(93) → True  \nnear_hundred(90) → True  \nnear_hundred(89) → False  \n```python\ndef near_hundred(n):\n  if abs(100-n)<=10 or abs(200-n)<=10 :\n    return True\n  else:\n    return False\n```\n官方版：\n```python\ndef near_hundred(n):\n  return ((abs(100 - n) <= 10) or (abs(200 - n) <= 10))\n```\n### Warmup-1 > pos_neg\nGiven 2 int values, return True if one is negative(负数) and one is positive(正数）. Except if the parameter \"negative\" is True, then return True only if both are negative.  \npos_neg(1, -1, False) → True  \npos_neg(-1, 1, False) → True   \npos_neg(-4, -5, True) → True\n```python\ndef pos_neg(a, b, negative):\n  if  ((a<0 and b>0) or(a>0 and b<0)) and not negative:\n    return True\n  elif negative and (a<0 and b<0) :\n    return True \n  else:\n    return False\n```\n官方版：\n```python\ndef pos_neg(a, b, negative):\n  if negative:\n    return (a < 0 and b < 0)\n  else:\n    return ((a < 0 and b > 0) or (a > 0 and b < 0))\n```\n### Warmup-1 > not_string\nGiven a string, return a new string where \"not \" has been added to the front. However, if the string already begins with \"not\", return the string unchanged.  (给定一个字符串，返回一个新字符串，将“not ”添加到字符串开头。但是，如果字符串已经以“not”开头，则不加更改地返回字符串。)\nnot_string('candy') → 'not candy'  \nnot_string('x') → 'not x'  \nnot_string('not bad') → 'not bad'  \n```python\ndef not_string(str):\n  if 'not' in str[0:3]:\n    return str\n  else:\n    return \"not \"+str\n```\n官方版：\n```python\ndef not_string(str):\n  if len(str) >= 3 and str[:3] == \"not\":\n    return str\n  return \"not \" + str\n  # str[:3] goes from the start of the string up to but not\n  # including index 3\n```\n### Warmup-1 > missing_char\nGiven a non-empty string and an int n, return a new string where the char at index n has been removed. The value of n will be a valid index of a char in the original string (i.e. n will be in the range 0..len(str)-1 inclusive).  \nmissing_char('kitten', 1) → 'ktten'  \nmissing_char('kitten', 0) → 'itten'  \nmissing_char('kitten', 4) → 'kittn'  \n```python\ndef missing_char(str, n):\n  return str[:n]+str[n+1:]\n```\n官方版：\n```python\ndef missing_char(str, n):\n  front = str[:n]   # up to but not including n\n  back = str[n+1:]  # n+1 through end of string\n  return front + back\n```\n### Warmup-1 > front_back\nGiven a string, return a new string where the first and last chars have been exchanged.  (返回首尾字符交换的字符串）\nfront_back('code') → 'eodc'  \nfront_back('a') → 'a'  \nfront_back('ab') → 'ba'  \n以下代码本机测试通过(考虑字符串只有1，或0时）：\n```python\ndef front_back(str):\n  if len(str)<=1:\n    return str\n  else:\n    l=len(str)\n    first=str[0]\n    last=str[l-1]\n    return last+str[1:(l-1)]+first\n```\n官方版：\n```python\ndef front_back(str):\n  if len(str) <= 1:\n    return str\n    mid = str[1:len(str)-1]  # can be written as str[1:-1]\n    # last + mid + first\n  return str[len(str)-1] + mid + str[0]\n```\n### Warmup-1 > front3\nGiven a string, we'll say that the front is the first 3 chars of the string. If the string length is less than 3, the front is whatever is there. Return a new string which is 3 copies of the front.  \nfront3('Java') → 'JavJavJav'  \nfront3('Chocolate') → 'ChoChoCho'  \nfront3('abc') → 'abcabcabc'  \n```python\ndef front3(str):\n  if len(str)<3:\n    return str*3\n  else:\n    return str[:3]*3\n```\n官方代码：\n```python\ndef front3(str):\n  # Figure the end of the front\n  front_end = 3\n  if len(str) < front_end:\n    front_end = len(str)\n  front = str[:front_end]\n  return front + front + front \n  \n  # Could omit the if logic, and write simply front = str[:3]\n  # since the slice is silent about out-of-bounds conditions.\n```\n## Warmup-2\n### Warmup-2 > string_times\nGiven a string and a non-negative int n, return a larger string that is n copies of the original string.  (给一个字符串和非负整数，返回整数倍的字符串）\nstring_times('Hi', 2) → 'HiHi'  \nstring_times('Hi', 3) → 'HiHiHi'  \nstring_times('Hi', 1) → 'Hi'  \n```python\ndef string_times(str, n):\n  return str*n\n```\n官方代码：\n```python\ndef string_times(str, n):\n  result = \"\"\n  for i in range(n):  # range(n) is [0, 1, 2, .... n-1]\n    result = result + str  # could use += here\n  return result\n```\n### Warmup-2 > front_times\nGiven a string and a non-negative int n, we'll say that the front of the string is the first 3 chars, or whatever is there if the string is less than length 3. Return n copies of the front;（返回字符串的前3个字符的N个副本，小于3则返回3个）  \nfront_times('Chocolate', 2) → 'ChoCho'  \nfront_times('Chocolate', 3) → 'ChoChoCho'  \nfront_times('Abc', 3) → 'AbcAbcAbc'  \n```python\ndef front_times(str, n):\n  if len(str)<3:\n    return str*n\n  else:\n    return str[:3]*n\n```\n官方代码：\n```python\ndef front_times(str, n):\n  front_len = 3\n  if front_len > len(str):\n    front_len = len(str)\n  front = str[:front_len]\n  \n  result = \"\"\n  for i in range(n):\n    result = result + front\n  return result\n```\n### Warmup-2 > string_bits\nGiven a string, return a new string made of every other char starting with the first, so \"Hello\" yields \"Hlo\".  \nstring_bits('Hello') → 'Hlo'  \nstring_bits('Hi') → 'H'  \nstring_bits('Heeololeo') → 'Hello'  \n```python\ndef string_bits(str):\n  result=''\n  if len(str)<=1: #这两句多于了，有i%2==0足够表达\n    result=str\n  else:\n    for i in range(len(str)):\n      if i%2==0:\n        result=result+str[i]\n  return result\n```\n官方代码：\n```python\ndef string_bits(str):\n  result = \"\"\n  # Many ways to do this. This uses the standard loop of i on every char,\n  # and inside the loop skips the odd index values.\n  for i in range(len(str)):\n    if i % 2 == 0:\n      result = result + str[i]\n  return result\n```\n### Warmup-2 > string_splosion\nGiven a non-empty string like \"Code\" return a string like \"CCoCodCode\".  \nstring_splosion('Code') → 'CCoCodCode'  \nstring_splosion('abc') → 'aababc'  \nstring_splosion('ab') → 'aab'  \n```python\ndef string_splosion(str):\n  result=''\n  for i in range(len(str)):\n    if i==0:\t\t\t#这三句多余了，有str[:i+1]就足以包含，参考官方代码\n      result=result+str[i]\n    else:\n      result=result+str[:i+1]\n  return result\n```\n官方代码：\n```python\ndef string_splosion(str):\n  result = \"\"\n  # On each iteration, add the substring of the chars 0..i\n  for i in range(len(str)):\n    result = result + str[:i+1]\n  return result\n```\n### Warmup-2 > last2\nGiven a string, return the count of the number of times that a substring length 2 appears in the string and also as the last 2 chars of the string, so \"hixxxhi\" yields 1 (we won't count the end substring).  (返回字符串最后两个字符出现的次数，不计最后出现这一次）\nlast2('hixxhi') → 1  \nlast2('xaxxaxaxx') → 1  \nlast2('axxxaaxx') → 2  \n```pthon\ndef last2(str):\n  count=0\n  str_len=len(str)\n  last=str[str_len-2:str_len]\n  for i in range(str_len):\n    if str[i:i+2]==last and i<str_len-2:\n      count+=1\n\n  return count\n```\n官方代码：\n```python\ndef last2(str):\n  # Screen out too-short string case.\n  if len(str) < 2:\n    return 0\n  \n  # last 2 chars, can be written as str[-2:]\n  last2 = str[len(str)-2:]\n  count = 0\n  \n  # Check each substring length 2 starting at i\n  for i in range(len(str)-2):\n    sub = str[i:i+2]\n    if sub == last2:\n      count = count + 1\n\n  return count\n```\n### Warmup-2 > array_count9\nGiven an array of ints, return the number of 9's in the array.（返回整数数组中9出现的次数）\narray_count9([1, 2, 9]) → 1\narray_count9([1, 9, 9]) → 2\narray_count9([1, 9, 9, 3, 9]) → 3\n```python\ndef array_count9(nums):\n  count=0\n  for each in nums:\n    if each==9:\n      count+=1\n  return count\n```\n官方代码一致，唯变量不同：\n### Warmup-2 > array_front9\nGiven an array of ints, return True if one of the first 4 elements in the array is a 9. The array length may be less than 4.  (返回整数数组中前4位数中出现9的布尔值）\narray_front9([1, 2, 9, 3, 4]) → True  \narray_front9([1, 2, 3, 4, 9]) → False  \narray_front9([1, 2, 3, 4, 5]) → False  \n```python\ndef array_front9(nums):\n  return (9 in nums[:4])\n```\n官方代码：\n```python\ndef array_front9(nums):\n  # First figure the end for the loop\n  end = len(nums)\n  if end > 4:\n    end = 4\n  \n  for i in range(end):  # loop over index [0, 1, 2, 3]\n    if nums[i] == 9:\n      return True\n  return False\n```\n### Warmup-2 > array123\nGiven an array of ints, return True if the sequence of numbers 1, 2, 3 appears in the array somewhere.  \narray123([1, 1, 2, 3, 1]) → True  \narray123([1, 1, 2, 4, 1]) → False  \narray123([1, 1, 2, 1, 2, 3]) → True  \n```python\ndef array123(nums):\n  if len(nums)==0:\n    return False\n  for i in range(len(nums)):\n    if i+2<len(nums):\n      if nums[i]==1 and nums[i+1]==2 and nums[i+2]==3:\n        return True\n    else:\n        return False\n```\n官方代码：\n```python\ndef array123(nums):\n  # Note: iterate with length-2, so can use i+1 and i+2 in the loop\n  for i in range(len(nums)-2):\n    if nums[i]==1 and nums[i+1]==2 and nums[i+2]==3:\n      return True\n  return False\n```\n### Warmup-2 > string_match\nGiven 2 strings, a and b, return the number of the positions where they contain the same length 2 substring. So \"xxcaazz\" and \"xxbaaz\" yields 3, since the \"xx\", \"aa\", and \"az\" substrings appear in the same place in both strings.  （返回两个字符串中在相同位置出现相同两个字符的次数）\nstring_match('xxcaazz', 'xxbaaz') → 3  \nstring_match('abc', 'abc') → 2  \nstring_match('abc', 'axc') → 0  \n```python\ndef string_match(a, b):\n  if len(a)<=len(b):\t#以最短的字串长度为主\n    len_s=len(a)\n  else:\n    len_s=len(b)\n  count=0\n  for i in range(len_s-1):\n    if a[i]+a[i+1] == b[i]+b[i+1]:\n      count+=1\n  return count\n```\n官方代码：\n```python\ndef string_match(a, b):\n  # Figure which string is shorter.\n  shorter = min(len(a), len(b))\n  count = 0\n  \n  # Loop i over every substring starting spot.\n  # Use length-1 here, so can use char str[i+1] in the loop\n  for i in range(shorter-1):\n    a_sub = a[i:i+2]\n    b_sub = b[i:i+2]\n    if a_sub == b_sub:\n      count = count + 1\n\n  return count\n```","slug":"codingbat-warmup","published":1,"updated":"2021-03-04T17:04:07.228Z","_id":"cklt3r3dd00088cw42lwcgia5","comments":1,"photos":[],"link":"","content":"<h2 id=\"python练习题园地（一）——Warmup篇\"><a href=\"#python练习题园地（一）——Warmup篇\" class=\"headerlink\" title=\"python练习题园地（一）——Warmup篇\"></a>python练习题园地（一）——Warmup篇</h2><p>最近找到一个网站：<a href=\"https://codingbat.com/python\">https://codingbat.com/python</a>，这里是python和java初学者的园地，在这里你可以充分的发挥你在程序学习上的逻辑推理能力。一关一关的过，做你没做过或是曾做过后练习题，在学习的同时还可以熟悉一下英文，大多数都可以看懂。</p>\n<h2 id=\"Warmup-1\"><a href=\"#Warmup-1\" class=\"headerlink\" title=\"Warmup-1:\"></a>Warmup-1:</h2><h3 id=\"Warmup-1-gt-sleep-in：\"><a href=\"#Warmup-1-gt-sleep-in：\" class=\"headerlink\" title=\"Warmup-1 &gt; sleep_in：\"></a>Warmup-1 &gt; sleep_in：</h3><p>The parameter weekday is True if it is a weekday, and the parameter vacation is True if we are on vacation. We sleep in if it is not a weekday or we’re on vacation. Return True if we sleep in.<br>sleep_in(False, False) → True<br>sleep_in(True, False) → False<br>sleep_in(False, True) → True  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sleep_in</span>(<span class=\"params\">weekday, vacation</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> weekday <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> vacation:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> weekday <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> vacation:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> weekday <span class=\"keyword\">and</span> vacation:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-monkey-trouble\"><a href=\"#Warmup-1-gt-monkey-trouble\" class=\"headerlink\" title=\"Warmup-1 &gt; monkey_trouble\"></a>Warmup-1 &gt; monkey_trouble</h3><p>We have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.<br>monkey_trouble(True, True) → True<br>monkey_trouble(False, False) → True<br>monkey_trouble(True, False) → False  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">monkey_trouble</span>(<span class=\"params\">a_smile, b_smile</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a_smile <span class=\"keyword\">and</span> b_smile:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> a_smile <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> b_smile:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-sum-double\"><a href=\"#Warmup-1-gt-sum-double\" class=\"headerlink\" title=\"Warmup-1 &gt; sum_double\"></a>Warmup-1 &gt; sum_double</h3><p>Given two int values, return their sum. Unless the two values are the same, then return double their sum.<br>sum_double(1, 2) → 3<br>sum_double(3, 2) → 5<br>sum_double(2, 2) → 8  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sum_double</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a!=b:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (a+b)*<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-diff21\"><a href=\"#Warmup-1-gt-diff21\" class=\"headerlink\" title=\"Warmup-1 &gt; diff21\"></a>Warmup-1 &gt; diff21</h3><p>Given an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.<br>diff21(19) → 2<br>diff21(10) → 11<br>diff21(21) → 0  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">diff21</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> n&lt;=<span class=\"number\">21</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">21</span>-n</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (n-<span class=\"number\">21</span>)*<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-parrot-trouble\"><a href=\"#Warmup-1-gt-parrot-trouble\" class=\"headerlink\" title=\"Warmup-1 &gt; parrot_trouble\"></a>Warmup-1 &gt; parrot_trouble</h3><p>We have a loud talking parrot. The “hour” parameter is the current hour time in the range 0..23. We are in trouble if the parrot is talking and the hour is before 7 or after 20. Return True if we are in trouble.<br>parrot_trouble(True, 6) → True<br>parrot_trouble(True, 7) → False<br>parrot_trouble(False, 6) → False  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parrot_trouble</span>(<span class=\"params\">talking, hour</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> talking <span class=\"keyword\">and</span> (hour&lt;<span class=\"number\">7</span> <span class=\"keyword\">or</span> hour&gt;<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-makes10\"><a href=\"#Warmup-1-gt-makes10\" class=\"headerlink\" title=\"Warmup-1 &gt; makes10\"></a>Warmup-1 &gt; makes10</h3><p>Given 2 ints, a and b, return True if one if them is 10 or if their sum is 10.<br>makes10(9, 10) → True<br>makes10(9, 9) → False<br>makes10(1, 9) → True  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">makes10</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a==<span class=\"number\">10</span> <span class=\"keyword\">or</span> b==<span class=\"number\">10</span> <span class=\"keyword\">or</span> a+b==<span class=\"number\">10</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<p>简洁版（官方版），仔细思量：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">makes10</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (a == <span class=\"number\">10</span> <span class=\"keyword\">or</span> b == <span class=\"number\">10</span> <span class=\"keyword\">or</span> a+b == <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-near-hundred\"><a href=\"#Warmup-1-gt-near-hundred\" class=\"headerlink\" title=\"Warmup-1 &gt; near_hundred\"></a>Warmup-1 &gt; near_hundred</h3><p>Given an int n, return True if it is within 10 of 100 or 200. Note: abs(num) computes the absolute value of a number.<br>near_hundred(93) → True<br>near_hundred(90) → True<br>near_hundred(89) → False  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">near_hundred</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(<span class=\"number\">100</span>-n)&lt;=<span class=\"number\">10</span> <span class=\"keyword\">or</span> <span class=\"built_in\">abs</span>(<span class=\"number\">200</span>-n)&lt;=<span class=\"number\">10</span> :</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">near_hundred</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> ((<span class=\"built_in\">abs</span>(<span class=\"number\">100</span> - n) &lt;= <span class=\"number\">10</span>) <span class=\"keyword\">or</span> (<span class=\"built_in\">abs</span>(<span class=\"number\">200</span> - n) &lt;= <span class=\"number\">10</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-pos-neg\"><a href=\"#Warmup-1-gt-pos-neg\" class=\"headerlink\" title=\"Warmup-1 &gt; pos_neg\"></a>Warmup-1 &gt; pos_neg</h3><p>Given 2 int values, return True if one is negative(负数) and one is positive(正数）. Except if the parameter “negative” is True, then return True only if both are negative.<br>pos_neg(1, -1, False) → True<br>pos_neg(-1, 1, False) → True<br>pos_neg(-4, -5, True) → True</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pos_neg</span>(<span class=\"params\">a, b, negative</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>  ((a&lt;<span class=\"number\">0</span> <span class=\"keyword\">and</span> b&gt;<span class=\"number\">0</span>) <span class=\"keyword\">or</span>(a&gt;<span class=\"number\">0</span> <span class=\"keyword\">and</span> b&lt;<span class=\"number\">0</span>)) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> negative:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> negative <span class=\"keyword\">and</span> (a&lt;<span class=\"number\">0</span> <span class=\"keyword\">and</span> b&lt;<span class=\"number\">0</span>) :</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span> </span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pos_neg</span>(<span class=\"params\">a, b, negative</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> negative:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (a &lt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> b &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ((a &lt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> b &gt; <span class=\"number\">0</span>) <span class=\"keyword\">or</span> (a &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> b &lt; <span class=\"number\">0</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-not-string\"><a href=\"#Warmup-1-gt-not-string\" class=\"headerlink\" title=\"Warmup-1 &gt; not_string\"></a>Warmup-1 &gt; not_string</h3><p>Given a string, return a new string where “not “ has been added to the front. However, if the string already begins with “not”, return the string unchanged.  (给定一个字符串，返回一个新字符串，将“not ”添加到字符串开头。但是，如果字符串已经以“not”开头，则不加更改地返回字符串。)<br>not_string(‘candy’) → ‘not candy’<br>not_string(‘x’) → ‘not x’<br>not_string(‘not bad’) → ‘not bad’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_string</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&#x27;not&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>[<span class=\"number\">0</span>:<span class=\"number\">3</span>]:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;not &quot;</span>+<span class=\"built_in\">str</span></span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_string</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &gt;= <span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"built_in\">str</span>[:<span class=\"number\">3</span>] == <span class=\"string\">&quot;not&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;not &quot;</span> + <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"comment\"># str[:3] goes from the start of the string up to but not</span></span><br><span class=\"line\">  <span class=\"comment\"># including index 3</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-missing-char\"><a href=\"#Warmup-1-gt-missing-char\" class=\"headerlink\" title=\"Warmup-1 &gt; missing_char\"></a>Warmup-1 &gt; missing_char</h3><p>Given a non-empty string and an int n, return a new string where the char at index n has been removed. The value of n will be a valid index of a char in the original string (i.e. n will be in the range 0..len(str)-1 inclusive).<br>missing_char(‘kitten’, 1) → ‘ktten’<br>missing_char(‘kitten’, 0) → ‘itten’<br>missing_char(‘kitten’, 4) → ‘kittn’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">missing_char</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:n]+<span class=\"built_in\">str</span>[n+<span class=\"number\">1</span>:]</span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">missing_char</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  front = <span class=\"built_in\">str</span>[:n]   <span class=\"comment\"># up to but not including n</span></span><br><span class=\"line\">  back = <span class=\"built_in\">str</span>[n+<span class=\"number\">1</span>:]  <span class=\"comment\"># n+1 through end of string</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> front + back</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-front-back\"><a href=\"#Warmup-1-gt-front-back\" class=\"headerlink\" title=\"Warmup-1 &gt; front_back\"></a>Warmup-1 &gt; front_back</h3><p>Given a string, return a new string where the first and last chars have been exchanged.  (返回首尾字符交换的字符串）<br>front_back(‘code’) → ‘eodc’<br>front_back(‘a’) → ‘a’<br>front_back(‘ab’) → ‘ba’<br>以下代码本机测试通过(考虑字符串只有1，或0时）：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front_back</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;=<span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    l=<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">    first=<span class=\"built_in\">str</span>[<span class=\"number\">0</span>]</span><br><span class=\"line\">    last=<span class=\"built_in\">str</span>[l-<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> last+<span class=\"built_in\">str</span>[<span class=\"number\">1</span>:(l-<span class=\"number\">1</span>)]+first</span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front_back</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &lt;= <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">    mid = <span class=\"built_in\">str</span>[<span class=\"number\">1</span>:<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">1</span>]  <span class=\"comment\"># can be written as str[1:-1]</span></span><br><span class=\"line\">    <span class=\"comment\"># last + mid + first</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">1</span>] + mid + <span class=\"built_in\">str</span>[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-front3\"><a href=\"#Warmup-1-gt-front3\" class=\"headerlink\" title=\"Warmup-1 &gt; front3\"></a>Warmup-1 &gt; front3</h3><p>Given a string, we’ll say that the front is the first 3 chars of the string. If the string length is less than 3, the front is whatever is there. Return a new string which is 3 copies of the front.<br>front3(‘Java’) → ‘JavJavJav’<br>front3(‘Chocolate’) → ‘ChoChoCho’<br>front3(‘abc’) → ‘abcabcabc’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front3</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;<span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>*<span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:<span class=\"number\">3</span>]*<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front3</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># Figure the end of the front</span></span><br><span class=\"line\">  front_end = <span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &lt; front_end:</span><br><span class=\"line\">    front_end = <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">  front = <span class=\"built_in\">str</span>[:front_end]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> front + front + front </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Could omit the if logic, and write simply front = str[:3]</span></span><br><span class=\"line\">  <span class=\"comment\"># since the slice is silent about out-of-bounds conditions.</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Warmup-2\"><a href=\"#Warmup-2\" class=\"headerlink\" title=\"Warmup-2\"></a>Warmup-2</h2><h3 id=\"Warmup-2-gt-string-times\"><a href=\"#Warmup-2-gt-string-times\" class=\"headerlink\" title=\"Warmup-2 &gt; string_times\"></a>Warmup-2 &gt; string_times</h3><p>Given a string and a non-negative int n, return a larger string that is n copies of the original string.  (给一个字符串和非负整数，返回整数倍的字符串）<br>string_times(‘Hi’, 2) → ‘HiHi’<br>string_times(‘Hi’, 3) → ‘HiHiHi’<br>string_times(‘Hi’, 1) → ‘Hi’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_times</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>*n</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_times</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  result = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):  <span class=\"comment\"># range(n) is [0, 1, 2, .... n-1]</span></span><br><span class=\"line\">    result = result + <span class=\"built_in\">str</span>  <span class=\"comment\"># could use += here</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-front-times\"><a href=\"#Warmup-2-gt-front-times\" class=\"headerlink\" title=\"Warmup-2 &gt; front_times\"></a>Warmup-2 &gt; front_times</h3><p>Given a string and a non-negative int n, we’ll say that the front of the string is the first 3 chars, or whatever is there if the string is less than length 3. Return n copies of the front;（返回字符串的前3个字符的N个副本，小于3则返回3个）<br>front_times(‘Chocolate’, 2) → ‘ChoCho’<br>front_times(‘Chocolate’, 3) → ‘ChoChoCho’<br>front_times(‘Abc’, 3) → ‘AbcAbcAbc’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front_times</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;<span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>*n</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:<span class=\"number\">3</span>]*n</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front_times</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  front_len = <span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> front_len &gt; <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>):</span><br><span class=\"line\">    front_len = <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">  front = <span class=\"built_in\">str</span>[:front_len]</span><br><span class=\"line\">  </span><br><span class=\"line\">  result = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    result = result + front</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-string-bits\"><a href=\"#Warmup-2-gt-string-bits\" class=\"headerlink\" title=\"Warmup-2 &gt; string_bits\"></a>Warmup-2 &gt; string_bits</h3><p>Given a string, return a new string made of every other char starting with the first, so “Hello” yields “Hlo”.<br>string_bits(‘Hello’) → ‘Hlo’<br>string_bits(‘Hi’) → ‘H’<br>string_bits(‘Heeololeo’) → ‘Hello’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_bits</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  result=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;=<span class=\"number\">1</span>: <span class=\"comment\">#这两句多于了，有i%2==0足够表达</span></span><br><span class=\"line\">    result=<span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)):</span><br><span class=\"line\">      <span class=\"keyword\">if</span> i%<span class=\"number\">2</span>==<span class=\"number\">0</span>:</span><br><span class=\"line\">        result=result+<span class=\"built_in\">str</span>[i]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_bits</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  result = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># Many ways to do this. This uses the standard loop of i on every char,</span></span><br><span class=\"line\">  <span class=\"comment\"># and inside the loop skips the odd index values.</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">      result = result + <span class=\"built_in\">str</span>[i]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-string-splosion\"><a href=\"#Warmup-2-gt-string-splosion\" class=\"headerlink\" title=\"Warmup-2 &gt; string_splosion\"></a>Warmup-2 &gt; string_splosion</h3><p>Given a non-empty string like “Code” return a string like “CCoCodCode”.<br>string_splosion(‘Code’) → ‘CCoCodCode’<br>string_splosion(‘abc’) → ‘aababc’<br>string_splosion(‘ab’) → ‘aab’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_splosion</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  result=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i==<span class=\"number\">0</span>:\t\t\t<span class=\"comment\">#这三句多余了，有str[:i+1]就足以包含，参考官方代码</span></span><br><span class=\"line\">      result=result+<span class=\"built_in\">str</span>[i]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      result=result+<span class=\"built_in\">str</span>[:i+<span class=\"number\">1</span>]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_splosion</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  result = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># On each iteration, add the substring of the chars 0..i</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)):</span><br><span class=\"line\">    result = result + <span class=\"built_in\">str</span>[:i+<span class=\"number\">1</span>]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-last2\"><a href=\"#Warmup-2-gt-last2\" class=\"headerlink\" title=\"Warmup-2 &gt; last2\"></a>Warmup-2 &gt; last2</h3><p>Given a string, return the count of the number of times that a substring length 2 appears in the string and also as the last 2 chars of the string, so “hixxxhi” yields 1 (we won’t count the end substring).  (返回字符串最后两个字符出现的次数，不计最后出现这一次）<br>last2(‘hixxhi’) → 1<br>last2(‘xaxxaxaxx’) → 1<br>last2(‘axxxaaxx’) → 2  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def last2(str):</span><br><span class=\"line\">  count&#x3D;0</span><br><span class=\"line\">  str_len&#x3D;len(str)</span><br><span class=\"line\">  last&#x3D;str[str_len-2:str_len]</span><br><span class=\"line\">  for i in range(str_len):</span><br><span class=\"line\">    if str[i:i+2]&#x3D;&#x3D;last and i&lt;str_len-2:</span><br><span class=\"line\">      count+&#x3D;1</span><br><span class=\"line\"></span><br><span class=\"line\">  return count</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">last2</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># Screen out too-short string case.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># last 2 chars, can be written as str[-2:]</span></span><br><span class=\"line\">  last2 = <span class=\"built_in\">str</span>[<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">2</span>:]</span><br><span class=\"line\">  count = <span class=\"number\">0</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Check each substring length 2 starting at i</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">2</span>):</span><br><span class=\"line\">    sub = <span class=\"built_in\">str</span>[i:i+<span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> sub == last2:</span><br><span class=\"line\">      count = count + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-array-count9\"><a href=\"#Warmup-2-gt-array-count9\" class=\"headerlink\" title=\"Warmup-2 &gt; array_count9\"></a>Warmup-2 &gt; array_count9</h3><p>Given an array of ints, return the number of 9’s in the array.（返回整数数组中9出现的次数）<br>array_count9([1, 2, 9]) → 1<br>array_count9([1, 9, 9]) → 2<br>array_count9([1, 9, 9, 3, 9]) → 3</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_count9</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  count=<span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> nums:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> each==<span class=\"number\">9</span>:</span><br><span class=\"line\">      count+=<span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>\n<p>官方代码一致，唯变量不同：</p>\n<h3 id=\"Warmup-2-gt-array-front9\"><a href=\"#Warmup-2-gt-array-front9\" class=\"headerlink\" title=\"Warmup-2 &gt; array_front9\"></a>Warmup-2 &gt; array_front9</h3><p>Given an array of ints, return True if one of the first 4 elements in the array is a 9. The array length may be less than 4.  (返回整数数组中前4位数中出现9的布尔值）<br>array_front9([1, 2, 9, 3, 4]) → True<br>array_front9([1, 2, 3, 4, 9]) → False<br>array_front9([1, 2, 3, 4, 5]) → False  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_front9</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (<span class=\"number\">9</span> <span class=\"keyword\">in</span> nums[:<span class=\"number\">4</span>])</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_front9</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># First figure the end for the loop</span></span><br><span class=\"line\">  end = <span class=\"built_in\">len</span>(nums)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> end &gt; <span class=\"number\">4</span>:</span><br><span class=\"line\">    end = <span class=\"number\">4</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(end):  <span class=\"comment\"># loop over index [0, 1, 2, 3]</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nums[i] == <span class=\"number\">9</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-array123\"><a href=\"#Warmup-2-gt-array123\" class=\"headerlink\" title=\"Warmup-2 &gt; array123\"></a>Warmup-2 &gt; array123</h3><p>Given an array of ints, return True if the sequence of numbers 1, 2, 3 appears in the array somewhere.<br>array123([1, 1, 2, 3, 1]) → True<br>array123([1, 1, 2, 4, 1]) → False<br>array123([1, 1, 2, 1, 2, 3]) → True  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array123</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(nums)==<span class=\"number\">0</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(nums)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i+<span class=\"number\">2</span>&lt;<span class=\"built_in\">len</span>(nums):</span><br><span class=\"line\">      <span class=\"keyword\">if</span> nums[i]==<span class=\"number\">1</span> <span class=\"keyword\">and</span> nums[i+<span class=\"number\">1</span>]==<span class=\"number\">2</span> <span class=\"keyword\">and</span> nums[i+<span class=\"number\">2</span>]==<span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array123</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># Note: iterate with length-2, so can use i+1 and i+2 in the loop</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(nums)-<span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> nums[i]==<span class=\"number\">1</span> <span class=\"keyword\">and</span> nums[i+<span class=\"number\">1</span>]==<span class=\"number\">2</span> <span class=\"keyword\">and</span> nums[i+<span class=\"number\">2</span>]==<span class=\"number\">3</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-string-match\"><a href=\"#Warmup-2-gt-string-match\" class=\"headerlink\" title=\"Warmup-2 &gt; string_match\"></a>Warmup-2 &gt; string_match</h3><p>Given 2 strings, a and b, return the number of the positions where they contain the same length 2 substring. So “xxcaazz” and “xxbaaz” yields 3, since the “xx”, “aa”, and “az” substrings appear in the same place in both strings.  （返回两个字符串中在相同位置出现相同两个字符的次数）<br>string_match(‘xxcaazz’, ‘xxbaaz’) → 3<br>string_match(‘abc’, ‘abc’) → 2<br>string_match(‘abc’, ‘axc’) → 0  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_match</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(a)&lt;=<span class=\"built_in\">len</span>(b):\t<span class=\"comment\">#以最短的字串长度为主</span></span><br><span class=\"line\">    len_s=<span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    len_s=<span class=\"built_in\">len</span>(b)</span><br><span class=\"line\">  count=<span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(len_s-<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a[i]+a[i+<span class=\"number\">1</span>] == b[i]+b[i+<span class=\"number\">1</span>]:</span><br><span class=\"line\">      count+=<span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_match</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># Figure which string is shorter.</span></span><br><span class=\"line\">  shorter = <span class=\"built_in\">min</span>(<span class=\"built_in\">len</span>(a), <span class=\"built_in\">len</span>(b))</span><br><span class=\"line\">  count = <span class=\"number\">0</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Loop i over every substring starting spot.</span></span><br><span class=\"line\">  <span class=\"comment\"># Use length-1 here, so can use char str[i+1] in the loop</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(shorter-<span class=\"number\">1</span>):</span><br><span class=\"line\">    a_sub = a[i:i+<span class=\"number\">2</span>]</span><br><span class=\"line\">    b_sub = b[i:i+<span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a_sub == b_sub:</span><br><span class=\"line\">      count = count + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"python练习题园地（一）——Warmup篇\"><a href=\"#python练习题园地（一）——Warmup篇\" class=\"headerlink\" title=\"python练习题园地（一）——Warmup篇\"></a>python练习题园地（一）——Warmup篇</h2><p>最近找到一个网站：<a href=\"https://codingbat.com/python\">https://codingbat.com/python</a>，这里是python和java初学者的园地，在这里你可以充分的发挥你在程序学习上的逻辑推理能力。一关一关的过，做你没做过或是曾做过后练习题，在学习的同时还可以熟悉一下英文，大多数都可以看懂。</p>\n<h2 id=\"Warmup-1\"><a href=\"#Warmup-1\" class=\"headerlink\" title=\"Warmup-1:\"></a>Warmup-1:</h2><h3 id=\"Warmup-1-gt-sleep-in：\"><a href=\"#Warmup-1-gt-sleep-in：\" class=\"headerlink\" title=\"Warmup-1 &gt; sleep_in：\"></a>Warmup-1 &gt; sleep_in：</h3><p>The parameter weekday is True if it is a weekday, and the parameter vacation is True if we are on vacation. We sleep in if it is not a weekday or we’re on vacation. Return True if we sleep in.<br>sleep_in(False, False) → True<br>sleep_in(True, False) → False<br>sleep_in(False, True) → True  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sleep_in</span>(<span class=\"params\">weekday, vacation</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> weekday <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> vacation:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> weekday <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> vacation:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> weekday <span class=\"keyword\">and</span> vacation:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-monkey-trouble\"><a href=\"#Warmup-1-gt-monkey-trouble\" class=\"headerlink\" title=\"Warmup-1 &gt; monkey_trouble\"></a>Warmup-1 &gt; monkey_trouble</h3><p>We have two monkeys, a and b, and the parameters a_smile and b_smile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return True if we are in trouble.<br>monkey_trouble(True, True) → True<br>monkey_trouble(False, False) → True<br>monkey_trouble(True, False) → False  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">monkey_trouble</span>(<span class=\"params\">a_smile, b_smile</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a_smile <span class=\"keyword\">and</span> b_smile:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> a_smile <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> b_smile:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-sum-double\"><a href=\"#Warmup-1-gt-sum-double\" class=\"headerlink\" title=\"Warmup-1 &gt; sum_double\"></a>Warmup-1 &gt; sum_double</h3><p>Given two int values, return their sum. Unless the two values are the same, then return double their sum.<br>sum_double(1, 2) → 3<br>sum_double(3, 2) → 5<br>sum_double(2, 2) → 8  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sum_double</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a!=b:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (a+b)*<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-diff21\"><a href=\"#Warmup-1-gt-diff21\" class=\"headerlink\" title=\"Warmup-1 &gt; diff21\"></a>Warmup-1 &gt; diff21</h3><p>Given an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.<br>diff21(19) → 2<br>diff21(10) → 11<br>diff21(21) → 0  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">diff21</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> n&lt;=<span class=\"number\">21</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">21</span>-n</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (n-<span class=\"number\">21</span>)*<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-parrot-trouble\"><a href=\"#Warmup-1-gt-parrot-trouble\" class=\"headerlink\" title=\"Warmup-1 &gt; parrot_trouble\"></a>Warmup-1 &gt; parrot_trouble</h3><p>We have a loud talking parrot. The “hour” parameter is the current hour time in the range 0..23. We are in trouble if the parrot is talking and the hour is before 7 or after 20. Return True if we are in trouble.<br>parrot_trouble(True, 6) → True<br>parrot_trouble(True, 7) → False<br>parrot_trouble(False, 6) → False  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parrot_trouble</span>(<span class=\"params\">talking, hour</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> talking <span class=\"keyword\">and</span> (hour&lt;<span class=\"number\">7</span> <span class=\"keyword\">or</span> hour&gt;<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-makes10\"><a href=\"#Warmup-1-gt-makes10\" class=\"headerlink\" title=\"Warmup-1 &gt; makes10\"></a>Warmup-1 &gt; makes10</h3><p>Given 2 ints, a and b, return True if one if them is 10 or if their sum is 10.<br>makes10(9, 10) → True<br>makes10(9, 9) → False<br>makes10(1, 9) → True  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">makes10</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a==<span class=\"number\">10</span> <span class=\"keyword\">or</span> b==<span class=\"number\">10</span> <span class=\"keyword\">or</span> a+b==<span class=\"number\">10</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<p>简洁版（官方版），仔细思量：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">makes10</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (a == <span class=\"number\">10</span> <span class=\"keyword\">or</span> b == <span class=\"number\">10</span> <span class=\"keyword\">or</span> a+b == <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-near-hundred\"><a href=\"#Warmup-1-gt-near-hundred\" class=\"headerlink\" title=\"Warmup-1 &gt; near_hundred\"></a>Warmup-1 &gt; near_hundred</h3><p>Given an int n, return True if it is within 10 of 100 or 200. Note: abs(num) computes the absolute value of a number.<br>near_hundred(93) → True<br>near_hundred(90) → True<br>near_hundred(89) → False  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">near_hundred</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(<span class=\"number\">100</span>-n)&lt;=<span class=\"number\">10</span> <span class=\"keyword\">or</span> <span class=\"built_in\">abs</span>(<span class=\"number\">200</span>-n)&lt;=<span class=\"number\">10</span> :</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">near_hundred</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> ((<span class=\"built_in\">abs</span>(<span class=\"number\">100</span> - n) &lt;= <span class=\"number\">10</span>) <span class=\"keyword\">or</span> (<span class=\"built_in\">abs</span>(<span class=\"number\">200</span> - n) &lt;= <span class=\"number\">10</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-pos-neg\"><a href=\"#Warmup-1-gt-pos-neg\" class=\"headerlink\" title=\"Warmup-1 &gt; pos_neg\"></a>Warmup-1 &gt; pos_neg</h3><p>Given 2 int values, return True if one is negative(负数) and one is positive(正数）. Except if the parameter “negative” is True, then return True only if both are negative.<br>pos_neg(1, -1, False) → True<br>pos_neg(-1, 1, False) → True<br>pos_neg(-4, -5, True) → True</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pos_neg</span>(<span class=\"params\">a, b, negative</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>  ((a&lt;<span class=\"number\">0</span> <span class=\"keyword\">and</span> b&gt;<span class=\"number\">0</span>) <span class=\"keyword\">or</span>(a&gt;<span class=\"number\">0</span> <span class=\"keyword\">and</span> b&lt;<span class=\"number\">0</span>)) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> negative:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> negative <span class=\"keyword\">and</span> (a&lt;<span class=\"number\">0</span> <span class=\"keyword\">and</span> b&lt;<span class=\"number\">0</span>) :</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span> </span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pos_neg</span>(<span class=\"params\">a, b, negative</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> negative:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (a &lt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> b &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ((a &lt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> b &gt; <span class=\"number\">0</span>) <span class=\"keyword\">or</span> (a &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> b &lt; <span class=\"number\">0</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-not-string\"><a href=\"#Warmup-1-gt-not-string\" class=\"headerlink\" title=\"Warmup-1 &gt; not_string\"></a>Warmup-1 &gt; not_string</h3><p>Given a string, return a new string where “not “ has been added to the front. However, if the string already begins with “not”, return the string unchanged.  (给定一个字符串，返回一个新字符串，将“not ”添加到字符串开头。但是，如果字符串已经以“not”开头，则不加更改地返回字符串。)<br>not_string(‘candy’) → ‘not candy’<br>not_string(‘x’) → ‘not x’<br>not_string(‘not bad’) → ‘not bad’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_string</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"string\">&#x27;not&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>[<span class=\"number\">0</span>:<span class=\"number\">3</span>]:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;not &quot;</span>+<span class=\"built_in\">str</span></span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_string</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &gt;= <span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"built_in\">str</span>[:<span class=\"number\">3</span>] == <span class=\"string\">&quot;not&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;not &quot;</span> + <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"comment\"># str[:3] goes from the start of the string up to but not</span></span><br><span class=\"line\">  <span class=\"comment\"># including index 3</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-missing-char\"><a href=\"#Warmup-1-gt-missing-char\" class=\"headerlink\" title=\"Warmup-1 &gt; missing_char\"></a>Warmup-1 &gt; missing_char</h3><p>Given a non-empty string and an int n, return a new string where the char at index n has been removed. The value of n will be a valid index of a char in the original string (i.e. n will be in the range 0..len(str)-1 inclusive).<br>missing_char(‘kitten’, 1) → ‘ktten’<br>missing_char(‘kitten’, 0) → ‘itten’<br>missing_char(‘kitten’, 4) → ‘kittn’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">missing_char</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:n]+<span class=\"built_in\">str</span>[n+<span class=\"number\">1</span>:]</span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">missing_char</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  front = <span class=\"built_in\">str</span>[:n]   <span class=\"comment\"># up to but not including n</span></span><br><span class=\"line\">  back = <span class=\"built_in\">str</span>[n+<span class=\"number\">1</span>:]  <span class=\"comment\"># n+1 through end of string</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> front + back</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-front-back\"><a href=\"#Warmup-1-gt-front-back\" class=\"headerlink\" title=\"Warmup-1 &gt; front_back\"></a>Warmup-1 &gt; front_back</h3><p>Given a string, return a new string where the first and last chars have been exchanged.  (返回首尾字符交换的字符串）<br>front_back(‘code’) → ‘eodc’<br>front_back(‘a’) → ‘a’<br>front_back(‘ab’) → ‘ba’<br>以下代码本机测试通过(考虑字符串只有1，或0时）：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front_back</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;=<span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    l=<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">    first=<span class=\"built_in\">str</span>[<span class=\"number\">0</span>]</span><br><span class=\"line\">    last=<span class=\"built_in\">str</span>[l-<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> last+<span class=\"built_in\">str</span>[<span class=\"number\">1</span>:(l-<span class=\"number\">1</span>)]+first</span><br></pre></td></tr></table></figure>\n<p>官方版：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front_back</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &lt;= <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">    mid = <span class=\"built_in\">str</span>[<span class=\"number\">1</span>:<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">1</span>]  <span class=\"comment\"># can be written as str[1:-1]</span></span><br><span class=\"line\">    <span class=\"comment\"># last + mid + first</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">1</span>] + mid + <span class=\"built_in\">str</span>[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-1-gt-front3\"><a href=\"#Warmup-1-gt-front3\" class=\"headerlink\" title=\"Warmup-1 &gt; front3\"></a>Warmup-1 &gt; front3</h3><p>Given a string, we’ll say that the front is the first 3 chars of the string. If the string length is less than 3, the front is whatever is there. Return a new string which is 3 copies of the front.<br>front3(‘Java’) → ‘JavJavJav’<br>front3(‘Chocolate’) → ‘ChoChoCho’<br>front3(‘abc’) → ‘abcabcabc’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front3</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;<span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>*<span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:<span class=\"number\">3</span>]*<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front3</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># Figure the end of the front</span></span><br><span class=\"line\">  front_end = <span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &lt; front_end:</span><br><span class=\"line\">    front_end = <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">  front = <span class=\"built_in\">str</span>[:front_end]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> front + front + front </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Could omit the if logic, and write simply front = str[:3]</span></span><br><span class=\"line\">  <span class=\"comment\"># since the slice is silent about out-of-bounds conditions.</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Warmup-2\"><a href=\"#Warmup-2\" class=\"headerlink\" title=\"Warmup-2\"></a>Warmup-2</h2><h3 id=\"Warmup-2-gt-string-times\"><a href=\"#Warmup-2-gt-string-times\" class=\"headerlink\" title=\"Warmup-2 &gt; string_times\"></a>Warmup-2 &gt; string_times</h3><p>Given a string and a non-negative int n, return a larger string that is n copies of the original string.  (给一个字符串和非负整数，返回整数倍的字符串）<br>string_times(‘Hi’, 2) → ‘HiHi’<br>string_times(‘Hi’, 3) → ‘HiHiHi’<br>string_times(‘Hi’, 1) → ‘Hi’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_times</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>*n</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_times</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  result = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):  <span class=\"comment\"># range(n) is [0, 1, 2, .... n-1]</span></span><br><span class=\"line\">    result = result + <span class=\"built_in\">str</span>  <span class=\"comment\"># could use += here</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-front-times\"><a href=\"#Warmup-2-gt-front-times\" class=\"headerlink\" title=\"Warmup-2 &gt; front_times\"></a>Warmup-2 &gt; front_times</h3><p>Given a string and a non-negative int n, we’ll say that the front of the string is the first 3 chars, or whatever is there if the string is less than length 3. Return n copies of the front;（返回字符串的前3个字符的N个副本，小于3则返回3个）<br>front_times(‘Chocolate’, 2) → ‘ChoCho’<br>front_times(‘Chocolate’, 3) → ‘ChoChoCho’<br>front_times(‘Abc’, 3) → ‘AbcAbcAbc’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front_times</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;<span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>*n</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:<span class=\"number\">3</span>]*n</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">front_times</span>(<span class=\"params\"><span class=\"built_in\">str</span>, n</span>):</span></span><br><span class=\"line\">  front_len = <span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> front_len &gt; <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>):</span><br><span class=\"line\">    front_len = <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">  front = <span class=\"built_in\">str</span>[:front_len]</span><br><span class=\"line\">  </span><br><span class=\"line\">  result = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    result = result + front</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-string-bits\"><a href=\"#Warmup-2-gt-string-bits\" class=\"headerlink\" title=\"Warmup-2 &gt; string_bits\"></a>Warmup-2 &gt; string_bits</h3><p>Given a string, return a new string made of every other char starting with the first, so “Hello” yields “Hlo”.<br>string_bits(‘Hello’) → ‘Hlo’<br>string_bits(‘Hi’) → ‘H’<br>string_bits(‘Heeololeo’) → ‘Hello’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_bits</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  result=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;=<span class=\"number\">1</span>: <span class=\"comment\">#这两句多于了，有i%2==0足够表达</span></span><br><span class=\"line\">    result=<span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)):</span><br><span class=\"line\">      <span class=\"keyword\">if</span> i%<span class=\"number\">2</span>==<span class=\"number\">0</span>:</span><br><span class=\"line\">        result=result+<span class=\"built_in\">str</span>[i]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_bits</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  result = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># Many ways to do this. This uses the standard loop of i on every char,</span></span><br><span class=\"line\">  <span class=\"comment\"># and inside the loop skips the odd index values.</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">      result = result + <span class=\"built_in\">str</span>[i]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-string-splosion\"><a href=\"#Warmup-2-gt-string-splosion\" class=\"headerlink\" title=\"Warmup-2 &gt; string_splosion\"></a>Warmup-2 &gt; string_splosion</h3><p>Given a non-empty string like “Code” return a string like “CCoCodCode”.<br>string_splosion(‘Code’) → ‘CCoCodCode’<br>string_splosion(‘abc’) → ‘aababc’<br>string_splosion(‘ab’) → ‘aab’  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_splosion</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  result=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i==<span class=\"number\">0</span>:\t\t\t<span class=\"comment\">#这三句多余了，有str[:i+1]就足以包含，参考官方代码</span></span><br><span class=\"line\">      result=result+<span class=\"built_in\">str</span>[i]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      result=result+<span class=\"built_in\">str</span>[:i+<span class=\"number\">1</span>]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_splosion</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  result = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># On each iteration, add the substring of the chars 0..i</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)):</span><br><span class=\"line\">    result = result + <span class=\"built_in\">str</span>[:i+<span class=\"number\">1</span>]</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-last2\"><a href=\"#Warmup-2-gt-last2\" class=\"headerlink\" title=\"Warmup-2 &gt; last2\"></a>Warmup-2 &gt; last2</h3><p>Given a string, return the count of the number of times that a substring length 2 appears in the string and also as the last 2 chars of the string, so “hixxxhi” yields 1 (we won’t count the end substring).  (返回字符串最后两个字符出现的次数，不计最后出现这一次）<br>last2(‘hixxhi’) → 1<br>last2(‘xaxxaxaxx’) → 1<br>last2(‘axxxaaxx’) → 2  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def last2(str):</span><br><span class=\"line\">  count&#x3D;0</span><br><span class=\"line\">  str_len&#x3D;len(str)</span><br><span class=\"line\">  last&#x3D;str[str_len-2:str_len]</span><br><span class=\"line\">  for i in range(str_len):</span><br><span class=\"line\">    if str[i:i+2]&#x3D;&#x3D;last and i&lt;str_len-2:</span><br><span class=\"line\">      count+&#x3D;1</span><br><span class=\"line\"></span><br><span class=\"line\">  return count</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">last2</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># Screen out too-short string case.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># last 2 chars, can be written as str[-2:]</span></span><br><span class=\"line\">  last2 = <span class=\"built_in\">str</span>[<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">2</span>:]</span><br><span class=\"line\">  count = <span class=\"number\">0</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Check each substring length 2 starting at i</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">2</span>):</span><br><span class=\"line\">    sub = <span class=\"built_in\">str</span>[i:i+<span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> sub == last2:</span><br><span class=\"line\">      count = count + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-array-count9\"><a href=\"#Warmup-2-gt-array-count9\" class=\"headerlink\" title=\"Warmup-2 &gt; array_count9\"></a>Warmup-2 &gt; array_count9</h3><p>Given an array of ints, return the number of 9’s in the array.（返回整数数组中9出现的次数）<br>array_count9([1, 2, 9]) → 1<br>array_count9([1, 9, 9]) → 2<br>array_count9([1, 9, 9, 3, 9]) → 3</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_count9</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  count=<span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> nums:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> each==<span class=\"number\">9</span>:</span><br><span class=\"line\">      count+=<span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>\n<p>官方代码一致，唯变量不同：</p>\n<h3 id=\"Warmup-2-gt-array-front9\"><a href=\"#Warmup-2-gt-array-front9\" class=\"headerlink\" title=\"Warmup-2 &gt; array_front9\"></a>Warmup-2 &gt; array_front9</h3><p>Given an array of ints, return True if one of the first 4 elements in the array is a 9. The array length may be less than 4.  (返回整数数组中前4位数中出现9的布尔值）<br>array_front9([1, 2, 9, 3, 4]) → True<br>array_front9([1, 2, 3, 4, 9]) → False<br>array_front9([1, 2, 3, 4, 5]) → False  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_front9</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (<span class=\"number\">9</span> <span class=\"keyword\">in</span> nums[:<span class=\"number\">4</span>])</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array_front9</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># First figure the end for the loop</span></span><br><span class=\"line\">  end = <span class=\"built_in\">len</span>(nums)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> end &gt; <span class=\"number\">4</span>:</span><br><span class=\"line\">    end = <span class=\"number\">4</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(end):  <span class=\"comment\"># loop over index [0, 1, 2, 3]</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nums[i] == <span class=\"number\">9</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-array123\"><a href=\"#Warmup-2-gt-array123\" class=\"headerlink\" title=\"Warmup-2 &gt; array123\"></a>Warmup-2 &gt; array123</h3><p>Given an array of ints, return True if the sequence of numbers 1, 2, 3 appears in the array somewhere.<br>array123([1, 1, 2, 3, 1]) → True<br>array123([1, 1, 2, 4, 1]) → False<br>array123([1, 1, 2, 1, 2, 3]) → True  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array123</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(nums)==<span class=\"number\">0</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(nums)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i+<span class=\"number\">2</span>&lt;<span class=\"built_in\">len</span>(nums):</span><br><span class=\"line\">      <span class=\"keyword\">if</span> nums[i]==<span class=\"number\">1</span> <span class=\"keyword\">and</span> nums[i+<span class=\"number\">1</span>]==<span class=\"number\">2</span> <span class=\"keyword\">and</span> nums[i+<span class=\"number\">2</span>]==<span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">array123</span>(<span class=\"params\">nums</span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># Note: iterate with length-2, so can use i+1 and i+2 in the loop</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(nums)-<span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> nums[i]==<span class=\"number\">1</span> <span class=\"keyword\">and</span> nums[i+<span class=\"number\">1</span>]==<span class=\"number\">2</span> <span class=\"keyword\">and</span> nums[i+<span class=\"number\">2</span>]==<span class=\"number\">3</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Warmup-2-gt-string-match\"><a href=\"#Warmup-2-gt-string-match\" class=\"headerlink\" title=\"Warmup-2 &gt; string_match\"></a>Warmup-2 &gt; string_match</h3><p>Given 2 strings, a and b, return the number of the positions where they contain the same length 2 substring. So “xxcaazz” and “xxbaaz” yields 3, since the “xx”, “aa”, and “az” substrings appear in the same place in both strings.  （返回两个字符串中在相同位置出现相同两个字符的次数）<br>string_match(‘xxcaazz’, ‘xxbaaz’) → 3<br>string_match(‘abc’, ‘abc’) → 2<br>string_match(‘abc’, ‘axc’) → 0  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_match</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(a)&lt;=<span class=\"built_in\">len</span>(b):\t<span class=\"comment\">#以最短的字串长度为主</span></span><br><span class=\"line\">    len_s=<span class=\"built_in\">len</span>(a)</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    len_s=<span class=\"built_in\">len</span>(b)</span><br><span class=\"line\">  count=<span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(len_s-<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a[i]+a[i+<span class=\"number\">1</span>] == b[i]+b[i+<span class=\"number\">1</span>]:</span><br><span class=\"line\">      count+=<span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>\n<p>官方代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">string_match</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"comment\"># Figure which string is shorter.</span></span><br><span class=\"line\">  shorter = <span class=\"built_in\">min</span>(<span class=\"built_in\">len</span>(a), <span class=\"built_in\">len</span>(b))</span><br><span class=\"line\">  count = <span class=\"number\">0</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Loop i over every substring starting spot.</span></span><br><span class=\"line\">  <span class=\"comment\"># Use length-1 here, so can use char str[i+1] in the loop</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(shorter-<span class=\"number\">1</span>):</span><br><span class=\"line\">    a_sub = a[i:i+<span class=\"number\">2</span>]</span><br><span class=\"line\">    b_sub = b[i:i+<span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a_sub == b_sub:</span><br><span class=\"line\">      count = count + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"python练习园地（二）——string篇","date":"2020-07-02T02:03:25.000Z","author":"coolxy","_content":"\n## python练习题园地（二）——String篇\n\n## [String-1](https://codingbat.com/python/String-1) > hello_name\n\nGiven a string name, e.g. \"Bob\", return a greeting of the form \"Hello Bob!\". hello_name('Bob') → 'Hello Bob!' hello_name('Alice') → 'Hello Alice!' hello_name('X') → 'Hello X!'\n\nCode:\n\n```python\ndef hello_name(name):\n  return 'Hello '+name+'!'\n```\n\n## [String-1](https://codingbat.com/python/String-1) > make_abba\n\nGiven two strings, a and b, return the result of putting them together in the order abba, e.g. \"Hi\" and \"Bye\" returns \"HiByeByeHi\". \n\nmake_abba('Hi', 'Bye') → 'HiByeByeHi' \n\nmake_abba('Yo', 'Alice') → 'YoAliceAliceYo' \n\nmake_abba('What', 'Up') → 'WhatUpUpWhat'\n\n```python\ndef make_abba(a, b):\n  return a+b*2+a\n```\n\n## [String-1](https://codingbat.com/python/String-1) > make_tags\nThe web is built with HTML strings like \"<i>Yay</i>\" which draws Yay as italic text. In this example, the \"i\" tag makes <i> and </i> which surround the word \"Yay\". Given tag and word strings, create the HTML string with tags around the word, e.g. \"<i>Yay</i>\". \n\nmake_tags('i', 'Yay') → '<i>Yay</i>' \n\nmake_tags('i', 'Hello') → '<i>Hello</i>' \n\nmake_tags('cite', 'Yay') → '<cite>Yay</cite>'\n\nCode\n\n```python\ndef make_tags(tag, word):\n  return ('<%s>'+word+'</%s>')%(tag,tag)\n```\n\n## [String-1](https://codingbat.com/python/String-1) > make_out_word\nGiven an \"out\" string length 4, such as \"<<>>\", and a word, return a new string where the word is in the middle of the out string, e.g. \"<<word>>\". \n\nmake_out_word('<<>>', 'Yay') → '<<Yay>>' \n\nmake_out_word('<<>>', 'WooHoo') → '<<WooHoo>>' \n\nmake_out_word('[[]]', 'word') → '[[word]]'\n\nCode\n\n```python\ndef make_out_word(out, word):\n  return out[:2]+word+out[2:]\n```\n\n## [String-1](https://codingbat.com/python/String-1) > extra_end\nGiven a string, return a new string made of 3 copies of the last 2 chars of the original string. The string length will be at least 2. \n\nextra_end('Hello') → 'lololo' \n\nextra_end('ab') → 'ababab' \n\nextra_end('Hi') → 'HiHiHi'\n\nCode:\n\n```python\ndef extra_end(str):\n  str_len=len(str)\n  return str[str_len-2:]*3\n```\n\n## [String-1](https://codingbat.com/python/String-1) > first_two\n\nGiven a string, return the string made of its first two chars, so the String \"Hello\" yields \"He\". If the string is shorter than length 2, return whatever there is, so \"X\" yields \"X\", and the empty string \"\" yields the empty string \"\". \n\nfirst_two('Hello') → 'He' \n\nfirst_two('abcdefg') → 'ab' \n\nfirst_two('ab') → 'ab'\n\nCode:\n\n```python\ndef first_two(str):\n  if len(str)<=2:\n    return str\n  else:\n    return str[:2]\n```\n\n## [String-1](https://codingbat.com/python/String-1) > first_half\nGiven a string of even length, return the first half. So the string \"WooHoo\" yields \"Woo\". \n\nfirst_half('WooHoo') → 'Woo' \n\nfirst_half('HelloThere') → 'Hello' \n\nfirst_half('abcdef') → 'abc'\n\nCode:\n\n```python\ndef first_half(str):\n  return str[:int(len(str)/2)]\n```\n\n## [String-1](https://codingbat.com/python/String-1) > without_end\nGiven a string, return a version without the first and last char, so \"Hello\" yields \"ell\". The string length will be at least 2. \n\nwithout_end('Hello') → 'ell' \n\nwithout_end('java') → 'av' \n\nwithout_end('coding') → 'odin'\n\nCode:\n\n```python\ndef without_end(str):\n  return str[1:len(str)-1]\n```\n\n","source":"_posts/2020-07-01-codingbat-string.md","raw":"---\nlayout: post\ntitle:  \"python练习园地（二）——string篇\"\ndate:   2020-07-02 10:03:25\nauthor: coolxy\ncategories: \n  - 教程技巧\n  - python\ntags: python\n---\n\n## python练习题园地（二）——String篇\n\n## [String-1](https://codingbat.com/python/String-1) > hello_name\n\nGiven a string name, e.g. \"Bob\", return a greeting of the form \"Hello Bob!\". hello_name('Bob') → 'Hello Bob!' hello_name('Alice') → 'Hello Alice!' hello_name('X') → 'Hello X!'\n\nCode:\n\n```python\ndef hello_name(name):\n  return 'Hello '+name+'!'\n```\n\n## [String-1](https://codingbat.com/python/String-1) > make_abba\n\nGiven two strings, a and b, return the result of putting them together in the order abba, e.g. \"Hi\" and \"Bye\" returns \"HiByeByeHi\". \n\nmake_abba('Hi', 'Bye') → 'HiByeByeHi' \n\nmake_abba('Yo', 'Alice') → 'YoAliceAliceYo' \n\nmake_abba('What', 'Up') → 'WhatUpUpWhat'\n\n```python\ndef make_abba(a, b):\n  return a+b*2+a\n```\n\n## [String-1](https://codingbat.com/python/String-1) > make_tags\nThe web is built with HTML strings like \"<i>Yay</i>\" which draws Yay as italic text. In this example, the \"i\" tag makes <i> and </i> which surround the word \"Yay\". Given tag and word strings, create the HTML string with tags around the word, e.g. \"<i>Yay</i>\". \n\nmake_tags('i', 'Yay') → '<i>Yay</i>' \n\nmake_tags('i', 'Hello') → '<i>Hello</i>' \n\nmake_tags('cite', 'Yay') → '<cite>Yay</cite>'\n\nCode\n\n```python\ndef make_tags(tag, word):\n  return ('<%s>'+word+'</%s>')%(tag,tag)\n```\n\n## [String-1](https://codingbat.com/python/String-1) > make_out_word\nGiven an \"out\" string length 4, such as \"<<>>\", and a word, return a new string where the word is in the middle of the out string, e.g. \"<<word>>\". \n\nmake_out_word('<<>>', 'Yay') → '<<Yay>>' \n\nmake_out_word('<<>>', 'WooHoo') → '<<WooHoo>>' \n\nmake_out_word('[[]]', 'word') → '[[word]]'\n\nCode\n\n```python\ndef make_out_word(out, word):\n  return out[:2]+word+out[2:]\n```\n\n## [String-1](https://codingbat.com/python/String-1) > extra_end\nGiven a string, return a new string made of 3 copies of the last 2 chars of the original string. The string length will be at least 2. \n\nextra_end('Hello') → 'lololo' \n\nextra_end('ab') → 'ababab' \n\nextra_end('Hi') → 'HiHiHi'\n\nCode:\n\n```python\ndef extra_end(str):\n  str_len=len(str)\n  return str[str_len-2:]*3\n```\n\n## [String-1](https://codingbat.com/python/String-1) > first_two\n\nGiven a string, return the string made of its first two chars, so the String \"Hello\" yields \"He\". If the string is shorter than length 2, return whatever there is, so \"X\" yields \"X\", and the empty string \"\" yields the empty string \"\". \n\nfirst_two('Hello') → 'He' \n\nfirst_two('abcdefg') → 'ab' \n\nfirst_two('ab') → 'ab'\n\nCode:\n\n```python\ndef first_two(str):\n  if len(str)<=2:\n    return str\n  else:\n    return str[:2]\n```\n\n## [String-1](https://codingbat.com/python/String-1) > first_half\nGiven a string of even length, return the first half. So the string \"WooHoo\" yields \"Woo\". \n\nfirst_half('WooHoo') → 'Woo' \n\nfirst_half('HelloThere') → 'Hello' \n\nfirst_half('abcdef') → 'abc'\n\nCode:\n\n```python\ndef first_half(str):\n  return str[:int(len(str)/2)]\n```\n\n## [String-1](https://codingbat.com/python/String-1) > without_end\nGiven a string, return a version without the first and last char, so \"Hello\" yields \"ell\". The string length will be at least 2. \n\nwithout_end('Hello') → 'ell' \n\nwithout_end('java') → 'av' \n\nwithout_end('coding') → 'odin'\n\nCode:\n\n```python\ndef without_end(str):\n  return str[1:len(str)-1]\n```\n\n","slug":"codingbat-string","published":1,"updated":"2021-03-04T17:03:56.671Z","_id":"cklt3r3de00098cw43ko2fs50","comments":1,"photos":[],"link":"","content":"<h2 id=\"python练习题园地（二）——String篇\"><a href=\"#python练习题园地（二）——String篇\" class=\"headerlink\" title=\"python练习题园地（二）——String篇\"></a>python练习题园地（二）——String篇</h2><h2 id=\"String-1-gt-hello-name\"><a href=\"#String-1-gt-hello-name\" class=\"headerlink\" title=\"String-1 &gt; hello_name\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; hello_name</h2><p>Given a string name, e.g. “Bob”, return a greeting of the form “Hello Bob!”. hello_name(‘Bob’) → ‘Hello Bob!’ hello_name(‘Alice’) → ‘Hello Alice!’ hello_name(‘X’) → ‘Hello X!’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello_name</span>(<span class=\"params\">name</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello &#x27;</span>+name+<span class=\"string\">&#x27;!&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-make-abba\"><a href=\"#String-1-gt-make-abba\" class=\"headerlink\" title=\"String-1 &gt; make_abba\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; make_abba</h2><p>Given two strings, a and b, return the result of putting them together in the order abba, e.g. “Hi” and “Bye” returns “HiByeByeHi”. </p>\n<p>make_abba(‘Hi’, ‘Bye’) → ‘HiByeByeHi’ </p>\n<p>make_abba(‘Yo’, ‘Alice’) → ‘YoAliceAliceYo’ </p>\n<p>make_abba(‘What’, ‘Up’) → ‘WhatUpUpWhat’</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_abba</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a+b*<span class=\"number\">2</span>+a</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-make-tags\"><a href=\"#String-1-gt-make-tags\" class=\"headerlink\" title=\"String-1 &gt; make_tags\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; make_tags</h2><p>The web is built with HTML strings like “<i>Yay</i>“ which draws Yay as italic text. In this example, the “i” tag makes <i> and </i> which surround the word “Yay”. Given tag and word strings, create the HTML string with tags around the word, e.g. “<i>Yay</i>“. </p>\n<p>make_tags(‘i’, ‘Yay’) → ‘<i>Yay</i>‘ </p>\n<p>make_tags(‘i’, ‘Hello’) → ‘<i>Hello</i>‘ </p>\n<p>make_tags(‘cite’, ‘Yay’) → ‘<cite>Yay</cite>‘</p>\n<p>Code</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_tags</span>(<span class=\"params\">tag, word</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (<span class=\"string\">&#x27;&lt;%s&gt;&#x27;</span>+word+<span class=\"string\">&#x27;&lt;/%s&gt;&#x27;</span>)%(tag,tag)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-make-out-word\"><a href=\"#String-1-gt-make-out-word\" class=\"headerlink\" title=\"String-1 &gt; make_out_word\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; make_out_word</h2><p>Given an “out” string length 4, such as “&lt;&lt;&gt;&gt;”, and a word, return a new string where the word is in the middle of the out string, e.g. “&lt;<word>&gt;”. </p>\n<p>make_out_word(‘&lt;&lt;&gt;&gt;’, ‘Yay’) → ‘&lt;<Yay>&gt;’ </p>\n<p>make_out_word(‘&lt;&lt;&gt;&gt;’, ‘WooHoo’) → ‘&lt;<WooHoo>&gt;’ </p>\n<p>make_out_word(‘[[]]’, ‘word’) → ‘[[word]]’</p>\n<p>Code</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_out_word</span>(<span class=\"params\">out, word</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> out[:<span class=\"number\">2</span>]+word+out[<span class=\"number\">2</span>:]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-extra-end\"><a href=\"#String-1-gt-extra-end\" class=\"headerlink\" title=\"String-1 &gt; extra_end\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; extra_end</h2><p>Given a string, return a new string made of 3 copies of the last 2 chars of the original string. The string length will be at least 2. </p>\n<p>extra_end(‘Hello’) → ‘lololo’ </p>\n<p>extra_end(‘ab’) → ‘ababab’ </p>\n<p>extra_end(‘Hi’) → ‘HiHiHi’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">extra_end</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  str_len=<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[str_len-<span class=\"number\">2</span>:]*<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-first-two\"><a href=\"#String-1-gt-first-two\" class=\"headerlink\" title=\"String-1 &gt; first_two\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; first_two</h2><p>Given a string, return the string made of its first two chars, so the String “Hello” yields “He”. If the string is shorter than length 2, return whatever there is, so “X” yields “X”, and the empty string “” yields the empty string “”. </p>\n<p>first_two(‘Hello’) → ‘He’ </p>\n<p>first_two(‘abcdefg’) → ‘ab’ </p>\n<p>first_two(‘ab’) → ‘ab’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">first_two</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;=<span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-first-half\"><a href=\"#String-1-gt-first-half\" class=\"headerlink\" title=\"String-1 &gt; first_half\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; first_half</h2><p>Given a string of even length, return the first half. So the string “WooHoo” yields “Woo”. </p>\n<p>first_half(‘WooHoo’) → ‘Woo’ </p>\n<p>first_half(‘HelloThere’) → ‘Hello’ </p>\n<p>first_half(‘abcdef’) → ‘abc’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">first_half</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:<span class=\"built_in\">int</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)/<span class=\"number\">2</span>)]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-without-end\"><a href=\"#String-1-gt-without-end\" class=\"headerlink\" title=\"String-1 &gt; without_end\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; without_end</h2><p>Given a string, return a version without the first and last char, so “Hello” yields “ell”. The string length will be at least 2. </p>\n<p>without_end(‘Hello’) → ‘ell’ </p>\n<p>without_end(‘java’) → ‘av’ </p>\n<p>without_end(‘coding’) → ‘odin’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">without_end</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[<span class=\"number\">1</span>:<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"python练习题园地（二）——String篇\"><a href=\"#python练习题园地（二）——String篇\" class=\"headerlink\" title=\"python练习题园地（二）——String篇\"></a>python练习题园地（二）——String篇</h2><h2 id=\"String-1-gt-hello-name\"><a href=\"#String-1-gt-hello-name\" class=\"headerlink\" title=\"String-1 &gt; hello_name\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; hello_name</h2><p>Given a string name, e.g. “Bob”, return a greeting of the form “Hello Bob!”. hello_name(‘Bob’) → ‘Hello Bob!’ hello_name(‘Alice’) → ‘Hello Alice!’ hello_name(‘X’) → ‘Hello X!’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello_name</span>(<span class=\"params\">name</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello &#x27;</span>+name+<span class=\"string\">&#x27;!&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-make-abba\"><a href=\"#String-1-gt-make-abba\" class=\"headerlink\" title=\"String-1 &gt; make_abba\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; make_abba</h2><p>Given two strings, a and b, return the result of putting them together in the order abba, e.g. “Hi” and “Bye” returns “HiByeByeHi”. </p>\n<p>make_abba(‘Hi’, ‘Bye’) → ‘HiByeByeHi’ </p>\n<p>make_abba(‘Yo’, ‘Alice’) → ‘YoAliceAliceYo’ </p>\n<p>make_abba(‘What’, ‘Up’) → ‘WhatUpUpWhat’</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_abba</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> a+b*<span class=\"number\">2</span>+a</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-make-tags\"><a href=\"#String-1-gt-make-tags\" class=\"headerlink\" title=\"String-1 &gt; make_tags\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; make_tags</h2><p>The web is built with HTML strings like “<i>Yay</i>“ which draws Yay as italic text. In this example, the “i” tag makes <i> and </i> which surround the word “Yay”. Given tag and word strings, create the HTML string with tags around the word, e.g. “<i>Yay</i>“. </p>\n<p>make_tags(‘i’, ‘Yay’) → ‘<i>Yay</i>‘ </p>\n<p>make_tags(‘i’, ‘Hello’) → ‘<i>Hello</i>‘ </p>\n<p>make_tags(‘cite’, ‘Yay’) → ‘<cite>Yay</cite>‘</p>\n<p>Code</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_tags</span>(<span class=\"params\">tag, word</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (<span class=\"string\">&#x27;&lt;%s&gt;&#x27;</span>+word+<span class=\"string\">&#x27;&lt;/%s&gt;&#x27;</span>)%(tag,tag)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-make-out-word\"><a href=\"#String-1-gt-make-out-word\" class=\"headerlink\" title=\"String-1 &gt; make_out_word\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; make_out_word</h2><p>Given an “out” string length 4, such as “&lt;&lt;&gt;&gt;”, and a word, return a new string where the word is in the middle of the out string, e.g. “&lt;<word>&gt;”. </p>\n<p>make_out_word(‘&lt;&lt;&gt;&gt;’, ‘Yay’) → ‘&lt;<Yay>&gt;’ </p>\n<p>make_out_word(‘&lt;&lt;&gt;&gt;’, ‘WooHoo’) → ‘&lt;<WooHoo>&gt;’ </p>\n<p>make_out_word(‘[[]]’, ‘word’) → ‘[[word]]’</p>\n<p>Code</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_out_word</span>(<span class=\"params\">out, word</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> out[:<span class=\"number\">2</span>]+word+out[<span class=\"number\">2</span>:]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-extra-end\"><a href=\"#String-1-gt-extra-end\" class=\"headerlink\" title=\"String-1 &gt; extra_end\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; extra_end</h2><p>Given a string, return a new string made of 3 copies of the last 2 chars of the original string. The string length will be at least 2. </p>\n<p>extra_end(‘Hello’) → ‘lololo’ </p>\n<p>extra_end(‘ab’) → ‘ababab’ </p>\n<p>extra_end(‘Hi’) → ‘HiHiHi’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">extra_end</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  str_len=<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[str_len-<span class=\"number\">2</span>:]*<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-first-two\"><a href=\"#String-1-gt-first-two\" class=\"headerlink\" title=\"String-1 &gt; first_two\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; first_two</h2><p>Given a string, return the string made of its first two chars, so the String “Hello” yields “He”. If the string is shorter than length 2, return whatever there is, so “X” yields “X”, and the empty string “” yields the empty string “”. </p>\n<p>first_two(‘Hello’) → ‘He’ </p>\n<p>first_two(‘abcdefg’) → ‘ab’ </p>\n<p>first_two(‘ab’) → ‘ab’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">first_two</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)&lt;=<span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-first-half\"><a href=\"#String-1-gt-first-half\" class=\"headerlink\" title=\"String-1 &gt; first_half\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; first_half</h2><p>Given a string of even length, return the first half. So the string “WooHoo” yields “Woo”. </p>\n<p>first_half(‘WooHoo’) → ‘Woo’ </p>\n<p>first_half(‘HelloThere’) → ‘Hello’ </p>\n<p>first_half(‘abcdef’) → ‘abc’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">first_half</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[:<span class=\"built_in\">int</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)/<span class=\"number\">2</span>)]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"String-1-gt-without-end\"><a href=\"#String-1-gt-without-end\" class=\"headerlink\" title=\"String-1 &gt; without_end\"></a><a href=\"https://codingbat.com/python/String-1\">String-1</a> &gt; without_end</h2><p>Given a string, return a version without the first and last char, so “Hello” yields “ell”. The string length will be at least 2. </p>\n<p>without_end(‘Hello’) → ‘ell’ </p>\n<p>without_end(‘java’) → ‘av’ </p>\n<p>without_end(‘coding’) → ‘odin’</p>\n<p>Code:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">without_end</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>[<span class=\"number\">1</span>:<span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)-<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"致2020年下半年","date":"2020-07-01T00:08:28.000Z","author":"coolxy","_content":"\n​\t\t早上，一如往常，还是一贯的早起，一贯的送老婆孩子到学校，沿路听着洞见的文章《致2020下半年：生命中所有的失去，都会以另一种方式归来》，感触良多。听完文章，也刚好将老婆孩子分别送到他们的学校，听到久违的《阳光总在风雨后》歌声时，禁不住就泪流满面了，止都止不住，一个人在车上哭得像个孩子。\n\n​\t\t上半年疫满神州，在家闭关中的我们只能为自己的生活和别人的命运而唏嘘，为孩子的胡闹而哀叹，为夫妻双方不时的小生气而难过，为父母渐老自己无能为力而伤感，为领导和上司的误会而喷火，为工作繁忙而奔波，却有许许多多的人没抗过生命的无常，就那么的走了。华夏解封之时，多少人为生活而努力上进，用不休的努力为生存而活。\n\n​\t\t一直以来，我都这样认为，人只不过是历史长河中的一个过客，人生也只是历史的一瞬间，连地球都只是苍茫宇宙的一粒尘埃，如何过好这一生才是我们应该考虑的。可是我却在生活中迷茫了，偶尔还会和老婆闹闹、生生气，这是怎么了？\n\n​\t\t生命无常，走的走，来的来。想起了老父亲多年来拉扯我们兄妹三人不停不休的过往，孩童时那顽皮的经历、看到那貌似离去的她的背影而嘶心裂肺的呐喊和伤心奔走追寻的脚步，看到老父亲花白的头发和如沟壑一般的皱纹时的心痛。时时感叹生命的无常，老人们却还要放下嫌隙为我们带孩子，还要做好饭菜等待我们归家即可享用。我为何还要时时发泄自己的情绪呢，虽然说家庭是治疗不良情绪的港湾，但也不能将工作中的情绪带入家庭。不将工作 带到家中，这一点我渐渐的做到了，但情绪却无法控制，这一点得好好反省。\n\n​\t\t2020年半年已经过去，我们的人生也渐入半途，还有什么是值得我们在意和追求的呢？下半生要怎么过？为谁而过呢？生命无常，我们要用平静的日常来抗争生命的无常，这才是人生。\n\n​\t\t在此说一声，感谢命运，感谢父母，感谢老婆，感谢我生命中的所有喜欢和不喜欢的人。因为无论有多苦，有多压抑，明天早晨太阳升起的时候，我将如约而至。\n\n​\t\t明天的太阳依旧会升起，期待中秋天的枫叶也依然会在前方等我们，窗外乌云下的小鸟也还不屈的飞向远方。\n\n​\t\t我们失去的东西，都会以另一种方式归来，只要我们用心去感受。\n\n\n        感谢我生命中的所有人！\n","source":"_posts/2020-07-01-to-latter-half-year.md","raw":"---\nlayout: post\ntitle:  \"致2020年下半年\"\ndate:   2020-07-01 08:08:28\nauthor: coolxy\ncategories: 生活随笔\ntags: 新冠肺炎\n---\n\n​\t\t早上，一如往常，还是一贯的早起，一贯的送老婆孩子到学校，沿路听着洞见的文章《致2020下半年：生命中所有的失去，都会以另一种方式归来》，感触良多。听完文章，也刚好将老婆孩子分别送到他们的学校，听到久违的《阳光总在风雨后》歌声时，禁不住就泪流满面了，止都止不住，一个人在车上哭得像个孩子。\n\n​\t\t上半年疫满神州，在家闭关中的我们只能为自己的生活和别人的命运而唏嘘，为孩子的胡闹而哀叹，为夫妻双方不时的小生气而难过，为父母渐老自己无能为力而伤感，为领导和上司的误会而喷火，为工作繁忙而奔波，却有许许多多的人没抗过生命的无常，就那么的走了。华夏解封之时，多少人为生活而努力上进，用不休的努力为生存而活。\n\n​\t\t一直以来，我都这样认为，人只不过是历史长河中的一个过客，人生也只是历史的一瞬间，连地球都只是苍茫宇宙的一粒尘埃，如何过好这一生才是我们应该考虑的。可是我却在生活中迷茫了，偶尔还会和老婆闹闹、生生气，这是怎么了？\n\n​\t\t生命无常，走的走，来的来。想起了老父亲多年来拉扯我们兄妹三人不停不休的过往，孩童时那顽皮的经历、看到那貌似离去的她的背影而嘶心裂肺的呐喊和伤心奔走追寻的脚步，看到老父亲花白的头发和如沟壑一般的皱纹时的心痛。时时感叹生命的无常，老人们却还要放下嫌隙为我们带孩子，还要做好饭菜等待我们归家即可享用。我为何还要时时发泄自己的情绪呢，虽然说家庭是治疗不良情绪的港湾，但也不能将工作中的情绪带入家庭。不将工作 带到家中，这一点我渐渐的做到了，但情绪却无法控制，这一点得好好反省。\n\n​\t\t2020年半年已经过去，我们的人生也渐入半途，还有什么是值得我们在意和追求的呢？下半生要怎么过？为谁而过呢？生命无常，我们要用平静的日常来抗争生命的无常，这才是人生。\n\n​\t\t在此说一声，感谢命运，感谢父母，感谢老婆，感谢我生命中的所有喜欢和不喜欢的人。因为无论有多苦，有多压抑，明天早晨太阳升起的时候，我将如约而至。\n\n​\t\t明天的太阳依旧会升起，期待中秋天的枫叶也依然会在前方等我们，窗外乌云下的小鸟也还不屈的飞向远方。\n\n​\t\t我们失去的东西，都会以另一种方式归来，只要我们用心去感受。\n\n\n        感谢我生命中的所有人！\n","slug":"to-latter-half-year","published":1,"updated":"2021-03-04T17:03:45.552Z","_id":"cklt3r3dg000e8cw49y8l9x5n","comments":1,"photos":[],"link":"","content":"<p>​        早上，一如往常，还是一贯的早起，一贯的送老婆孩子到学校，沿路听着洞见的文章《致2020下半年：生命中所有的失去，都会以另一种方式归来》，感触良多。听完文章，也刚好将老婆孩子分别送到他们的学校，听到久违的《阳光总在风雨后》歌声时，禁不住就泪流满面了，止都止不住，一个人在车上哭得像个孩子。</p>\n<p>​        上半年疫满神州，在家闭关中的我们只能为自己的生活和别人的命运而唏嘘，为孩子的胡闹而哀叹，为夫妻双方不时的小生气而难过，为父母渐老自己无能为力而伤感，为领导和上司的误会而喷火，为工作繁忙而奔波，却有许许多多的人没抗过生命的无常，就那么的走了。华夏解封之时，多少人为生活而努力上进，用不休的努力为生存而活。</p>\n<p>​        一直以来，我都这样认为，人只不过是历史长河中的一个过客，人生也只是历史的一瞬间，连地球都只是苍茫宇宙的一粒尘埃，如何过好这一生才是我们应该考虑的。可是我却在生活中迷茫了，偶尔还会和老婆闹闹、生生气，这是怎么了？</p>\n<p>​        生命无常，走的走，来的来。想起了老父亲多年来拉扯我们兄妹三人不停不休的过往，孩童时那顽皮的经历、看到那貌似离去的她的背影而嘶心裂肺的呐喊和伤心奔走追寻的脚步，看到老父亲花白的头发和如沟壑一般的皱纹时的心痛。时时感叹生命的无常，老人们却还要放下嫌隙为我们带孩子，还要做好饭菜等待我们归家即可享用。我为何还要时时发泄自己的情绪呢，虽然说家庭是治疗不良情绪的港湾，但也不能将工作中的情绪带入家庭。不将工作 带到家中，这一点我渐渐的做到了，但情绪却无法控制，这一点得好好反省。</p>\n<p>​        2020年半年已经过去，我们的人生也渐入半途，还有什么是值得我们在意和追求的呢？下半生要怎么过？为谁而过呢？生命无常，我们要用平静的日常来抗争生命的无常，这才是人生。</p>\n<p>​        在此说一声，感谢命运，感谢父母，感谢老婆，感谢我生命中的所有喜欢和不喜欢的人。因为无论有多苦，有多压抑，明天早晨太阳升起的时候，我将如约而至。</p>\n<p>​        明天的太阳依旧会升起，期待中秋天的枫叶也依然会在前方等我们，窗外乌云下的小鸟也还不屈的飞向远方。</p>\n<p>​        我们失去的东西，都会以另一种方式归来，只要我们用心去感受。</p>\n<pre><code>    感谢我生命中的所有人！\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<p>​        早上，一如往常，还是一贯的早起，一贯的送老婆孩子到学校，沿路听着洞见的文章《致2020下半年：生命中所有的失去，都会以另一种方式归来》，感触良多。听完文章，也刚好将老婆孩子分别送到他们的学校，听到久违的《阳光总在风雨后》歌声时，禁不住就泪流满面了，止都止不住，一个人在车上哭得像个孩子。</p>\n<p>​        上半年疫满神州，在家闭关中的我们只能为自己的生活和别人的命运而唏嘘，为孩子的胡闹而哀叹，为夫妻双方不时的小生气而难过，为父母渐老自己无能为力而伤感，为领导和上司的误会而喷火，为工作繁忙而奔波，却有许许多多的人没抗过生命的无常，就那么的走了。华夏解封之时，多少人为生活而努力上进，用不休的努力为生存而活。</p>\n<p>​        一直以来，我都这样认为，人只不过是历史长河中的一个过客，人生也只是历史的一瞬间，连地球都只是苍茫宇宙的一粒尘埃，如何过好这一生才是我们应该考虑的。可是我却在生活中迷茫了，偶尔还会和老婆闹闹、生生气，这是怎么了？</p>\n<p>​        生命无常，走的走，来的来。想起了老父亲多年来拉扯我们兄妹三人不停不休的过往，孩童时那顽皮的经历、看到那貌似离去的她的背影而嘶心裂肺的呐喊和伤心奔走追寻的脚步，看到老父亲花白的头发和如沟壑一般的皱纹时的心痛。时时感叹生命的无常，老人们却还要放下嫌隙为我们带孩子，还要做好饭菜等待我们归家即可享用。我为何还要时时发泄自己的情绪呢，虽然说家庭是治疗不良情绪的港湾，但也不能将工作中的情绪带入家庭。不将工作 带到家中，这一点我渐渐的做到了，但情绪却无法控制，这一点得好好反省。</p>\n<p>​        2020年半年已经过去，我们的人生也渐入半途，还有什么是值得我们在意和追求的呢？下半生要怎么过？为谁而过呢？生命无常，我们要用平静的日常来抗争生命的无常，这才是人生。</p>\n<p>​        在此说一声，感谢命运，感谢父母，感谢老婆，感谢我生命中的所有喜欢和不喜欢的人。因为无论有多苦，有多压抑，明天早晨太阳升起的时候，我将如约而至。</p>\n<p>​        明天的太阳依旧会升起，期待中秋天的枫叶也依然会在前方等我们，窗外乌云下的小鸟也还不屈的飞向远方。</p>\n<p>​        我们失去的东西，都会以另一种方式归来，只要我们用心去感受。</p>\n<pre><code>    感谢我生命中的所有人！\n</code></pre>\n"},{"layout":"post","title":"python练习园地（三）——Logic篇","date":"2020-07-03T02:03:25.000Z","author":"coolxy","_content":"\n#### 翻译是用百度翻译的，勉强能看明白。\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > cigar_party\n\n\nWhen squirrels get together for a party, they like to have cigars. A squirrel party is successful when the number of cigars is between 40 and 60, inclusive. Unless it is the weekend, in which case there is no upper bound on the number of cigars. Return True if the party with the given values is successful, or False otherwise. \n\n当松鼠聚在一起参加聚会时，他们喜欢抽雪茄。当雪茄数量在40到60支之间时，松鼠派对就成功了。除非是周末，在这种情况下，雪茄数量没有上限。如果具有给定值的参与方成功，则返回True，否则返回False。\n\ncigar_party(30, False) → False \n\ncigar_party(50, False) → True \n\ncigar_party(70, True) → True\n\n### Code:\n\n```python\ndef cigar_party(cigars, is_weekend):\n  if not is_weekend:\n    if cigars>=40 and cigars<=60:\n      return True\n    else:\n      return False\n  elif cigars>=40 :\n    return True\n  else:\n    return False\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > date_fashion\n\nYou and your date are trying to get a table at a restaurant. The parameter \"you\" is the stylishness of your clothes, in the range 0..10, and \"date\" is the stylishness of your date's clothes. The result getting the table is encoded as an int value with 0=no, 1=maybe, 2=yes. If either of you is very stylish, 8 or more, then the result is 2 (yes). With the exception that if either of you has style of 2 or less, then the result is 0 (no). Otherwise the result is 1 (maybe).\n\n#### Eg:\n\ndate_fashion(5, 10) → 2 \n\ndate_fashion(5, 2) → 0 \n\ndate_fashion(5, 5) → 1\n\n你和你的约会对象想在餐馆找张桌子。参数“you”是你衣服的款式，在0到10的范围内，“date”是约会对象衣服的款式。得到表的结果被编码为一个int值，0=no，1=maybe，2=yes。如果你们中的任何一个非常时尚，8或更多，那么结果是2（是）。例外情况是，如果两人的样式为2或更少，则结果为0（否）。否则结果是1（可能）。\n\n### Code:\n\n```python\ndef date_fashion(you, date):\n  if you <=2 or date<=2:\n    return 0\n  elif you>=8 or date >=8:\n    return 2\n  else:\n    return 1\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > squirrel_play\n\nThe squirrels in Palo Alto spend most of the day playing. In particular, they play if the temperature is between 60 and 90 (inclusive). Unless it is summer, then the upper limit is 100 instead of 90. Given an int temperature and a boolean is_summer, return True if the squirrels play and False otherwise. \n\n帕洛阿尔托的松鼠大部分时间都在玩耍。特别是，如果温度在60到90之间（包括60到90），它们就会演奏。除非是夏天，否则上限是100而不是90。给定一个int temperature和一个boolean是_summer，如果松鼠玩游戏，则返回True，否则返回False。\n\nsquirrel_play(70, False) → True \n\nsquirrel_play(95, False) → False \n\nsquirrel_play(95, True) → True\n\n### Code:\n\n```python\ndef squirrel_play(temp, is_summer):\n  if is_summer :\n    if 60<=temp<=100:\n      return True\n    else:\n      return False\n  else:\n    if 60<=temp<=90:\n      return True\n    else:\n      return False\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > caught_speeding\n\nYou are driving a little too fast, and a police officer stops you. Write code to compute the result, encoded as an int value: 0=no ticket, 1=small ticket, 2=big ticket. If speed is 60 or less, the result is 0. If speed is between 61 and 80 inclusive, the result is 1. If speed is 81 or more, the result is 2. Unless it is your birthday -- on that day, your speed can be 5 higher in all cases. \n\n你开得太快了，警察拦住了你。编写代码来计算结果，编码为int值：0=无罚单，1=小票，2=大票。如果速度小于等于60，则结果为0。如果速度在61和80之间（包括61和80），则结果为1。如果速度为81或更高，则结果为2。除非是你的生日——在那一天，你的速度在所有情况下都可以高出5。\n\ncaught_speeding(60, False) → 0\n\ncaught_speeding(65, False) → 1 \n\ncaught_speeding(65, True) → 0\n\n### Code:\n\n```python\ndef caught_speeding(speed, is_birthday):\n  if is_birthday:\n    flag=speed-5\n  else:\n    flag=speed\n    \n  if flag<=60:\n    return 0\n  elif 61<=flag<=80:\n    return 1\n  else:\n    return 2\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > sorta_sum\n\nGiven 2 ints, a and b, return their sum. However, sums in the range 10..19 inclusive, are forbidden, so in that case just return 20.\n\n给定2个整数，a和b，返回它们的和。但是，10到19范围内的和是禁止的，所以在这种情况下只返回20。\n\nsorta_sum(3, 4) → 7\n\nsorta_sum(9, 4) → 20 \n\nsorta_sum(10, 11) → 21\n\n### Code:\n\n```python\ndef sorta_sum(a, b):\n  if 10<=(a+b)<=20:\n    return 20\n  else:\n    return a+b\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > alarm_clock\n\nGiven a day of the week encoded as 0=Sun, 1=Mon, 2=Tue, ...6=Sat, and a boolean indicating if we are on vacation, return a string of the form \"7:00\" indicating when the alarm clock should ring. Weekdays, the alarm should be \"7:00\" and on the weekend it should be \"10:00\". Unless we are on vacation -- then on weekdays it should be \"10:00\" and weekends it should be \"off\". \n\n给定一周中编码为0=Sun，1=Mon，2=Tue，…6=Sat，以及一个表示我们是否在度假的布尔值，返回一个“7:00”格式的字符串，表示闹钟应该在什么时候响。工作日，警报应为“7:00”，周末应为“10:00”。除非我们在度假——那么在工作日应该是“10:00”，周末应该是“关闭”。\n\nalarm_clock(1, False) → '7:00' \n\nalarm_clock(5, False) → '7:00' \n\nalarm_clock(0, False) → '10:00'\n\n### Code:\n\n```python\ndef alarm_clock(day, vacation):\n  if not vacation:\n    if 1<=day<=5:\n      return \"7:00\"\n    else:\n      return \"10:00\"\n  else:\n    if 1<=day<=5:\n      return \"10:00\"\n    else:\n      return \"off\"\n```\n\n##   [Logic-1](https://codingbat.com/python/Logic-1) > love6\n\nThe number 6 is a truly great number. Given two int values, a and b, return True if either one is 6. Or if their sum or difference is 6. Note: the function abs(num) computes the absolute value of a number.\n\n数字6是一个非常好的数字。给定两个整型值a和b，如果其中一个是6，则返回True。如果它们的和或差是6。注意：函数abs（num）计算一个数字的绝对值。\n\nlove6(6, 4) → True\nlove6(4, 5) → False\nlove6(1, 5) → True\n\n### Code:\n\n```python\ndef love6(a, b):\n  if a==6 or b==6 or a+b==6 or abs(a-b)==6:\n    return True\n  else:\n    return False\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > in1to10\n\nGiven a number n, return True if n is in the range 1..10, inclusive. Unless outside_mode is True, in which case return True if the number is less or equal to 1, or greater or equal to 10. \n\n\n\nin1to10(5, False) → True \n\nin1to10(11, False) → False \n\nin1to10(11, True) → True\n\n### Code:\n\n```python\ndef in1to10(n, outside_mode):\n  if (not outside_mode) and 1<=n<=10:\n    return True\n  elif outside_mode and (n<=1 or n>=10) :\n    return True\n  else:\n    return False\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > near_ten\n\nGiven a non-negative number \"num\", return True if num is within 2 of a multiple of 10. Note: (a % b) is the remainder of dividing a by b, so (7 % 5) is 2. See also: [Introduction to Mod](https://codingbat.com/doc/practice/mod-introduction.html) \n\nnear_ten(12) → True \n\nnear_ten(17) → False \n\nnear_ten(19) → True\n\n### Code:\n\n```python\ndef near_ten(num):\n  if num%10<=2 or 10-num%10<=2:\n    return True\n  else:\n    return False\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > make_bricks\n\nWe want to make a row of bricks that is **goal** inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return True if it is possible to make the goal by choosing from the given bricks. This is a little harder than it looks and can be done without any loops. See also: [Introduction to MakeBricks](https://codingbat.com/doc/practice/makebricks-introduction.html) \n\n我们要砌一排目标长度的砖墙。我们有一些小砖块（每个1英寸）和大砖块（每个5英寸）。如果可以通过从给定的砖块中砌到目标长度，则返回True。这比看起来要难一点，而且不需要任何循环就可以完成。另请参见：MakeBricks简介\n\nmake_bricks(3, 1, 8) → True \n\nmake_bricks(3, 1, 9) → False \n\nmake_bricks(3, 2, 10) → True\n\n### Code（已用上循环）:\n\n```python\ndef make_bricks(small, big, goal):\n  for i in range(big+1):\n    if i*5<=goal and goal-i*5<=small:\n      return True\n  else:\n    return False\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > lone_sum\n\nGiven 3 int values, a b c, return their sum. However, if one of the values is the same as another of the values, it does not count towards the sum. \n\n给定3个int值，a b c，返回它们的和。但是，如果其中一个值与另一个值相同，则相同的数不计入总和。\n\nlone_sum(1, 2, 3) → 6\nlone_sum(3, 2, 3) → 2\nlone_sum(3, 3, 3) → 0\n\n### Code:\n\n```python\ndef lone_sum(a, b, c):\n  if a==b==c:\n    return 0\n  elif a==b:\n    return c\n  elif a==c:\n    return b\n  elif b==c:\n    return a\n  else:\n    return a+b+c\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > lucky_sum\n\nGiven 3 int values, a b c, return their sum. However, if one of the values is 13 then it does not count towards the sum and values to its right do not count. So for example, if b is 13, then both b and c do not count.\n\n给定3个int值，a b c，返回它们的和。但是，如果其中一个值是13，则它不计入总和，其右侧的值也不计入。例如，如果b是13，那么b和c都不算数。\n\nlucky_sum(1, 2, 3) → 6\nlucky_sum(1, 2, 13) → 3\nlucky_sum(1, 13, 3) → 1\n\n### Code1:\n\n```python\ndef lucky_sum(a, b, c):\n  if a==13:\n    return 0\n  elif b==13:\n    return a\n  elif c==13:\n    return a+b\n  else:\n    return a+b+c\n```\n\n### Code2:\n\n```python\ndef lucky_sum(a, b, c):\n  sum=0\n  sum_list=[a,b,c]\n  for each in sum_list:\n    if each ==13:\n      return sum\n    else:\n      sum+=each\n  return sum\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > no_teen_sum\n\nGiven 3 int values, a b c, return their sum. However, if any of the values is a teen -- in the range 13..19 inclusive -- then that value counts as 0, except 15 and 16 do not count as a teens. Write a separate helper \"def fix_teen(n):\"that takes in an int value and returns that value fixed for the teen rule. In this way, you avoid repeating the teen code 3 times (i.e. \"decomposition\"). Define the helper below and at the same indent level as the main no_teen_sum().\n\n给定3个int值，a b c，返回它们的和。但是，如果其中任何一个值是青少年——范围在13到19之间——那么这个值就计为0，除了15和16不算青少年。编写一个单独的helper“def fix_teen（n）：”，它接受一个int值并返回为teen规则固定的值。这样，你就可以避免重复青少年代码3次（即“分解”）。在下面定义与主no_teen_sum（）相同缩进级别的助手。\n\nno_teen_sum(1, 2, 3) → 6\nno_teen_sum(2, 13, 1) → 3\nno_teen_sum(2, 1, 14) → 3\n\n### Code:\n\n```python\ndef fix_teen(n):\n  if 13<=n<15 or 16<n<=19:\n    return 0\n  else:\n    return n\n    \ndef no_teen_sum(a, b, c):\n  sum=0\n  for n in (a,b,c):\n    x=fix_teen(n)\n    sum+=x\n  return sum\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > round_sum\n\nFor this problem, we'll round an int value up to the next multiple of 10 if its rightmost digit is 5 or more, so 15 rounds up to 20. Alternately, round down to the previous multiple of 10 if its rightmost digit is less than 5, so 12 rounds down to 10. Given 3 ints, a b c, return the sum of their rounded values. To avoid code repetition, write a separate helper \"def round10(num):\" and call it 3 times. Write the helper entirely below and at the same indent level as round_sum().\n\n对于这个问题，如果一个int值最(个位)是5或更多，我们将它舍入到下一个10的倍数，所以15向上舍入到20。如果前一个数字小于10，则交替向下舍入前10位。给定3个整数，a b c，返回它们的四舍五入值之和。为了避免代码重复，编写一个单独的助手（函数）“def round10（num）：”并调用它3次。将助手写在与round_sum（）完全相同的缩进级别下。\n\nround_sum(16, 17, 18) → 60\nround_sum(12, 13, 14) → 30\nround_sum(6, 4, 4) → 10\n\n### Code：\n\n```python\ndef round10(num):\n  if num%10>=5:\n    return (num//10+1)*10\t#// 为商取整\n  else:\n    return num//10*10\n    \ndef round_sum(a, b, c):\n  s=0\n  for i in (a,b,c):\n    r10=round10(i)\n    s+=r10\n  return s\n```\n\n##  [Logic-2](https://codingbat.com/python/Logic-2) > close_far\n\nGiven three ints, a b c, return True if one of b or c is \"close\" (differing from a by at most 1), while the other is \"far\", differing from both other values by 2 or more. Note: abs(num) computes the absolute value of a number.\n\n给定三个整数，a b c，如果b或c中的一个是“close”（与a相差最多1），而另一个是“far”，则返回True，与其他两个值相差2或更多则不同（返回False )。注意：abs（num）计算数字的绝对值。\n\nclose_far(1, 2, 10) → True\nclose_far(1, 2, 3) → False\nclose_far(4, 1, 3) → True\n\n### Code:\n\n","source":"_posts/2020-07-05-coding-logic.md","raw":"---\nlayout: post\ntitle:  \"python练习园地（三）——Logic篇\"\ndate:   2020-07-03 10:03:25\nauthor: coolxy\ncategories: \n  - 教程技巧\n  - python\ntags: python codingbat\n---\n\n#### 翻译是用百度翻译的，勉强能看明白。\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > cigar_party\n\n\nWhen squirrels get together for a party, they like to have cigars. A squirrel party is successful when the number of cigars is between 40 and 60, inclusive. Unless it is the weekend, in which case there is no upper bound on the number of cigars. Return True if the party with the given values is successful, or False otherwise. \n\n当松鼠聚在一起参加聚会时，他们喜欢抽雪茄。当雪茄数量在40到60支之间时，松鼠派对就成功了。除非是周末，在这种情况下，雪茄数量没有上限。如果具有给定值的参与方成功，则返回True，否则返回False。\n\ncigar_party(30, False) → False \n\ncigar_party(50, False) → True \n\ncigar_party(70, True) → True\n\n### Code:\n\n```python\ndef cigar_party(cigars, is_weekend):\n  if not is_weekend:\n    if cigars>=40 and cigars<=60:\n      return True\n    else:\n      return False\n  elif cigars>=40 :\n    return True\n  else:\n    return False\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > date_fashion\n\nYou and your date are trying to get a table at a restaurant. The parameter \"you\" is the stylishness of your clothes, in the range 0..10, and \"date\" is the stylishness of your date's clothes. The result getting the table is encoded as an int value with 0=no, 1=maybe, 2=yes. If either of you is very stylish, 8 or more, then the result is 2 (yes). With the exception that if either of you has style of 2 or less, then the result is 0 (no). Otherwise the result is 1 (maybe).\n\n#### Eg:\n\ndate_fashion(5, 10) → 2 \n\ndate_fashion(5, 2) → 0 \n\ndate_fashion(5, 5) → 1\n\n你和你的约会对象想在餐馆找张桌子。参数“you”是你衣服的款式，在0到10的范围内，“date”是约会对象衣服的款式。得到表的结果被编码为一个int值，0=no，1=maybe，2=yes。如果你们中的任何一个非常时尚，8或更多，那么结果是2（是）。例外情况是，如果两人的样式为2或更少，则结果为0（否）。否则结果是1（可能）。\n\n### Code:\n\n```python\ndef date_fashion(you, date):\n  if you <=2 or date<=2:\n    return 0\n  elif you>=8 or date >=8:\n    return 2\n  else:\n    return 1\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > squirrel_play\n\nThe squirrels in Palo Alto spend most of the day playing. In particular, they play if the temperature is between 60 and 90 (inclusive). Unless it is summer, then the upper limit is 100 instead of 90. Given an int temperature and a boolean is_summer, return True if the squirrels play and False otherwise. \n\n帕洛阿尔托的松鼠大部分时间都在玩耍。特别是，如果温度在60到90之间（包括60到90），它们就会演奏。除非是夏天，否则上限是100而不是90。给定一个int temperature和一个boolean是_summer，如果松鼠玩游戏，则返回True，否则返回False。\n\nsquirrel_play(70, False) → True \n\nsquirrel_play(95, False) → False \n\nsquirrel_play(95, True) → True\n\n### Code:\n\n```python\ndef squirrel_play(temp, is_summer):\n  if is_summer :\n    if 60<=temp<=100:\n      return True\n    else:\n      return False\n  else:\n    if 60<=temp<=90:\n      return True\n    else:\n      return False\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > caught_speeding\n\nYou are driving a little too fast, and a police officer stops you. Write code to compute the result, encoded as an int value: 0=no ticket, 1=small ticket, 2=big ticket. If speed is 60 or less, the result is 0. If speed is between 61 and 80 inclusive, the result is 1. If speed is 81 or more, the result is 2. Unless it is your birthday -- on that day, your speed can be 5 higher in all cases. \n\n你开得太快了，警察拦住了你。编写代码来计算结果，编码为int值：0=无罚单，1=小票，2=大票。如果速度小于等于60，则结果为0。如果速度在61和80之间（包括61和80），则结果为1。如果速度为81或更高，则结果为2。除非是你的生日——在那一天，你的速度在所有情况下都可以高出5。\n\ncaught_speeding(60, False) → 0\n\ncaught_speeding(65, False) → 1 \n\ncaught_speeding(65, True) → 0\n\n### Code:\n\n```python\ndef caught_speeding(speed, is_birthday):\n  if is_birthday:\n    flag=speed-5\n  else:\n    flag=speed\n    \n  if flag<=60:\n    return 0\n  elif 61<=flag<=80:\n    return 1\n  else:\n    return 2\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > sorta_sum\n\nGiven 2 ints, a and b, return their sum. However, sums in the range 10..19 inclusive, are forbidden, so in that case just return 20.\n\n给定2个整数，a和b，返回它们的和。但是，10到19范围内的和是禁止的，所以在这种情况下只返回20。\n\nsorta_sum(3, 4) → 7\n\nsorta_sum(9, 4) → 20 \n\nsorta_sum(10, 11) → 21\n\n### Code:\n\n```python\ndef sorta_sum(a, b):\n  if 10<=(a+b)<=20:\n    return 20\n  else:\n    return a+b\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > alarm_clock\n\nGiven a day of the week encoded as 0=Sun, 1=Mon, 2=Tue, ...6=Sat, and a boolean indicating if we are on vacation, return a string of the form \"7:00\" indicating when the alarm clock should ring. Weekdays, the alarm should be \"7:00\" and on the weekend it should be \"10:00\". Unless we are on vacation -- then on weekdays it should be \"10:00\" and weekends it should be \"off\". \n\n给定一周中编码为0=Sun，1=Mon，2=Tue，…6=Sat，以及一个表示我们是否在度假的布尔值，返回一个“7:00”格式的字符串，表示闹钟应该在什么时候响。工作日，警报应为“7:00”，周末应为“10:00”。除非我们在度假——那么在工作日应该是“10:00”，周末应该是“关闭”。\n\nalarm_clock(1, False) → '7:00' \n\nalarm_clock(5, False) → '7:00' \n\nalarm_clock(0, False) → '10:00'\n\n### Code:\n\n```python\ndef alarm_clock(day, vacation):\n  if not vacation:\n    if 1<=day<=5:\n      return \"7:00\"\n    else:\n      return \"10:00\"\n  else:\n    if 1<=day<=5:\n      return \"10:00\"\n    else:\n      return \"off\"\n```\n\n##   [Logic-1](https://codingbat.com/python/Logic-1) > love6\n\nThe number 6 is a truly great number. Given two int values, a and b, return True if either one is 6. Or if their sum or difference is 6. Note: the function abs(num) computes the absolute value of a number.\n\n数字6是一个非常好的数字。给定两个整型值a和b，如果其中一个是6，则返回True。如果它们的和或差是6。注意：函数abs（num）计算一个数字的绝对值。\n\nlove6(6, 4) → True\nlove6(4, 5) → False\nlove6(1, 5) → True\n\n### Code:\n\n```python\ndef love6(a, b):\n  if a==6 or b==6 or a+b==6 or abs(a-b)==6:\n    return True\n  else:\n    return False\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > in1to10\n\nGiven a number n, return True if n is in the range 1..10, inclusive. Unless outside_mode is True, in which case return True if the number is less or equal to 1, or greater or equal to 10. \n\n\n\nin1to10(5, False) → True \n\nin1to10(11, False) → False \n\nin1to10(11, True) → True\n\n### Code:\n\n```python\ndef in1to10(n, outside_mode):\n  if (not outside_mode) and 1<=n<=10:\n    return True\n  elif outside_mode and (n<=1 or n>=10) :\n    return True\n  else:\n    return False\n```\n\n## [Logic-1](https://codingbat.com/python/Logic-1) > near_ten\n\nGiven a non-negative number \"num\", return True if num is within 2 of a multiple of 10. Note: (a % b) is the remainder of dividing a by b, so (7 % 5) is 2. See also: [Introduction to Mod](https://codingbat.com/doc/practice/mod-introduction.html) \n\nnear_ten(12) → True \n\nnear_ten(17) → False \n\nnear_ten(19) → True\n\n### Code:\n\n```python\ndef near_ten(num):\n  if num%10<=2 or 10-num%10<=2:\n    return True\n  else:\n    return False\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > make_bricks\n\nWe want to make a row of bricks that is **goal** inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return True if it is possible to make the goal by choosing from the given bricks. This is a little harder than it looks and can be done without any loops. See also: [Introduction to MakeBricks](https://codingbat.com/doc/practice/makebricks-introduction.html) \n\n我们要砌一排目标长度的砖墙。我们有一些小砖块（每个1英寸）和大砖块（每个5英寸）。如果可以通过从给定的砖块中砌到目标长度，则返回True。这比看起来要难一点，而且不需要任何循环就可以完成。另请参见：MakeBricks简介\n\nmake_bricks(3, 1, 8) → True \n\nmake_bricks(3, 1, 9) → False \n\nmake_bricks(3, 2, 10) → True\n\n### Code（已用上循环）:\n\n```python\ndef make_bricks(small, big, goal):\n  for i in range(big+1):\n    if i*5<=goal and goal-i*5<=small:\n      return True\n  else:\n    return False\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > lone_sum\n\nGiven 3 int values, a b c, return their sum. However, if one of the values is the same as another of the values, it does not count towards the sum. \n\n给定3个int值，a b c，返回它们的和。但是，如果其中一个值与另一个值相同，则相同的数不计入总和。\n\nlone_sum(1, 2, 3) → 6\nlone_sum(3, 2, 3) → 2\nlone_sum(3, 3, 3) → 0\n\n### Code:\n\n```python\ndef lone_sum(a, b, c):\n  if a==b==c:\n    return 0\n  elif a==b:\n    return c\n  elif a==c:\n    return b\n  elif b==c:\n    return a\n  else:\n    return a+b+c\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > lucky_sum\n\nGiven 3 int values, a b c, return their sum. However, if one of the values is 13 then it does not count towards the sum and values to its right do not count. So for example, if b is 13, then both b and c do not count.\n\n给定3个int值，a b c，返回它们的和。但是，如果其中一个值是13，则它不计入总和，其右侧的值也不计入。例如，如果b是13，那么b和c都不算数。\n\nlucky_sum(1, 2, 3) → 6\nlucky_sum(1, 2, 13) → 3\nlucky_sum(1, 13, 3) → 1\n\n### Code1:\n\n```python\ndef lucky_sum(a, b, c):\n  if a==13:\n    return 0\n  elif b==13:\n    return a\n  elif c==13:\n    return a+b\n  else:\n    return a+b+c\n```\n\n### Code2:\n\n```python\ndef lucky_sum(a, b, c):\n  sum=0\n  sum_list=[a,b,c]\n  for each in sum_list:\n    if each ==13:\n      return sum\n    else:\n      sum+=each\n  return sum\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > no_teen_sum\n\nGiven 3 int values, a b c, return their sum. However, if any of the values is a teen -- in the range 13..19 inclusive -- then that value counts as 0, except 15 and 16 do not count as a teens. Write a separate helper \"def fix_teen(n):\"that takes in an int value and returns that value fixed for the teen rule. In this way, you avoid repeating the teen code 3 times (i.e. \"decomposition\"). Define the helper below and at the same indent level as the main no_teen_sum().\n\n给定3个int值，a b c，返回它们的和。但是，如果其中任何一个值是青少年——范围在13到19之间——那么这个值就计为0，除了15和16不算青少年。编写一个单独的helper“def fix_teen（n）：”，它接受一个int值并返回为teen规则固定的值。这样，你就可以避免重复青少年代码3次（即“分解”）。在下面定义与主no_teen_sum（）相同缩进级别的助手。\n\nno_teen_sum(1, 2, 3) → 6\nno_teen_sum(2, 13, 1) → 3\nno_teen_sum(2, 1, 14) → 3\n\n### Code:\n\n```python\ndef fix_teen(n):\n  if 13<=n<15 or 16<n<=19:\n    return 0\n  else:\n    return n\n    \ndef no_teen_sum(a, b, c):\n  sum=0\n  for n in (a,b,c):\n    x=fix_teen(n)\n    sum+=x\n  return sum\n```\n\n## [Logic-2](https://codingbat.com/python/Logic-2) > round_sum\n\nFor this problem, we'll round an int value up to the next multiple of 10 if its rightmost digit is 5 or more, so 15 rounds up to 20. Alternately, round down to the previous multiple of 10 if its rightmost digit is less than 5, so 12 rounds down to 10. Given 3 ints, a b c, return the sum of their rounded values. To avoid code repetition, write a separate helper \"def round10(num):\" and call it 3 times. Write the helper entirely below and at the same indent level as round_sum().\n\n对于这个问题，如果一个int值最(个位)是5或更多，我们将它舍入到下一个10的倍数，所以15向上舍入到20。如果前一个数字小于10，则交替向下舍入前10位。给定3个整数，a b c，返回它们的四舍五入值之和。为了避免代码重复，编写一个单独的助手（函数）“def round10（num）：”并调用它3次。将助手写在与round_sum（）完全相同的缩进级别下。\n\nround_sum(16, 17, 18) → 60\nround_sum(12, 13, 14) → 30\nround_sum(6, 4, 4) → 10\n\n### Code：\n\n```python\ndef round10(num):\n  if num%10>=5:\n    return (num//10+1)*10\t#// 为商取整\n  else:\n    return num//10*10\n    \ndef round_sum(a, b, c):\n  s=0\n  for i in (a,b,c):\n    r10=round10(i)\n    s+=r10\n  return s\n```\n\n##  [Logic-2](https://codingbat.com/python/Logic-2) > close_far\n\nGiven three ints, a b c, return True if one of b or c is \"close\" (differing from a by at most 1), while the other is \"far\", differing from both other values by 2 or more. Note: abs(num) computes the absolute value of a number.\n\n给定三个整数，a b c，如果b或c中的一个是“close”（与a相差最多1），而另一个是“far”，则返回True，与其他两个值相差2或更多则不同（返回False )。注意：abs（num）计算数字的绝对值。\n\nclose_far(1, 2, 10) → True\nclose_far(1, 2, 3) → False\nclose_far(4, 1, 3) → True\n\n### Code:\n\n","slug":"coding-logic","published":1,"updated":"2021-03-04T17:03:27.310Z","_id":"cklt3r3dj000g8cw402szh4i5","comments":1,"photos":[],"link":"","content":"<h4 id=\"翻译是用百度翻译的，勉强能看明白。\"><a href=\"#翻译是用百度翻译的，勉强能看明白。\" class=\"headerlink\" title=\"翻译是用百度翻译的，勉强能看明白。\"></a>翻译是用百度翻译的，勉强能看明白。</h4><h2 id=\"Logic-1-gt-cigar-party\"><a href=\"#Logic-1-gt-cigar-party\" class=\"headerlink\" title=\"Logic-1 &gt; cigar_party\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; cigar_party</h2><p>When squirrels get together for a party, they like to have cigars. A squirrel party is successful when the number of cigars is between 40 and 60, inclusive. Unless it is the weekend, in which case there is no upper bound on the number of cigars. Return True if the party with the given values is successful, or False otherwise. </p>\n<p>当松鼠聚在一起参加聚会时，他们喜欢抽雪茄。当雪茄数量在40到60支之间时，松鼠派对就成功了。除非是周末，在这种情况下，雪茄数量没有上限。如果具有给定值的参与方成功，则返回True，否则返回False。</p>\n<p>cigar_party(30, False) → False </p>\n<p>cigar_party(50, False) → True </p>\n<p>cigar_party(70, True) → True</p>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cigar_party</span>(<span class=\"params\">cigars, is_weekend</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> is_weekend:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cigars&gt;=<span class=\"number\">40</span> <span class=\"keyword\">and</span> cigars&lt;=<span class=\"number\">60</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> cigars&gt;=<span class=\"number\">40</span> :</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-date-fashion\"><a href=\"#Logic-1-gt-date-fashion\" class=\"headerlink\" title=\"Logic-1 &gt; date_fashion\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; date_fashion</h2><p>You and your date are trying to get a table at a restaurant. The parameter “you” is the stylishness of your clothes, in the range 0..10, and “date” is the stylishness of your date’s clothes. The result getting the table is encoded as an int value with 0=no, 1=maybe, 2=yes. If either of you is very stylish, 8 or more, then the result is 2 (yes). With the exception that if either of you has style of 2 or less, then the result is 0 (no). Otherwise the result is 1 (maybe).</p>\n<h4 id=\"Eg\"><a href=\"#Eg\" class=\"headerlink\" title=\"Eg:\"></a>Eg:</h4><p>date_fashion(5, 10) → 2 </p>\n<p>date_fashion(5, 2) → 0 </p>\n<p>date_fashion(5, 5) → 1</p>\n<p>你和你的约会对象想在餐馆找张桌子。参数“you”是你衣服的款式，在0到10的范围内，“date”是约会对象衣服的款式。得到表的结果被编码为一个int值，0=no，1=maybe，2=yes。如果你们中的任何一个非常时尚，8或更多，那么结果是2（是）。例外情况是，如果两人的样式为2或更少，则结果为0（否）。否则结果是1（可能）。</p>\n<h3 id=\"Code-1\"><a href=\"#Code-1\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">date_fashion</span>(<span class=\"params\">you, date</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> you &lt;=<span class=\"number\">2</span> <span class=\"keyword\">or</span> date&lt;=<span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> you&gt;=<span class=\"number\">8</span> <span class=\"keyword\">or</span> date &gt;=<span class=\"number\">8</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-squirrel-play\"><a href=\"#Logic-1-gt-squirrel-play\" class=\"headerlink\" title=\"Logic-1 &gt; squirrel_play\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; squirrel_play</h2><p>The squirrels in Palo Alto spend most of the day playing. In particular, they play if the temperature is between 60 and 90 (inclusive). Unless it is summer, then the upper limit is 100 instead of 90. Given an int temperature and a boolean is_summer, return True if the squirrels play and False otherwise. </p>\n<p>帕洛阿尔托的松鼠大部分时间都在玩耍。特别是，如果温度在60到90之间（包括60到90），它们就会演奏。除非是夏天，否则上限是100而不是90。给定一个int temperature和一个boolean是_summer，如果松鼠玩游戏，则返回True，否则返回False。</p>\n<p>squirrel_play(70, False) → True </p>\n<p>squirrel_play(95, False) → False </p>\n<p>squirrel_play(95, True) → True</p>\n<h3 id=\"Code-2\"><a href=\"#Code-2\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">squirrel_play</span>(<span class=\"params\">temp, is_summer</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> is_summer :</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">60</span>&lt;=temp&lt;=<span class=\"number\">100</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">60</span>&lt;=temp&lt;=<span class=\"number\">90</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-caught-speeding\"><a href=\"#Logic-1-gt-caught-speeding\" class=\"headerlink\" title=\"Logic-1 &gt; caught_speeding\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; caught_speeding</h2><p>You are driving a little too fast, and a police officer stops you. Write code to compute the result, encoded as an int value: 0=no ticket, 1=small ticket, 2=big ticket. If speed is 60 or less, the result is 0. If speed is between 61 and 80 inclusive, the result is 1. If speed is 81 or more, the result is 2. Unless it is your birthday – on that day, your speed can be 5 higher in all cases. </p>\n<p>你开得太快了，警察拦住了你。编写代码来计算结果，编码为int值：0=无罚单，1=小票，2=大票。如果速度小于等于60，则结果为0。如果速度在61和80之间（包括61和80），则结果为1。如果速度为81或更高，则结果为2。除非是你的生日——在那一天，你的速度在所有情况下都可以高出5。</p>\n<p>caught_speeding(60, False) → 0</p>\n<p>caught_speeding(65, False) → 1 </p>\n<p>caught_speeding(65, True) → 0</p>\n<h3 id=\"Code-3\"><a href=\"#Code-3\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">caught_speeding</span>(<span class=\"params\">speed, is_birthday</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> is_birthday:</span><br><span class=\"line\">    flag=speed-<span class=\"number\">5</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    flag=speed</span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"keyword\">if</span> flag&lt;=<span class=\"number\">60</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> <span class=\"number\">61</span>&lt;=flag&lt;=<span class=\"number\">80</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-sorta-sum\"><a href=\"#Logic-1-gt-sorta-sum\" class=\"headerlink\" title=\"Logic-1 &gt; sorta_sum\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; sorta_sum</h2><p>Given 2 ints, a and b, return their sum. However, sums in the range 10..19 inclusive, are forbidden, so in that case just return 20.</p>\n<p>给定2个整数，a和b，返回它们的和。但是，10到19范围内的和是禁止的，所以在这种情况下只返回20。</p>\n<p>sorta_sum(3, 4) → 7</p>\n<p>sorta_sum(9, 4) → 20 </p>\n<p>sorta_sum(10, 11) → 21</p>\n<h3 id=\"Code-4\"><a href=\"#Code-4\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sorta_sum</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"number\">10</span>&lt;=(a+b)&lt;=<span class=\"number\">20</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">20</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-alarm-clock\"><a href=\"#Logic-1-gt-alarm-clock\" class=\"headerlink\" title=\"Logic-1 &gt; alarm_clock\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; alarm_clock</h2><p>Given a day of the week encoded as 0=Sun, 1=Mon, 2=Tue, …6=Sat, and a boolean indicating if we are on vacation, return a string of the form “7:00” indicating when the alarm clock should ring. Weekdays, the alarm should be “7:00” and on the weekend it should be “10:00”. Unless we are on vacation – then on weekdays it should be “10:00” and weekends it should be “off”. </p>\n<p>给定一周中编码为0=Sun，1=Mon，2=Tue，…6=Sat，以及一个表示我们是否在度假的布尔值，返回一个“7:00”格式的字符串，表示闹钟应该在什么时候响。工作日，警报应为“7:00”，周末应为“10:00”。除非我们在度假——那么在工作日应该是“10:00”，周末应该是“关闭”。</p>\n<p>alarm_clock(1, False) → ‘7:00’ </p>\n<p>alarm_clock(5, False) → ‘7:00’ </p>\n<p>alarm_clock(0, False) → ‘10:00’</p>\n<h3 id=\"Code-5\"><a href=\"#Code-5\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">alarm_clock</span>(<span class=\"params\">day, vacation</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> vacation:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">1</span>&lt;=day&lt;=<span class=\"number\">5</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;7:00&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;10:00&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">1</span>&lt;=day&lt;=<span class=\"number\">5</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;10:00&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;off&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-love6\"><a href=\"#Logic-1-gt-love6\" class=\"headerlink\" title=\"Logic-1 &gt; love6\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; love6</h2><p>The number 6 is a truly great number. Given two int values, a and b, return True if either one is 6. Or if their sum or difference is 6. Note: the function abs(num) computes the absolute value of a number.</p>\n<p>数字6是一个非常好的数字。给定两个整型值a和b，如果其中一个是6，则返回True。如果它们的和或差是6。注意：函数abs（num）计算一个数字的绝对值。</p>\n<p>love6(6, 4) → True<br>love6(4, 5) → False<br>love6(1, 5) → True</p>\n<h3 id=\"Code-6\"><a href=\"#Code-6\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">love6</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a==<span class=\"number\">6</span> <span class=\"keyword\">or</span> b==<span class=\"number\">6</span> <span class=\"keyword\">or</span> a+b==<span class=\"number\">6</span> <span class=\"keyword\">or</span> <span class=\"built_in\">abs</span>(a-b)==<span class=\"number\">6</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-in1to10\"><a href=\"#Logic-1-gt-in1to10\" class=\"headerlink\" title=\"Logic-1 &gt; in1to10\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; in1to10</h2><p>Given a number n, return True if n is in the range 1..10, inclusive. Unless outside_mode is True, in which case return True if the number is less or equal to 1, or greater or equal to 10. </p>\n<p>in1to10(5, False) → True </p>\n<p>in1to10(11, False) → False </p>\n<p>in1to10(11, True) → True</p>\n<h3 id=\"Code-7\"><a href=\"#Code-7\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">in1to10</span>(<span class=\"params\">n, outside_mode</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">not</span> outside_mode) <span class=\"keyword\">and</span> <span class=\"number\">1</span>&lt;=n&lt;=<span class=\"number\">10</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> outside_mode <span class=\"keyword\">and</span> (n&lt;=<span class=\"number\">1</span> <span class=\"keyword\">or</span> n&gt;=<span class=\"number\">10</span>) :</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-near-ten\"><a href=\"#Logic-1-gt-near-ten\" class=\"headerlink\" title=\"Logic-1 &gt; near_ten\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; near_ten</h2><p>Given a non-negative number “num”, return True if num is within 2 of a multiple of 10. Note: (a % b) is the remainder of dividing a by b, so (7 % 5) is 2. See also: <a href=\"https://codingbat.com/doc/practice/mod-introduction.html\">Introduction to Mod</a> </p>\n<p>near_ten(12) → True </p>\n<p>near_ten(17) → False </p>\n<p>near_ten(19) → True</p>\n<h3 id=\"Code-8\"><a href=\"#Code-8\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">near_ten</span>(<span class=\"params\">num</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> num%<span class=\"number\">10</span>&lt;=<span class=\"number\">2</span> <span class=\"keyword\">or</span> <span class=\"number\">10</span>-num%<span class=\"number\">10</span>&lt;=<span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-make-bricks\"><a href=\"#Logic-2-gt-make-bricks\" class=\"headerlink\" title=\"Logic-2 &gt; make_bricks\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; make_bricks</h2><p>We want to make a row of bricks that is <strong>goal</strong> inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return True if it is possible to make the goal by choosing from the given bricks. This is a little harder than it looks and can be done without any loops. See also: <a href=\"https://codingbat.com/doc/practice/makebricks-introduction.html\">Introduction to MakeBricks</a> </p>\n<p>我们要砌一排目标长度的砖墙。我们有一些小砖块（每个1英寸）和大砖块（每个5英寸）。如果可以通过从给定的砖块中砌到目标长度，则返回True。这比看起来要难一点，而且不需要任何循环就可以完成。另请参见：MakeBricks简介</p>\n<p>make_bricks(3, 1, 8) → True </p>\n<p>make_bricks(3, 1, 9) → False </p>\n<p>make_bricks(3, 2, 10) → True</p>\n<h3 id=\"Code（已用上循环）\"><a href=\"#Code（已用上循环）\" class=\"headerlink\" title=\"Code（已用上循环）:\"></a>Code（已用上循环）:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_bricks</span>(<span class=\"params\">small, big, goal</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(big+<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i*<span class=\"number\">5</span>&lt;=goal <span class=\"keyword\">and</span> goal-i*<span class=\"number\">5</span>&lt;=small:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-lone-sum\"><a href=\"#Logic-2-gt-lone-sum\" class=\"headerlink\" title=\"Logic-2 &gt; lone_sum\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; lone_sum</h2><p>Given 3 int values, a b c, return their sum. However, if one of the values is the same as another of the values, it does not count towards the sum. </p>\n<p>给定3个int值，a b c，返回它们的和。但是，如果其中一个值与另一个值相同，则相同的数不计入总和。</p>\n<p>lone_sum(1, 2, 3) → 6<br>lone_sum(3, 2, 3) → 2<br>lone_sum(3, 3, 3) → 0</p>\n<h3 id=\"Code-9\"><a href=\"#Code-9\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lone_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a==b==c:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> a==b:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c</span><br><span class=\"line\">  <span class=\"keyword\">elif</span> a==c:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b</span><br><span class=\"line\">  <span class=\"keyword\">elif</span> b==c:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b+c</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-lucky-sum\"><a href=\"#Logic-2-gt-lucky-sum\" class=\"headerlink\" title=\"Logic-2 &gt; lucky_sum\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; lucky_sum</h2><p>Given 3 int values, a b c, return their sum. However, if one of the values is 13 then it does not count towards the sum and values to its right do not count. So for example, if b is 13, then both b and c do not count.</p>\n<p>给定3个int值，a b c，返回它们的和。但是，如果其中一个值是13，则它不计入总和，其右侧的值也不计入。例如，如果b是13，那么b和c都不算数。</p>\n<p>lucky_sum(1, 2, 3) → 6<br>lucky_sum(1, 2, 13) → 3<br>lucky_sum(1, 13, 3) → 1</p>\n<h3 id=\"Code1\"><a href=\"#Code1\" class=\"headerlink\" title=\"Code1:\"></a>Code1:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lucky_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a==<span class=\"number\">13</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> b==<span class=\"number\">13</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\">  <span class=\"keyword\">elif</span> c==<span class=\"number\">13</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b+c</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Code2\"><a href=\"#Code2\" class=\"headerlink\" title=\"Code2:\"></a>Code2:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lucky_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  <span class=\"built_in\">sum</span>=<span class=\"number\">0</span></span><br><span class=\"line\">  sum_list=[a,b,c]</span><br><span class=\"line\">  <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> sum_list:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> each ==<span class=\"number\">13</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"built_in\">sum</span>+=each</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-no-teen-sum\"><a href=\"#Logic-2-gt-no-teen-sum\" class=\"headerlink\" title=\"Logic-2 &gt; no_teen_sum\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; no_teen_sum</h2><p>Given 3 int values, a b c, return their sum. However, if any of the values is a teen – in the range 13..19 inclusive – then that value counts as 0, except 15 and 16 do not count as a teens. Write a separate helper “def fix_teen(n):”that takes in an int value and returns that value fixed for the teen rule. In this way, you avoid repeating the teen code 3 times (i.e. “decomposition”). Define the helper below and at the same indent level as the main no_teen_sum().</p>\n<p>给定3个int值，a b c，返回它们的和。但是，如果其中任何一个值是青少年——范围在13到19之间——那么这个值就计为0，除了15和16不算青少年。编写一个单独的helper“def fix_teen（n）：”，它接受一个int值并返回为teen规则固定的值。这样，你就可以避免重复青少年代码3次（即“分解”）。在下面定义与主no_teen_sum（）相同缩进级别的助手。</p>\n<p>no_teen_sum(1, 2, 3) → 6<br>no_teen_sum(2, 13, 1) → 3<br>no_teen_sum(2, 1, 14) → 3</p>\n<h3 id=\"Code-10\"><a href=\"#Code-10\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fix_teen</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"number\">13</span>&lt;=n&lt;<span class=\"number\">15</span> <span class=\"keyword\">or</span> <span class=\"number\">16</span>&lt;n&lt;=<span class=\"number\">19</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">no_teen_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  <span class=\"built_in\">sum</span>=<span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> (a,b,c):</span><br><span class=\"line\">    x=fix_teen(n)</span><br><span class=\"line\">    <span class=\"built_in\">sum</span>+=x</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-round-sum\"><a href=\"#Logic-2-gt-round-sum\" class=\"headerlink\" title=\"Logic-2 &gt; round_sum\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; round_sum</h2><p>For this problem, we’ll round an int value up to the next multiple of 10 if its rightmost digit is 5 or more, so 15 rounds up to 20. Alternately, round down to the previous multiple of 10 if its rightmost digit is less than 5, so 12 rounds down to 10. Given 3 ints, a b c, return the sum of their rounded values. To avoid code repetition, write a separate helper “def round10(num):” and call it 3 times. Write the helper entirely below and at the same indent level as round_sum().</p>\n<p>对于这个问题，如果一个int值最(个位)是5或更多，我们将它舍入到下一个10的倍数，所以15向上舍入到20。如果前一个数字小于10，则交替向下舍入前10位。给定3个整数，a b c，返回它们的四舍五入值之和。为了避免代码重复，编写一个单独的助手（函数）“def round10（num）：”并调用它3次。将助手写在与round_sum（）完全相同的缩进级别下。</p>\n<p>round_sum(16, 17, 18) → 60<br>round_sum(12, 13, 14) → 30<br>round_sum(6, 4, 4) → 10</p>\n<h3 id=\"Code：\"><a href=\"#Code：\" class=\"headerlink\" title=\"Code：\"></a>Code：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">round10</span>(<span class=\"params\">num</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> num%<span class=\"number\">10</span>&gt;=<span class=\"number\">5</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (num//<span class=\"number\">10</span>+<span class=\"number\">1</span>)*<span class=\"number\">10</span>\t<span class=\"comment\">#// 为商取整</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num//<span class=\"number\">10</span>*<span class=\"number\">10</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">round_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  s=<span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> (a,b,c):</span><br><span class=\"line\">    r10=round10(i)</span><br><span class=\"line\">    s+=r10</span><br><span class=\"line\">  <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-close-far\"><a href=\"#Logic-2-gt-close-far\" class=\"headerlink\" title=\"Logic-2 &gt; close_far\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; close_far</h2><p>Given three ints, a b c, return True if one of b or c is “close” (differing from a by at most 1), while the other is “far”, differing from both other values by 2 or more. Note: abs(num) computes the absolute value of a number.</p>\n<p>给定三个整数，a b c，如果b或c中的一个是“close”（与a相差最多1），而另一个是“far”，则返回True，与其他两个值相差2或更多则不同（返回False )。注意：abs（num）计算数字的绝对值。</p>\n<p>close_far(1, 2, 10) → True<br>close_far(1, 2, 3) → False<br>close_far(4, 1, 3) → True</p>\n<h3 id=\"Code-11\"><a href=\"#Code-11\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"翻译是用百度翻译的，勉强能看明白。\"><a href=\"#翻译是用百度翻译的，勉强能看明白。\" class=\"headerlink\" title=\"翻译是用百度翻译的，勉强能看明白。\"></a>翻译是用百度翻译的，勉强能看明白。</h4><h2 id=\"Logic-1-gt-cigar-party\"><a href=\"#Logic-1-gt-cigar-party\" class=\"headerlink\" title=\"Logic-1 &gt; cigar_party\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; cigar_party</h2><p>When squirrels get together for a party, they like to have cigars. A squirrel party is successful when the number of cigars is between 40 and 60, inclusive. Unless it is the weekend, in which case there is no upper bound on the number of cigars. Return True if the party with the given values is successful, or False otherwise. </p>\n<p>当松鼠聚在一起参加聚会时，他们喜欢抽雪茄。当雪茄数量在40到60支之间时，松鼠派对就成功了。除非是周末，在这种情况下，雪茄数量没有上限。如果具有给定值的参与方成功，则返回True，否则返回False。</p>\n<p>cigar_party(30, False) → False </p>\n<p>cigar_party(50, False) → True </p>\n<p>cigar_party(70, True) → True</p>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cigar_party</span>(<span class=\"params\">cigars, is_weekend</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> is_weekend:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cigars&gt;=<span class=\"number\">40</span> <span class=\"keyword\">and</span> cigars&lt;=<span class=\"number\">60</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> cigars&gt;=<span class=\"number\">40</span> :</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-date-fashion\"><a href=\"#Logic-1-gt-date-fashion\" class=\"headerlink\" title=\"Logic-1 &gt; date_fashion\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; date_fashion</h2><p>You and your date are trying to get a table at a restaurant. The parameter “you” is the stylishness of your clothes, in the range 0..10, and “date” is the stylishness of your date’s clothes. The result getting the table is encoded as an int value with 0=no, 1=maybe, 2=yes. If either of you is very stylish, 8 or more, then the result is 2 (yes). With the exception that if either of you has style of 2 or less, then the result is 0 (no). Otherwise the result is 1 (maybe).</p>\n<h4 id=\"Eg\"><a href=\"#Eg\" class=\"headerlink\" title=\"Eg:\"></a>Eg:</h4><p>date_fashion(5, 10) → 2 </p>\n<p>date_fashion(5, 2) → 0 </p>\n<p>date_fashion(5, 5) → 1</p>\n<p>你和你的约会对象想在餐馆找张桌子。参数“you”是你衣服的款式，在0到10的范围内，“date”是约会对象衣服的款式。得到表的结果被编码为一个int值，0=no，1=maybe，2=yes。如果你们中的任何一个非常时尚，8或更多，那么结果是2（是）。例外情况是，如果两人的样式为2或更少，则结果为0（否）。否则结果是1（可能）。</p>\n<h3 id=\"Code-1\"><a href=\"#Code-1\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">date_fashion</span>(<span class=\"params\">you, date</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> you &lt;=<span class=\"number\">2</span> <span class=\"keyword\">or</span> date&lt;=<span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> you&gt;=<span class=\"number\">8</span> <span class=\"keyword\">or</span> date &gt;=<span class=\"number\">8</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-squirrel-play\"><a href=\"#Logic-1-gt-squirrel-play\" class=\"headerlink\" title=\"Logic-1 &gt; squirrel_play\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; squirrel_play</h2><p>The squirrels in Palo Alto spend most of the day playing. In particular, they play if the temperature is between 60 and 90 (inclusive). Unless it is summer, then the upper limit is 100 instead of 90. Given an int temperature and a boolean is_summer, return True if the squirrels play and False otherwise. </p>\n<p>帕洛阿尔托的松鼠大部分时间都在玩耍。特别是，如果温度在60到90之间（包括60到90），它们就会演奏。除非是夏天，否则上限是100而不是90。给定一个int temperature和一个boolean是_summer，如果松鼠玩游戏，则返回True，否则返回False。</p>\n<p>squirrel_play(70, False) → True </p>\n<p>squirrel_play(95, False) → False </p>\n<p>squirrel_play(95, True) → True</p>\n<h3 id=\"Code-2\"><a href=\"#Code-2\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">squirrel_play</span>(<span class=\"params\">temp, is_summer</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> is_summer :</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">60</span>&lt;=temp&lt;=<span class=\"number\">100</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">60</span>&lt;=temp&lt;=<span class=\"number\">90</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-caught-speeding\"><a href=\"#Logic-1-gt-caught-speeding\" class=\"headerlink\" title=\"Logic-1 &gt; caught_speeding\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; caught_speeding</h2><p>You are driving a little too fast, and a police officer stops you. Write code to compute the result, encoded as an int value: 0=no ticket, 1=small ticket, 2=big ticket. If speed is 60 or less, the result is 0. If speed is between 61 and 80 inclusive, the result is 1. If speed is 81 or more, the result is 2. Unless it is your birthday – on that day, your speed can be 5 higher in all cases. </p>\n<p>你开得太快了，警察拦住了你。编写代码来计算结果，编码为int值：0=无罚单，1=小票，2=大票。如果速度小于等于60，则结果为0。如果速度在61和80之间（包括61和80），则结果为1。如果速度为81或更高，则结果为2。除非是你的生日——在那一天，你的速度在所有情况下都可以高出5。</p>\n<p>caught_speeding(60, False) → 0</p>\n<p>caught_speeding(65, False) → 1 </p>\n<p>caught_speeding(65, True) → 0</p>\n<h3 id=\"Code-3\"><a href=\"#Code-3\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">caught_speeding</span>(<span class=\"params\">speed, is_birthday</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> is_birthday:</span><br><span class=\"line\">    flag=speed-<span class=\"number\">5</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    flag=speed</span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"keyword\">if</span> flag&lt;=<span class=\"number\">60</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> <span class=\"number\">61</span>&lt;=flag&lt;=<span class=\"number\">80</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-sorta-sum\"><a href=\"#Logic-1-gt-sorta-sum\" class=\"headerlink\" title=\"Logic-1 &gt; sorta_sum\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; sorta_sum</h2><p>Given 2 ints, a and b, return their sum. However, sums in the range 10..19 inclusive, are forbidden, so in that case just return 20.</p>\n<p>给定2个整数，a和b，返回它们的和。但是，10到19范围内的和是禁止的，所以在这种情况下只返回20。</p>\n<p>sorta_sum(3, 4) → 7</p>\n<p>sorta_sum(9, 4) → 20 </p>\n<p>sorta_sum(10, 11) → 21</p>\n<h3 id=\"Code-4\"><a href=\"#Code-4\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sorta_sum</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"number\">10</span>&lt;=(a+b)&lt;=<span class=\"number\">20</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">20</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-alarm-clock\"><a href=\"#Logic-1-gt-alarm-clock\" class=\"headerlink\" title=\"Logic-1 &gt; alarm_clock\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; alarm_clock</h2><p>Given a day of the week encoded as 0=Sun, 1=Mon, 2=Tue, …6=Sat, and a boolean indicating if we are on vacation, return a string of the form “7:00” indicating when the alarm clock should ring. Weekdays, the alarm should be “7:00” and on the weekend it should be “10:00”. Unless we are on vacation – then on weekdays it should be “10:00” and weekends it should be “off”. </p>\n<p>给定一周中编码为0=Sun，1=Mon，2=Tue，…6=Sat，以及一个表示我们是否在度假的布尔值，返回一个“7:00”格式的字符串，表示闹钟应该在什么时候响。工作日，警报应为“7:00”，周末应为“10:00”。除非我们在度假——那么在工作日应该是“10:00”，周末应该是“关闭”。</p>\n<p>alarm_clock(1, False) → ‘7:00’ </p>\n<p>alarm_clock(5, False) → ‘7:00’ </p>\n<p>alarm_clock(0, False) → ‘10:00’</p>\n<h3 id=\"Code-5\"><a href=\"#Code-5\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">alarm_clock</span>(<span class=\"params\">day, vacation</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> vacation:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">1</span>&lt;=day&lt;=<span class=\"number\">5</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;7:00&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;10:00&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">1</span>&lt;=day&lt;=<span class=\"number\">5</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;10:00&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;off&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-love6\"><a href=\"#Logic-1-gt-love6\" class=\"headerlink\" title=\"Logic-1 &gt; love6\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; love6</h2><p>The number 6 is a truly great number. Given two int values, a and b, return True if either one is 6. Or if their sum or difference is 6. Note: the function abs(num) computes the absolute value of a number.</p>\n<p>数字6是一个非常好的数字。给定两个整型值a和b，如果其中一个是6，则返回True。如果它们的和或差是6。注意：函数abs（num）计算一个数字的绝对值。</p>\n<p>love6(6, 4) → True<br>love6(4, 5) → False<br>love6(1, 5) → True</p>\n<h3 id=\"Code-6\"><a href=\"#Code-6\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">love6</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a==<span class=\"number\">6</span> <span class=\"keyword\">or</span> b==<span class=\"number\">6</span> <span class=\"keyword\">or</span> a+b==<span class=\"number\">6</span> <span class=\"keyword\">or</span> <span class=\"built_in\">abs</span>(a-b)==<span class=\"number\">6</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-in1to10\"><a href=\"#Logic-1-gt-in1to10\" class=\"headerlink\" title=\"Logic-1 &gt; in1to10\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; in1to10</h2><p>Given a number n, return True if n is in the range 1..10, inclusive. Unless outside_mode is True, in which case return True if the number is less or equal to 1, or greater or equal to 10. </p>\n<p>in1to10(5, False) → True </p>\n<p>in1to10(11, False) → False </p>\n<p>in1to10(11, True) → True</p>\n<h3 id=\"Code-7\"><a href=\"#Code-7\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">in1to10</span>(<span class=\"params\">n, outside_mode</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">not</span> outside_mode) <span class=\"keyword\">and</span> <span class=\"number\">1</span>&lt;=n&lt;=<span class=\"number\">10</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> outside_mode <span class=\"keyword\">and</span> (n&lt;=<span class=\"number\">1</span> <span class=\"keyword\">or</span> n&gt;=<span class=\"number\">10</span>) :</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-1-gt-near-ten\"><a href=\"#Logic-1-gt-near-ten\" class=\"headerlink\" title=\"Logic-1 &gt; near_ten\"></a><a href=\"https://codingbat.com/python/Logic-1\">Logic-1</a> &gt; near_ten</h2><p>Given a non-negative number “num”, return True if num is within 2 of a multiple of 10. Note: (a % b) is the remainder of dividing a by b, so (7 % 5) is 2. See also: <a href=\"https://codingbat.com/doc/practice/mod-introduction.html\">Introduction to Mod</a> </p>\n<p>near_ten(12) → True </p>\n<p>near_ten(17) → False </p>\n<p>near_ten(19) → True</p>\n<h3 id=\"Code-8\"><a href=\"#Code-8\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">near_ten</span>(<span class=\"params\">num</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> num%<span class=\"number\">10</span>&lt;=<span class=\"number\">2</span> <span class=\"keyword\">or</span> <span class=\"number\">10</span>-num%<span class=\"number\">10</span>&lt;=<span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-make-bricks\"><a href=\"#Logic-2-gt-make-bricks\" class=\"headerlink\" title=\"Logic-2 &gt; make_bricks\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; make_bricks</h2><p>We want to make a row of bricks that is <strong>goal</strong> inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return True if it is possible to make the goal by choosing from the given bricks. This is a little harder than it looks and can be done without any loops. See also: <a href=\"https://codingbat.com/doc/practice/makebricks-introduction.html\">Introduction to MakeBricks</a> </p>\n<p>我们要砌一排目标长度的砖墙。我们有一些小砖块（每个1英寸）和大砖块（每个5英寸）。如果可以通过从给定的砖块中砌到目标长度，则返回True。这比看起来要难一点，而且不需要任何循环就可以完成。另请参见：MakeBricks简介</p>\n<p>make_bricks(3, 1, 8) → True </p>\n<p>make_bricks(3, 1, 9) → False </p>\n<p>make_bricks(3, 2, 10) → True</p>\n<h3 id=\"Code（已用上循环）\"><a href=\"#Code（已用上循环）\" class=\"headerlink\" title=\"Code（已用上循环）:\"></a>Code（已用上循环）:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_bricks</span>(<span class=\"params\">small, big, goal</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(big+<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i*<span class=\"number\">5</span>&lt;=goal <span class=\"keyword\">and</span> goal-i*<span class=\"number\">5</span>&lt;=small:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-lone-sum\"><a href=\"#Logic-2-gt-lone-sum\" class=\"headerlink\" title=\"Logic-2 &gt; lone_sum\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; lone_sum</h2><p>Given 3 int values, a b c, return their sum. However, if one of the values is the same as another of the values, it does not count towards the sum. </p>\n<p>给定3个int值，a b c，返回它们的和。但是，如果其中一个值与另一个值相同，则相同的数不计入总和。</p>\n<p>lone_sum(1, 2, 3) → 6<br>lone_sum(3, 2, 3) → 2<br>lone_sum(3, 3, 3) → 0</p>\n<h3 id=\"Code-9\"><a href=\"#Code-9\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lone_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a==b==c:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> a==b:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c</span><br><span class=\"line\">  <span class=\"keyword\">elif</span> a==c:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b</span><br><span class=\"line\">  <span class=\"keyword\">elif</span> b==c:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b+c</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-lucky-sum\"><a href=\"#Logic-2-gt-lucky-sum\" class=\"headerlink\" title=\"Logic-2 &gt; lucky_sum\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; lucky_sum</h2><p>Given 3 int values, a b c, return their sum. However, if one of the values is 13 then it does not count towards the sum and values to its right do not count. So for example, if b is 13, then both b and c do not count.</p>\n<p>给定3个int值，a b c，返回它们的和。但是，如果其中一个值是13，则它不计入总和，其右侧的值也不计入。例如，如果b是13，那么b和c都不算数。</p>\n<p>lucky_sum(1, 2, 3) → 6<br>lucky_sum(1, 2, 13) → 3<br>lucky_sum(1, 13, 3) → 1</p>\n<h3 id=\"Code1\"><a href=\"#Code1\" class=\"headerlink\" title=\"Code1:\"></a>Code1:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lucky_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a==<span class=\"number\">13</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">elif</span> b==<span class=\"number\">13</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\">  <span class=\"keyword\">elif</span> c==<span class=\"number\">13</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b+c</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Code2\"><a href=\"#Code2\" class=\"headerlink\" title=\"Code2:\"></a>Code2:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lucky_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  <span class=\"built_in\">sum</span>=<span class=\"number\">0</span></span><br><span class=\"line\">  sum_list=[a,b,c]</span><br><span class=\"line\">  <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> sum_list:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> each ==<span class=\"number\">13</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      <span class=\"built_in\">sum</span>+=each</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-no-teen-sum\"><a href=\"#Logic-2-gt-no-teen-sum\" class=\"headerlink\" title=\"Logic-2 &gt; no_teen_sum\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; no_teen_sum</h2><p>Given 3 int values, a b c, return their sum. However, if any of the values is a teen – in the range 13..19 inclusive – then that value counts as 0, except 15 and 16 do not count as a teens. Write a separate helper “def fix_teen(n):”that takes in an int value and returns that value fixed for the teen rule. In this way, you avoid repeating the teen code 3 times (i.e. “decomposition”). Define the helper below and at the same indent level as the main no_teen_sum().</p>\n<p>给定3个int值，a b c，返回它们的和。但是，如果其中任何一个值是青少年——范围在13到19之间——那么这个值就计为0，除了15和16不算青少年。编写一个单独的helper“def fix_teen（n）：”，它接受一个int值并返回为teen规则固定的值。这样，你就可以避免重复青少年代码3次（即“分解”）。在下面定义与主no_teen_sum（）相同缩进级别的助手。</p>\n<p>no_teen_sum(1, 2, 3) → 6<br>no_teen_sum(2, 13, 1) → 3<br>no_teen_sum(2, 1, 14) → 3</p>\n<h3 id=\"Code-10\"><a href=\"#Code-10\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fix_teen</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"number\">13</span>&lt;=n&lt;<span class=\"number\">15</span> <span class=\"keyword\">or</span> <span class=\"number\">16</span>&lt;n&lt;=<span class=\"number\">19</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">no_teen_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  <span class=\"built_in\">sum</span>=<span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> (a,b,c):</span><br><span class=\"line\">    x=fix_teen(n)</span><br><span class=\"line\">    <span class=\"built_in\">sum</span>+=x</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-round-sum\"><a href=\"#Logic-2-gt-round-sum\" class=\"headerlink\" title=\"Logic-2 &gt; round_sum\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; round_sum</h2><p>For this problem, we’ll round an int value up to the next multiple of 10 if its rightmost digit is 5 or more, so 15 rounds up to 20. Alternately, round down to the previous multiple of 10 if its rightmost digit is less than 5, so 12 rounds down to 10. Given 3 ints, a b c, return the sum of their rounded values. To avoid code repetition, write a separate helper “def round10(num):” and call it 3 times. Write the helper entirely below and at the same indent level as round_sum().</p>\n<p>对于这个问题，如果一个int值最(个位)是5或更多，我们将它舍入到下一个10的倍数，所以15向上舍入到20。如果前一个数字小于10，则交替向下舍入前10位。给定3个整数，a b c，返回它们的四舍五入值之和。为了避免代码重复，编写一个单独的助手（函数）“def round10（num）：”并调用它3次。将助手写在与round_sum（）完全相同的缩进级别下。</p>\n<p>round_sum(16, 17, 18) → 60<br>round_sum(12, 13, 14) → 30<br>round_sum(6, 4, 4) → 10</p>\n<h3 id=\"Code：\"><a href=\"#Code：\" class=\"headerlink\" title=\"Code：\"></a>Code：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">round10</span>(<span class=\"params\">num</span>):</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> num%<span class=\"number\">10</span>&gt;=<span class=\"number\">5</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (num//<span class=\"number\">10</span>+<span class=\"number\">1</span>)*<span class=\"number\">10</span>\t<span class=\"comment\">#// 为商取整</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num//<span class=\"number\">10</span>*<span class=\"number\">10</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">round_sum</span>(<span class=\"params\">a, b, c</span>):</span></span><br><span class=\"line\">  s=<span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> (a,b,c):</span><br><span class=\"line\">    r10=round10(i)</span><br><span class=\"line\">    s+=r10</span><br><span class=\"line\">  <span class=\"keyword\">return</span> s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Logic-2-gt-close-far\"><a href=\"#Logic-2-gt-close-far\" class=\"headerlink\" title=\"Logic-2 &gt; close_far\"></a><a href=\"https://codingbat.com/python/Logic-2\">Logic-2</a> &gt; close_far</h2><p>Given three ints, a b c, return True if one of b or c is “close” (differing from a by at most 1), while the other is “far”, differing from both other values by 2 or more. Note: abs(num) computes the absolute value of a number.</p>\n<p>给定三个整数，a b c，如果b或c中的一个是“close”（与a相差最多1），而另一个是“far”，则返回True，与其他两个值相差2或更多则不同（返回False )。注意：abs（num）计算数字的绝对值。</p>\n<p>close_far(1, 2, 10) → True<br>close_far(1, 2, 3) → False<br>close_far(4, 1, 3) → True</p>\n<h3 id=\"Code-11\"><a href=\"#Code-11\" class=\"headerlink\" title=\"Code:\"></a>Code:</h3>"},{"layout":"post","title":"精心收集的软件激活密钥","date":"2020-07-29T01:08:38.000Z","author":"coolxy","_content":"\n## Windows \n> ### win10专业版激活密钥（32位和64位均可正常使用）：\n>>\nW269N-WFGWX-YVC9B-4J6C9-T83GX  \nVK7JG-NPHTM-C97JM-9MPGT-3V66T  \nYNMGQ-8RYV3-4PGQ3-C8XTP-7CFBY  \n2B87N-8KFHP-DKV6R-Y2C8J-PKCKT  \nWGGHN-J84D6-QYCPR-T7PJ7-X766F  \n84NGF-MHBT6-FXBX8-QWJK7-DRR8H  \nFWN7H-PF93Q-4GGP8-M8RF3-MDWWW  \nBT79Q-G7N6G-PGBYW-4YWX6-6F4BT  \nMH37W-N47XK-V7XM9-C7227-GCQG9  \nW269N-WFGWX-YVC9B-4J6C9-T83GX  \nNYW94-47Q7H-7X9TT-W7TXD-JTYPM  \nNJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87  \nJPYNJ-XTFCR-372YJ-YJJ4Q-G83YB  \nR3BYW-CBNWT-F3JTP-FM942-BTDXY  \nKTNPV-KTRK4-3RRR8-39X6W-W44T3  \n8N67H-M3CY9-QT7C4-2TR7M-TXYCV  \nCKFK9-QNGF2-D34FM-99QX3-8XC4K  \nJPYNH-XTFCR-372YJ-YJJ3Q-G83YB  \nR3BYW-CBNWT-F3JTP-FM942-BTDXY  \nNKJFK-GPHP7-G8C3J-P6JXR-HQRJR  \nNJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87   \nMH37W-N47XK-V7XM9-C7227-GCQG9  \nVK7JG-NPHTM-C97JM-9MPGT-3V66T  \nRNP9C-WY3PM-8WG94-WT8Q9-7XMPF  \nGC42Q-XHW4P-6HKVD-D3839-P6W8B  \nNJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87  \nMH37W-N47XK-V7XM9-C7227-GCQG9  \nVK7JG-NPHTM-C97JM-9MPGT-3V66T  \nX9NV3-MCH4F-M3G24-2PKR2-BTDT3  \nW269N-WFGWX-YVC9B-4J6C9-T83GX  \n\n>### Win10家庭版激活（32位和64位均可正常使用）：\n>>\nTX9XD-98N7V-6WMQ6-BX7FG-H8Q99  \n3KHY7-WNT83-DGQKR-F7HPR-844BM  \n7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH  \nPVMJN-6DFY6-9CCP6-7BKTT-D3WVR   \n\n> ###Win10教育版激活（32位和64位均可正常使用）：\n>>\nNW6C2-QMPVW-D7KKK-3GKT6-VCFB2  \n2WH4N-8QGBV-H22JP-CT43Q-MDWWJ\n\n> ### Win10企业版激活密钥（32位和64位均可正常使用）：\n>>NPPR9-FWDCX-D2C8J-H872K-2YT43  \nXGVPP-NMH47-7TTHJ-W3FW7-8HV2C  \n2F77B-TNFGY-69QQF-B8YKP-D69TJ  \nDPH2V-TTNVB-4X9Q3-TJR4H-KHJW4  \nWNMTR-4C88C-JK8YV-HQ7T2-76DF9  \nDPH2V-TTNVB-4X9Q3-TJR4H-KHJW4  \nWNMTR-4C88C-JK8YV-HQ7T2-76DF9  \nPBHCJ-Q2NYD-2PX34-T2TD6-233PK  \n\n> ### win10专业版密钥使用方法：\n>> 1、windows10安装完毕后，按键盘上的Win键+R键打开运行;\n依次输入：  \nslmgr/ipk NPPR9-FWDCX-D2C8J-H872K-2YT43  \nslmgr/skms kms.xspace.in  \nslmgr/ato  \nl b  \n\n## VMware:\n> ### VMware Workstation 16 Pro 密钥\n>\n> ZF3R0-FHED2-M80TY-8QYGC-NPKYF  \n> YF390-0HF8P-M81RQ-2DXQE-M2UT6  \n> ZF71R-DMX85-08DQY-8YMNC-PPHV8\n>\n> ### VMware Workstation 15 Pro 永久激活密钥   \n>\n> >\n> UG5J2-0ME12-M89WY-NPWXX-WQH88  \n> GA590-86Y05-4806Y-X4PEE-ZV8E0  \n> YA18K-0WY8P-H85DY-L4NZG-X7RAD  \n> UA5DR-2ZD4H-089FY-6YQ5T-YPRX6  \n> B806Y-86Y05-GA590-X4PEE-ZV8E0  \n> ZF582-0NW5N-H8D2P-0XZEE-Z22VA  \n> UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA  \n> VF750-4MX5Q-488DQ-9WZE9-ZY2D6  \n> UU54R-FVD91-488PP-7NNGC-ZFAX6  \n> YC74H-FGF92-081VZ-R5QNG-P6RY4  \n> YC34H-6WWDK-085MQ-JYPNX-NZRA2  \n> YZ718-4REEQ-08DHQ-JNYQC-ZQRD0  \n> FZ1XH-ADE4M-H89UQ-GDMNV-WV0W6  \n> VF5T0-4RW1H-H818Q-UMQEX-ZPHXA  \n> FY1N0-AJZ9N-H89KQ-EXX59-MFUED  \n> AU7TR-4RZ55-H8E3Z-XMYQC-N7ATD  \n> VV38K-DXY9J-48EZQ-ZEZ5T-QZAC0  \n\n> ### \n>\n>AU558-D0G0Q-M84HZ-UEM5E-Q3RXA  \nUV3H2-8ZX5K-M81HP-14YN9-XLRCA  \nYZ5E2-DQFE5-M8DLQ-VPPQX-NPHAA  \nVG3E0-6JX8K-480QQ-QXW5E-XKUA6  \nGC7RK-01G53-H854Q-7DWGZ-MPRZ8  \n\n>### VMware Workstation Pro 14 激活码\n>> \nFF31K-AHZD1-H8ETZ-8WWEZ-WUUVA  \nCV7T2-6WY5Q-48EWP-ZXY7X-QGUWD\n\n> ### VMware Workstation Pro 12 激活许可证\n>>\n5A02H-AU243-TZJ49-GTC7K-3C61N  \nVF5XA-FNDDJ-085GZ-4NXZ9-N20E6  \nUC5MR-8NE16-H81WY-R7QGV-QG2D8  \nZG1WH-ATY96-H80QP-X7PEX-Y30V4  \nAA3E0-0VDE1-0893Z-KGZ59-QGAVF  \n\n> ### VMware Workstation Pro 10 激活许可证\n>>\n1Z0G9-67285-FZG78-ZL3Q2-234JG  \n4C4EK-89KDL-5ZFP9-1LA5P-2A0J0  \nHY086-4T01N-CZ3U0-CV0QM-13DNU    \n\n-----\n\n## -\n\n## ","source":"_posts/2020-07-28-soft-Keys.md","raw":"---\nlayout: post\ntitle:  \"精心收集的软件激活密钥\"\ndate:   2020-07-29 09:08:38\nauthor: coolxy\ncategories: 共享\ntags: soft keys 激活密钥 序列号 激活码\n---\n\n## Windows \n> ### win10专业版激活密钥（32位和64位均可正常使用）：\n>>\nW269N-WFGWX-YVC9B-4J6C9-T83GX  \nVK7JG-NPHTM-C97JM-9MPGT-3V66T  \nYNMGQ-8RYV3-4PGQ3-C8XTP-7CFBY  \n2B87N-8KFHP-DKV6R-Y2C8J-PKCKT  \nWGGHN-J84D6-QYCPR-T7PJ7-X766F  \n84NGF-MHBT6-FXBX8-QWJK7-DRR8H  \nFWN7H-PF93Q-4GGP8-M8RF3-MDWWW  \nBT79Q-G7N6G-PGBYW-4YWX6-6F4BT  \nMH37W-N47XK-V7XM9-C7227-GCQG9  \nW269N-WFGWX-YVC9B-4J6C9-T83GX  \nNYW94-47Q7H-7X9TT-W7TXD-JTYPM  \nNJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87  \nJPYNJ-XTFCR-372YJ-YJJ4Q-G83YB  \nR3BYW-CBNWT-F3JTP-FM942-BTDXY  \nKTNPV-KTRK4-3RRR8-39X6W-W44T3  \n8N67H-M3CY9-QT7C4-2TR7M-TXYCV  \nCKFK9-QNGF2-D34FM-99QX3-8XC4K  \nJPYNH-XTFCR-372YJ-YJJ3Q-G83YB  \nR3BYW-CBNWT-F3JTP-FM942-BTDXY  \nNKJFK-GPHP7-G8C3J-P6JXR-HQRJR  \nNJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87   \nMH37W-N47XK-V7XM9-C7227-GCQG9  \nVK7JG-NPHTM-C97JM-9MPGT-3V66T  \nRNP9C-WY3PM-8WG94-WT8Q9-7XMPF  \nGC42Q-XHW4P-6HKVD-D3839-P6W8B  \nNJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87  \nMH37W-N47XK-V7XM9-C7227-GCQG9  \nVK7JG-NPHTM-C97JM-9MPGT-3V66T  \nX9NV3-MCH4F-M3G24-2PKR2-BTDT3  \nW269N-WFGWX-YVC9B-4J6C9-T83GX  \n\n>### Win10家庭版激活（32位和64位均可正常使用）：\n>>\nTX9XD-98N7V-6WMQ6-BX7FG-H8Q99  \n3KHY7-WNT83-DGQKR-F7HPR-844BM  \n7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH  \nPVMJN-6DFY6-9CCP6-7BKTT-D3WVR   \n\n> ###Win10教育版激活（32位和64位均可正常使用）：\n>>\nNW6C2-QMPVW-D7KKK-3GKT6-VCFB2  \n2WH4N-8QGBV-H22JP-CT43Q-MDWWJ\n\n> ### Win10企业版激活密钥（32位和64位均可正常使用）：\n>>NPPR9-FWDCX-D2C8J-H872K-2YT43  \nXGVPP-NMH47-7TTHJ-W3FW7-8HV2C  \n2F77B-TNFGY-69QQF-B8YKP-D69TJ  \nDPH2V-TTNVB-4X9Q3-TJR4H-KHJW4  \nWNMTR-4C88C-JK8YV-HQ7T2-76DF9  \nDPH2V-TTNVB-4X9Q3-TJR4H-KHJW4  \nWNMTR-4C88C-JK8YV-HQ7T2-76DF9  \nPBHCJ-Q2NYD-2PX34-T2TD6-233PK  \n\n> ### win10专业版密钥使用方法：\n>> 1、windows10安装完毕后，按键盘上的Win键+R键打开运行;\n依次输入：  \nslmgr/ipk NPPR9-FWDCX-D2C8J-H872K-2YT43  \nslmgr/skms kms.xspace.in  \nslmgr/ato  \nl b  \n\n## VMware:\n> ### VMware Workstation 16 Pro 密钥\n>\n> ZF3R0-FHED2-M80TY-8QYGC-NPKYF  \n> YF390-0HF8P-M81RQ-2DXQE-M2UT6  \n> ZF71R-DMX85-08DQY-8YMNC-PPHV8\n>\n> ### VMware Workstation 15 Pro 永久激活密钥   \n>\n> >\n> UG5J2-0ME12-M89WY-NPWXX-WQH88  \n> GA590-86Y05-4806Y-X4PEE-ZV8E0  \n> YA18K-0WY8P-H85DY-L4NZG-X7RAD  \n> UA5DR-2ZD4H-089FY-6YQ5T-YPRX6  \n> B806Y-86Y05-GA590-X4PEE-ZV8E0  \n> ZF582-0NW5N-H8D2P-0XZEE-Z22VA  \n> UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA  \n> VF750-4MX5Q-488DQ-9WZE9-ZY2D6  \n> UU54R-FVD91-488PP-7NNGC-ZFAX6  \n> YC74H-FGF92-081VZ-R5QNG-P6RY4  \n> YC34H-6WWDK-085MQ-JYPNX-NZRA2  \n> YZ718-4REEQ-08DHQ-JNYQC-ZQRD0  \n> FZ1XH-ADE4M-H89UQ-GDMNV-WV0W6  \n> VF5T0-4RW1H-H818Q-UMQEX-ZPHXA  \n> FY1N0-AJZ9N-H89KQ-EXX59-MFUED  \n> AU7TR-4RZ55-H8E3Z-XMYQC-N7ATD  \n> VV38K-DXY9J-48EZQ-ZEZ5T-QZAC0  \n\n> ### \n>\n>AU558-D0G0Q-M84HZ-UEM5E-Q3RXA  \nUV3H2-8ZX5K-M81HP-14YN9-XLRCA  \nYZ5E2-DQFE5-M8DLQ-VPPQX-NPHAA  \nVG3E0-6JX8K-480QQ-QXW5E-XKUA6  \nGC7RK-01G53-H854Q-7DWGZ-MPRZ8  \n\n>### VMware Workstation Pro 14 激活码\n>> \nFF31K-AHZD1-H8ETZ-8WWEZ-WUUVA  \nCV7T2-6WY5Q-48EWP-ZXY7X-QGUWD\n\n> ### VMware Workstation Pro 12 激活许可证\n>>\n5A02H-AU243-TZJ49-GTC7K-3C61N  \nVF5XA-FNDDJ-085GZ-4NXZ9-N20E6  \nUC5MR-8NE16-H81WY-R7QGV-QG2D8  \nZG1WH-ATY96-H80QP-X7PEX-Y30V4  \nAA3E0-0VDE1-0893Z-KGZ59-QGAVF  \n\n> ### VMware Workstation Pro 10 激活许可证\n>>\n1Z0G9-67285-FZG78-ZL3Q2-234JG  \n4C4EK-89KDL-5ZFP9-1LA5P-2A0J0  \nHY086-4T01N-CZ3U0-CV0QM-13DNU    \n\n-----\n\n## -\n\n## ","slug":"soft-Keys","published":1,"updated":"2021-03-04T17:03:14.835Z","_id":"cklt3r3dl000k8cw4c613ac2k","comments":1,"photos":[],"link":"","content":"<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><blockquote>\n<h3 id=\"win10专业版激活密钥（32位和64位均可正常使用）：\"><a href=\"#win10专业版激活密钥（32位和64位均可正常使用）：\" class=\"headerlink\" title=\"win10专业版激活密钥（32位和64位均可正常使用）：\"></a>win10专业版激活密钥（32位和64位均可正常使用）：</h3><blockquote>\n</blockquote>\n<p>W269N-WFGWX-YVC9B-4J6C9-T83GX<br>VK7JG-NPHTM-C97JM-9MPGT-3V66T<br>YNMGQ-8RYV3-4PGQ3-C8XTP-7CFBY<br>2B87N-8KFHP-DKV6R-Y2C8J-PKCKT<br>WGGHN-J84D6-QYCPR-T7PJ7-X766F<br>84NGF-MHBT6-FXBX8-QWJK7-DRR8H<br>FWN7H-PF93Q-4GGP8-M8RF3-MDWWW<br>BT79Q-G7N6G-PGBYW-4YWX6-6F4BT<br>MH37W-N47XK-V7XM9-C7227-GCQG9<br>W269N-WFGWX-YVC9B-4J6C9-T83GX<br>NYW94-47Q7H-7X9TT-W7TXD-JTYPM<br>NJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87<br>JPYNJ-XTFCR-372YJ-YJJ4Q-G83YB<br>R3BYW-CBNWT-F3JTP-FM942-BTDXY<br>KTNPV-KTRK4-3RRR8-39X6W-W44T3<br>8N67H-M3CY9-QT7C4-2TR7M-TXYCV<br>CKFK9-QNGF2-D34FM-99QX3-8XC4K<br>JPYNH-XTFCR-372YJ-YJJ3Q-G83YB<br>R3BYW-CBNWT-F3JTP-FM942-BTDXY<br>NKJFK-GPHP7-G8C3J-P6JXR-HQRJR<br>NJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87<br>MH37W-N47XK-V7XM9-C7227-GCQG9<br>VK7JG-NPHTM-C97JM-9MPGT-3V66T<br>RNP9C-WY3PM-8WG94-WT8Q9-7XMPF<br>GC42Q-XHW4P-6HKVD-D3839-P6W8B<br>NJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87<br>MH37W-N47XK-V7XM9-C7227-GCQG9<br>VK7JG-NPHTM-C97JM-9MPGT-3V66T<br>X9NV3-MCH4F-M3G24-2PKR2-BTDT3<br>W269N-WFGWX-YVC9B-4J6C9-T83GX  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"Win10家庭版激活（32位和64位均可正常使用）：\"><a href=\"#Win10家庭版激活（32位和64位均可正常使用）：\" class=\"headerlink\" title=\"Win10家庭版激活（32位和64位均可正常使用）：\"></a>Win10家庭版激活（32位和64位均可正常使用）：</h3><blockquote>\n</blockquote>\n<p>TX9XD-98N7V-6WMQ6-BX7FG-H8Q99<br>3KHY7-WNT83-DGQKR-F7HPR-844BM<br>7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH<br>PVMJN-6DFY6-9CCP6-7BKTT-D3WVR   </p>\n</blockquote>\n<blockquote>\n<p>###Win10教育版激活（32位和64位均可正常使用）：</p>\n<blockquote>\n</blockquote>\n<p>NW6C2-QMPVW-D7KKK-3GKT6-VCFB2<br>2WH4N-8QGBV-H22JP-CT43Q-MDWWJ</p>\n</blockquote>\n<blockquote>\n<h3 id=\"Win10企业版激活密钥（32位和64位均可正常使用）：\"><a href=\"#Win10企业版激活密钥（32位和64位均可正常使用）：\" class=\"headerlink\" title=\"Win10企业版激活密钥（32位和64位均可正常使用）：\"></a>Win10企业版激活密钥（32位和64位均可正常使用）：</h3><blockquote>\n<p>NPPR9-FWDCX-D2C8J-H872K-2YT43<br>XGVPP-NMH47-7TTHJ-W3FW7-8HV2C<br>2F77B-TNFGY-69QQF-B8YKP-D69TJ<br>DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4<br>WNMTR-4C88C-JK8YV-HQ7T2-76DF9<br>DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4<br>WNMTR-4C88C-JK8YV-HQ7T2-76DF9<br>PBHCJ-Q2NYD-2PX34-T2TD6-233PK  </p>\n</blockquote>\n</blockquote>\n<blockquote>\n<h3 id=\"win10专业版密钥使用方法：\"><a href=\"#win10专业版密钥使用方法：\" class=\"headerlink\" title=\"win10专业版密钥使用方法：\"></a>win10专业版密钥使用方法：</h3><blockquote>\n<p>1、windows10安装完毕后，按键盘上的Win键+R键打开运行;<br>依次输入：<br>slmgr/ipk NPPR9-FWDCX-D2C8J-H872K-2YT43<br>slmgr/skms kms.xspace.in<br>slmgr/ato<br>l b  </p>\n</blockquote>\n</blockquote>\n<h2 id=\"VMware\"><a href=\"#VMware\" class=\"headerlink\" title=\"VMware:\"></a>VMware:</h2><blockquote>\n<h3 id=\"VMware-Workstation-16-Pro-密钥\"><a href=\"#VMware-Workstation-16-Pro-密钥\" class=\"headerlink\" title=\"VMware Workstation 16 Pro 密钥\"></a>VMware Workstation 16 Pro 密钥</h3><p>ZF3R0-FHED2-M80TY-8QYGC-NPKYF<br>YF390-0HF8P-M81RQ-2DXQE-M2UT6<br>ZF71R-DMX85-08DQY-8YMNC-PPHV8</p>\n<h3 id=\"VMware-Workstation-15-Pro-永久激活密钥\"><a href=\"#VMware-Workstation-15-Pro-永久激活密钥\" class=\"headerlink\" title=\"VMware Workstation 15 Pro 永久激活密钥\"></a>VMware Workstation 15 Pro 永久激活密钥</h3><blockquote>\n</blockquote>\n<p>UG5J2-0ME12-M89WY-NPWXX-WQH88<br>GA590-86Y05-4806Y-X4PEE-ZV8E0<br>YA18K-0WY8P-H85DY-L4NZG-X7RAD<br>UA5DR-2ZD4H-089FY-6YQ5T-YPRX6<br>B806Y-86Y05-GA590-X4PEE-ZV8E0<br>ZF582-0NW5N-H8D2P-0XZEE-Z22VA<br>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA<br>VF750-4MX5Q-488DQ-9WZE9-ZY2D6<br>UU54R-FVD91-488PP-7NNGC-ZFAX6<br>YC74H-FGF92-081VZ-R5QNG-P6RY4<br>YC34H-6WWDK-085MQ-JYPNX-NZRA2<br>YZ718-4REEQ-08DHQ-JNYQC-ZQRD0<br>FZ1XH-ADE4M-H89UQ-GDMNV-WV0W6<br>VF5T0-4RW1H-H818Q-UMQEX-ZPHXA<br>FY1N0-AJZ9N-H89KQ-EXX59-MFUED<br>AU7TR-4RZ55-H8E3Z-XMYQC-N7ATD<br>VV38K-DXY9J-48EZQ-ZEZ5T-QZAC0  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><p>AU558-D0G0Q-M84HZ-UEM5E-Q3RXA<br>UV3H2-8ZX5K-M81HP-14YN9-XLRCA<br>YZ5E2-DQFE5-M8DLQ-VPPQX-NPHAA<br>VG3E0-6JX8K-480QQ-QXW5E-XKUA6<br>GC7RK-01G53-H854Q-7DWGZ-MPRZ8  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"VMware-Workstation-Pro-14-激活码\"><a href=\"#VMware-Workstation-Pro-14-激活码\" class=\"headerlink\" title=\"VMware Workstation Pro 14 激活码\"></a>VMware Workstation Pro 14 激活码</h3><blockquote>\n</blockquote>\n<p>FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA<br>CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD</p>\n</blockquote>\n<blockquote>\n<h3 id=\"VMware-Workstation-Pro-12-激活许可证\"><a href=\"#VMware-Workstation-Pro-12-激活许可证\" class=\"headerlink\" title=\"VMware Workstation Pro 12 激活许可证\"></a>VMware Workstation Pro 12 激活许可证</h3><blockquote>\n</blockquote>\n<p>5A02H-AU243-TZJ49-GTC7K-3C61N<br>VF5XA-FNDDJ-085GZ-4NXZ9-N20E6<br>UC5MR-8NE16-H81WY-R7QGV-QG2D8<br>ZG1WH-ATY96-H80QP-X7PEX-Y30V4<br>AA3E0-0VDE1-0893Z-KGZ59-QGAVF  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"VMware-Workstation-Pro-10-激活许可证\"><a href=\"#VMware-Workstation-Pro-10-激活许可证\" class=\"headerlink\" title=\"VMware Workstation Pro 10 激活许可证\"></a>VMware Workstation Pro 10 激活许可证</h3><blockquote>\n</blockquote>\n<p>1Z0G9-67285-FZG78-ZL3Q2-234JG<br>4C4EK-89KDL-5ZFP9-1LA5P-2A0J0<br>HY086-4T01N-CZ3U0-CV0QM-13DNU    </p>\n</blockquote>\n<hr>\n<h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"-\"></a>-</h2><h2 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><blockquote>\n<h3 id=\"win10专业版激活密钥（32位和64位均可正常使用）：\"><a href=\"#win10专业版激活密钥（32位和64位均可正常使用）：\" class=\"headerlink\" title=\"win10专业版激活密钥（32位和64位均可正常使用）：\"></a>win10专业版激活密钥（32位和64位均可正常使用）：</h3><blockquote>\n</blockquote>\n<p>W269N-WFGWX-YVC9B-4J6C9-T83GX<br>VK7JG-NPHTM-C97JM-9MPGT-3V66T<br>YNMGQ-8RYV3-4PGQ3-C8XTP-7CFBY<br>2B87N-8KFHP-DKV6R-Y2C8J-PKCKT<br>WGGHN-J84D6-QYCPR-T7PJ7-X766F<br>84NGF-MHBT6-FXBX8-QWJK7-DRR8H<br>FWN7H-PF93Q-4GGP8-M8RF3-MDWWW<br>BT79Q-G7N6G-PGBYW-4YWX6-6F4BT<br>MH37W-N47XK-V7XM9-C7227-GCQG9<br>W269N-WFGWX-YVC9B-4J6C9-T83GX<br>NYW94-47Q7H-7X9TT-W7TXD-JTYPM<br>NJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87<br>JPYNJ-XTFCR-372YJ-YJJ4Q-G83YB<br>R3BYW-CBNWT-F3JTP-FM942-BTDXY<br>KTNPV-KTRK4-3RRR8-39X6W-W44T3<br>8N67H-M3CY9-QT7C4-2TR7M-TXYCV<br>CKFK9-QNGF2-D34FM-99QX3-8XC4K<br>JPYNH-XTFCR-372YJ-YJJ3Q-G83YB<br>R3BYW-CBNWT-F3JTP-FM942-BTDXY<br>NKJFK-GPHP7-G8C3J-P6JXR-HQRJR<br>NJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87<br>MH37W-N47XK-V7XM9-C7227-GCQG9<br>VK7JG-NPHTM-C97JM-9MPGT-3V66T<br>RNP9C-WY3PM-8WG94-WT8Q9-7XMPF<br>GC42Q-XHW4P-6HKVD-D3839-P6W8B<br>NJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87<br>MH37W-N47XK-V7XM9-C7227-GCQG9<br>VK7JG-NPHTM-C97JM-9MPGT-3V66T<br>X9NV3-MCH4F-M3G24-2PKR2-BTDT3<br>W269N-WFGWX-YVC9B-4J6C9-T83GX  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"Win10家庭版激活（32位和64位均可正常使用）：\"><a href=\"#Win10家庭版激活（32位和64位均可正常使用）：\" class=\"headerlink\" title=\"Win10家庭版激活（32位和64位均可正常使用）：\"></a>Win10家庭版激活（32位和64位均可正常使用）：</h3><blockquote>\n</blockquote>\n<p>TX9XD-98N7V-6WMQ6-BX7FG-H8Q99<br>3KHY7-WNT83-DGQKR-F7HPR-844BM<br>7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH<br>PVMJN-6DFY6-9CCP6-7BKTT-D3WVR   </p>\n</blockquote>\n<blockquote>\n<p>###Win10教育版激活（32位和64位均可正常使用）：</p>\n<blockquote>\n</blockquote>\n<p>NW6C2-QMPVW-D7KKK-3GKT6-VCFB2<br>2WH4N-8QGBV-H22JP-CT43Q-MDWWJ</p>\n</blockquote>\n<blockquote>\n<h3 id=\"Win10企业版激活密钥（32位和64位均可正常使用）：\"><a href=\"#Win10企业版激活密钥（32位和64位均可正常使用）：\" class=\"headerlink\" title=\"Win10企业版激活密钥（32位和64位均可正常使用）：\"></a>Win10企业版激活密钥（32位和64位均可正常使用）：</h3><blockquote>\n<p>NPPR9-FWDCX-D2C8J-H872K-2YT43<br>XGVPP-NMH47-7TTHJ-W3FW7-8HV2C<br>2F77B-TNFGY-69QQF-B8YKP-D69TJ<br>DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4<br>WNMTR-4C88C-JK8YV-HQ7T2-76DF9<br>DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4<br>WNMTR-4C88C-JK8YV-HQ7T2-76DF9<br>PBHCJ-Q2NYD-2PX34-T2TD6-233PK  </p>\n</blockquote>\n</blockquote>\n<blockquote>\n<h3 id=\"win10专业版密钥使用方法：\"><a href=\"#win10专业版密钥使用方法：\" class=\"headerlink\" title=\"win10专业版密钥使用方法：\"></a>win10专业版密钥使用方法：</h3><blockquote>\n<p>1、windows10安装完毕后，按键盘上的Win键+R键打开运行;<br>依次输入：<br>slmgr/ipk NPPR9-FWDCX-D2C8J-H872K-2YT43<br>slmgr/skms kms.xspace.in<br>slmgr/ato<br>l b  </p>\n</blockquote>\n</blockquote>\n<h2 id=\"VMware\"><a href=\"#VMware\" class=\"headerlink\" title=\"VMware:\"></a>VMware:</h2><blockquote>\n<h3 id=\"VMware-Workstation-16-Pro-密钥\"><a href=\"#VMware-Workstation-16-Pro-密钥\" class=\"headerlink\" title=\"VMware Workstation 16 Pro 密钥\"></a>VMware Workstation 16 Pro 密钥</h3><p>ZF3R0-FHED2-M80TY-8QYGC-NPKYF<br>YF390-0HF8P-M81RQ-2DXQE-M2UT6<br>ZF71R-DMX85-08DQY-8YMNC-PPHV8</p>\n<h3 id=\"VMware-Workstation-15-Pro-永久激活密钥\"><a href=\"#VMware-Workstation-15-Pro-永久激活密钥\" class=\"headerlink\" title=\"VMware Workstation 15 Pro 永久激活密钥\"></a>VMware Workstation 15 Pro 永久激活密钥</h3><blockquote>\n</blockquote>\n<p>UG5J2-0ME12-M89WY-NPWXX-WQH88<br>GA590-86Y05-4806Y-X4PEE-ZV8E0<br>YA18K-0WY8P-H85DY-L4NZG-X7RAD<br>UA5DR-2ZD4H-089FY-6YQ5T-YPRX6<br>B806Y-86Y05-GA590-X4PEE-ZV8E0<br>ZF582-0NW5N-H8D2P-0XZEE-Z22VA<br>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA<br>VF750-4MX5Q-488DQ-9WZE9-ZY2D6<br>UU54R-FVD91-488PP-7NNGC-ZFAX6<br>YC74H-FGF92-081VZ-R5QNG-P6RY4<br>YC34H-6WWDK-085MQ-JYPNX-NZRA2<br>YZ718-4REEQ-08DHQ-JNYQC-ZQRD0<br>FZ1XH-ADE4M-H89UQ-GDMNV-WV0W6<br>VF5T0-4RW1H-H818Q-UMQEX-ZPHXA<br>FY1N0-AJZ9N-H89KQ-EXX59-MFUED<br>AU7TR-4RZ55-H8E3Z-XMYQC-N7ATD<br>VV38K-DXY9J-48EZQ-ZEZ5T-QZAC0  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><p>AU558-D0G0Q-M84HZ-UEM5E-Q3RXA<br>UV3H2-8ZX5K-M81HP-14YN9-XLRCA<br>YZ5E2-DQFE5-M8DLQ-VPPQX-NPHAA<br>VG3E0-6JX8K-480QQ-QXW5E-XKUA6<br>GC7RK-01G53-H854Q-7DWGZ-MPRZ8  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"VMware-Workstation-Pro-14-激活码\"><a href=\"#VMware-Workstation-Pro-14-激活码\" class=\"headerlink\" title=\"VMware Workstation Pro 14 激活码\"></a>VMware Workstation Pro 14 激活码</h3><blockquote>\n</blockquote>\n<p>FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA<br>CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD</p>\n</blockquote>\n<blockquote>\n<h3 id=\"VMware-Workstation-Pro-12-激活许可证\"><a href=\"#VMware-Workstation-Pro-12-激活许可证\" class=\"headerlink\" title=\"VMware Workstation Pro 12 激活许可证\"></a>VMware Workstation Pro 12 激活许可证</h3><blockquote>\n</blockquote>\n<p>5A02H-AU243-TZJ49-GTC7K-3C61N<br>VF5XA-FNDDJ-085GZ-4NXZ9-N20E6<br>UC5MR-8NE16-H81WY-R7QGV-QG2D8<br>ZG1WH-ATY96-H80QP-X7PEX-Y30V4<br>AA3E0-0VDE1-0893Z-KGZ59-QGAVF  </p>\n</blockquote>\n<blockquote>\n<h3 id=\"VMware-Workstation-Pro-10-激活许可证\"><a href=\"#VMware-Workstation-Pro-10-激活许可证\" class=\"headerlink\" title=\"VMware Workstation Pro 10 激活许可证\"></a>VMware Workstation Pro 10 激活许可证</h3><blockquote>\n</blockquote>\n<p>1Z0G9-67285-FZG78-ZL3Q2-234JG<br>4C4EK-89KDL-5ZFP9-1LA5P-2A0J0<br>HY086-4T01N-CZ3U0-CV0QM-13DNU    </p>\n</blockquote>\n<hr>\n<h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"-\"></a>-</h2><h2 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h2>"},{"layout":"post","title":"致2021年","date":"2020-11-05T10:58:58.000Z","author":"coolxy","_content":"\n## 致即将到来的2021年\n也许有一天，我会回顾我的一生，肯定会对2020年有最深切的体会。  \n2020年春节前后，一场突如其来的新冠疫情肺炎席卷全球，中国首发之下，一片恐慌，全国开启居家模式，前后数月，居家的人们得益于互联网的发达，让大家在家能安心度过这个不平凡的时期。其中一天增数达万五，多少家庭支离破碎，更让人觉得人生难得，在国家的全力开动中，至年中，疫情基本平复。  \n然，境外形势日趋严峻，现已半亿，更觉生而为华夏，心生傲然。  \n\n我常常用“静坐常思已过，闲谈莫论人非”来勉励自己，背后不说别人，因为“谁人背后无人说，谁人背后不说人”。我也坚持做到了许多年，基本背后不说人，别人经过磨砺，那是越来越圆，越来越滑，但已过而立之年的我，反而越来越针锋相对。所以我常说，别人是滚着走的，像鹅卵石，我是平着走，像磨刀，所以越来越砺，但这往往是吃亏的前因。我也常常反省，为什么会这样，也许是被压抑这么多年突然暴发的结果吧。曾经的老师说过，人就像弹簧，可张可弛，但承受压力也有极限，一但弹簧断裂，反弹的结果会非常恐怖，伤着自己的同时，也更容易伤着别人，所以不自觉之间，更喜欢倾诉了，什么问题都会往外说，有一种不吐不快的郁结，因为我也怕会有压不住自己的时候。\n\n有时候会玩笑说，本命之年难处多多，可不是本命之年，却也胜似本命之年。那些不愉快，不高兴的事，就让它随风而逝吧！\n\n我们要以最高的热情，迎接新的时代，新的年份，新的心情，新的工作氛围。\n有个同事说，改朝换代了。\n\n我们会更好吗？？？？？？只能拭目以待。\n","source":"_posts/2020-11-06-to-2021.md","raw":"---\nlayout: post\ntitle:  \"致2021年\"\ndate:   2020-11-05 18:58:58\nauthor: coolxy\ncategories: 生活随笔\n---\n\n## 致即将到来的2021年\n也许有一天，我会回顾我的一生，肯定会对2020年有最深切的体会。  \n2020年春节前后，一场突如其来的新冠疫情肺炎席卷全球，中国首发之下，一片恐慌，全国开启居家模式，前后数月，居家的人们得益于互联网的发达，让大家在家能安心度过这个不平凡的时期。其中一天增数达万五，多少家庭支离破碎，更让人觉得人生难得，在国家的全力开动中，至年中，疫情基本平复。  \n然，境外形势日趋严峻，现已半亿，更觉生而为华夏，心生傲然。  \n\n我常常用“静坐常思已过，闲谈莫论人非”来勉励自己，背后不说别人，因为“谁人背后无人说，谁人背后不说人”。我也坚持做到了许多年，基本背后不说人，别人经过磨砺，那是越来越圆，越来越滑，但已过而立之年的我，反而越来越针锋相对。所以我常说，别人是滚着走的，像鹅卵石，我是平着走，像磨刀，所以越来越砺，但这往往是吃亏的前因。我也常常反省，为什么会这样，也许是被压抑这么多年突然暴发的结果吧。曾经的老师说过，人就像弹簧，可张可弛，但承受压力也有极限，一但弹簧断裂，反弹的结果会非常恐怖，伤着自己的同时，也更容易伤着别人，所以不自觉之间，更喜欢倾诉了，什么问题都会往外说，有一种不吐不快的郁结，因为我也怕会有压不住自己的时候。\n\n有时候会玩笑说，本命之年难处多多，可不是本命之年，却也胜似本命之年。那些不愉快，不高兴的事，就让它随风而逝吧！\n\n我们要以最高的热情，迎接新的时代，新的年份，新的心情，新的工作氛围。\n有个同事说，改朝换代了。\n\n我们会更好吗？？？？？？只能拭目以待。\n","slug":"to-2021","published":1,"updated":"2021-03-04T17:02:37.370Z","_id":"cklt3r3dn000n8cw46rot56gu","comments":1,"photos":[],"link":"","content":"<h2 id=\"致即将到来的2021年\"><a href=\"#致即将到来的2021年\" class=\"headerlink\" title=\"致即将到来的2021年\"></a>致即将到来的2021年</h2><p>也许有一天，我会回顾我的一生，肯定会对2020年有最深切的体会。<br>2020年春节前后，一场突如其来的新冠疫情肺炎席卷全球，中国首发之下，一片恐慌，全国开启居家模式，前后数月，居家的人们得益于互联网的发达，让大家在家能安心度过这个不平凡的时期。其中一天增数达万五，多少家庭支离破碎，更让人觉得人生难得，在国家的全力开动中，至年中，疫情基本平复。<br>然，境外形势日趋严峻，现已半亿，更觉生而为华夏，心生傲然。  </p>\n<p>我常常用“静坐常思已过，闲谈莫论人非”来勉励自己，背后不说别人，因为“谁人背后无人说，谁人背后不说人”。我也坚持做到了许多年，基本背后不说人，别人经过磨砺，那是越来越圆，越来越滑，但已过而立之年的我，反而越来越针锋相对。所以我常说，别人是滚着走的，像鹅卵石，我是平着走，像磨刀，所以越来越砺，但这往往是吃亏的前因。我也常常反省，为什么会这样，也许是被压抑这么多年突然暴发的结果吧。曾经的老师说过，人就像弹簧，可张可弛，但承受压力也有极限，一但弹簧断裂，反弹的结果会非常恐怖，伤着自己的同时，也更容易伤着别人，所以不自觉之间，更喜欢倾诉了，什么问题都会往外说，有一种不吐不快的郁结，因为我也怕会有压不住自己的时候。</p>\n<p>有时候会玩笑说，本命之年难处多多，可不是本命之年，却也胜似本命之年。那些不愉快，不高兴的事，就让它随风而逝吧！</p>\n<p>我们要以最高的热情，迎接新的时代，新的年份，新的心情，新的工作氛围。<br>有个同事说，改朝换代了。</p>\n<p>我们会更好吗？？？？？？只能拭目以待。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"致即将到来的2021年\"><a href=\"#致即将到来的2021年\" class=\"headerlink\" title=\"致即将到来的2021年\"></a>致即将到来的2021年</h2><p>也许有一天，我会回顾我的一生，肯定会对2020年有最深切的体会。<br>2020年春节前后，一场突如其来的新冠疫情肺炎席卷全球，中国首发之下，一片恐慌，全国开启居家模式，前后数月，居家的人们得益于互联网的发达，让大家在家能安心度过这个不平凡的时期。其中一天增数达万五，多少家庭支离破碎，更让人觉得人生难得，在国家的全力开动中，至年中，疫情基本平复。<br>然，境外形势日趋严峻，现已半亿，更觉生而为华夏，心生傲然。  </p>\n<p>我常常用“静坐常思已过，闲谈莫论人非”来勉励自己，背后不说别人，因为“谁人背后无人说，谁人背后不说人”。我也坚持做到了许多年，基本背后不说人，别人经过磨砺，那是越来越圆，越来越滑，但已过而立之年的我，反而越来越针锋相对。所以我常说，别人是滚着走的，像鹅卵石，我是平着走，像磨刀，所以越来越砺，但这往往是吃亏的前因。我也常常反省，为什么会这样，也许是被压抑这么多年突然暴发的结果吧。曾经的老师说过，人就像弹簧，可张可弛，但承受压力也有极限，一但弹簧断裂，反弹的结果会非常恐怖，伤着自己的同时，也更容易伤着别人，所以不自觉之间，更喜欢倾诉了，什么问题都会往外说，有一种不吐不快的郁结，因为我也怕会有压不住自己的时候。</p>\n<p>有时候会玩笑说，本命之年难处多多，可不是本命之年，却也胜似本命之年。那些不愉快，不高兴的事，就让它随风而逝吧！</p>\n<p>我们要以最高的热情，迎接新的时代，新的年份，新的心情，新的工作氛围。<br>有个同事说，改朝换代了。</p>\n<p>我们会更好吗？？？？？？只能拭目以待。</p>\n"},{"layout":"post","title":"热爱生活，抛弃过去","date":"2020-11-26T11:58:58.000Z","author":"coolxy","_content":"\n## 热爱生活、抛弃过去\n\n\n\n我常常在想，生命的意义究竟是什么，我们为什么存在？\n\n在漫长的时间长河中，在浩瀚的宇宙中，我们的出现只不过是一个极其微不足道的偶然。\n\n...............","source":"_posts/2020-11-26-love-live.md","raw":"---\nlayout: post\ntitle:  \"热爱生活，抛弃过去\"\ndate:   2020-11-26 19:58:58\nauthor: coolxy\ncategories: \n  - 生活随笔\n---\n\n## 热爱生活、抛弃过去\n\n\n\n我常常在想，生命的意义究竟是什么，我们为什么存在？\n\n在漫长的时间长河中，在浩瀚的宇宙中，我们的出现只不过是一个极其微不足道的偶然。\n\n...............","slug":"love-live","published":1,"updated":"2021-03-04T17:02:19.511Z","_id":"cklt3r3dp000q8cw4dy6nf1x7","comments":1,"photos":[],"link":"","content":"<h2 id=\"热爱生活、抛弃过去\"><a href=\"#热爱生活、抛弃过去\" class=\"headerlink\" title=\"热爱生活、抛弃过去\"></a>热爱生活、抛弃过去</h2><p>我常常在想，生命的意义究竟是什么，我们为什么存在？</p>\n<p>在漫长的时间长河中，在浩瀚的宇宙中，我们的出现只不过是一个极其微不足道的偶然。</p>\n<p>……………</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"热爱生活、抛弃过去\"><a href=\"#热爱生活、抛弃过去\" class=\"headerlink\" title=\"热爱生活、抛弃过去\"></a>热爱生活、抛弃过去</h2><p>我常常在想，生命的意义究竟是什么，我们为什么存在？</p>\n<p>在漫长的时间长河中，在浩瀚的宇宙中，我们的出现只不过是一个极其微不足道的偶然。</p>\n<p>……………</p>\n"},{"layout":"post","title":"天龙八部版本库","date":"2021-01-26T11:58:58.000Z","author":"coolxy","_content":"\n\n\n## 天龙八部 - 客户端免密钥启动程序\n\n简介（摘自“90航行者”：http://90hxz.com/tool/tlbb/index.html）:\n\n​     该工具可以免密启动游戏,去除一些TLBB客户端的限制.\n\n​     特色:  免付费,直接启动,与原版登录器功能一致!\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n\n\n**下载软件**\n\n下载地址:    [百度网盘 - 访问密码:vxwu](https://pan.baidu.com/s/16Ij4--90F3AXgtgj5-0o5A)\n\n软件MD5值:  87edaa88b0c2f348b203a31b0d79baa3\n\n查毒链接:    [腾讯哈勃分析系统](https://habo.qq.com/file/showdetail?pk=ADQGb11kB2QIPFs6U2A%3D)\n\n软件简介:    \n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n\n\n**更新日期**\n\n**2019-05-21 V1.0.6.2添加滚动特效,支持万象归一②**\n\n**2019-03-27 V1.0.5.1修复登录器界面,添加支持**\n\n**2019-02-24 V1.0.3.1版本发布,暂时支持少部分游戏客户端.**\n\n**2019-02-01 全新界面,全新功能,支持更多客户端解码.支持在线校验.**\n\n**2019-01-01 添加其它天龙八部客户端解码资源.**\n\n**2018-12-12 更新其界面,添加软件更新校验.**\n\n**2018-08-01 测试版发布,支持随时启动游戏客户端.**\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n\n\n**天龙八部版本库**\n\n百花齐放6\n\n虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao\n\n下载地址:[百度网盘 - 访问密码:ifcd](https://pan.baidu.com/s/1GkJ5wDlTgauyAu-2qx0y3Q)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n百花齐放7\n\n虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao\n\n下载地址:[百度网盘 - 访问密码:4ijs](https://pan.baidu.com/s/1sqfY7naQCv0L_LAKXsfh1w)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n百花齐放8\n\n虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao\n\n下载地址:[百度网盘](https://pan.baidu.com/s/1sdaLyCM3eTCBSYfqiL5cNw)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n极限复古1\n\n虚拟机密码:maomao1314520 mysql密码:maomao520\n\n下载地址:[百度网盘 - 访问密码:yab4](https://pan.baidu.com/s/1cHCWMM4J2hu7kgSU3bFm9A)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n紫金天龙复古版\n\n虚拟机密码:xiezi123 GM工具密码:123456 mysql密码:xiezi321\n\n下载地址:[百度网盘 - 访问密码:ab5k](https://pan.baidu.com/s/1NAYuf1-QaET-2oqqpzXjJA)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n千古豪情2假人端\n\n虚拟机密码: GM工具密码: mysql密码:\n\n下载地址:[百度网盘 - 访问密码:undx](https://pan.baidu.com/s/1HcwgtflTJOesXCYon28ecQ)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n万象归一 - 去后门版\n\n虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao\n\n下载地址:[百度网盘 - 访问密码:ud4u](https://pan.baidu.com/s/1y5NOqmryZxsKRZ1ac1B9Ng)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n烈火金针\n\n\n\n下载地址:[百度网盘 - 访问密码:eq1l](https://pan.baidu.com/s/1hs3GesG)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n万象归一 ②\n\n\n\n下载地址:[百度网盘 - 访问密码:x5mb](https://pan.baidu.com/s/12iX5rddwv-ydtxPhGtRbcQ)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n万象归一 2.1\n\nGM工具密码:2019wxgy741\n\n下载地址:[百度网盘 - 访问密码:9qhs](https://pan.baidu.com/s/1sBbrhNv2tFGh1-YfPo27jQ)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n\n\n\n\n—— 90航行者","source":"_posts/2021-01-26-tlbb.md","raw":"---\nlayout: post\ntitle:  \"天龙八部版本库\"\ndate:   2021-01-26 19:58:58\nauthor: coolxy\ncategories: \n  - 游戏人生\n  - 天龙八部\n---\n\n\n\n## 天龙八部 - 客户端免密钥启动程序\n\n简介（摘自“90航行者”：http://90hxz.com/tool/tlbb/index.html）:\n\n​     该工具可以免密启动游戏,去除一些TLBB客户端的限制.\n\n​     特色:  免付费,直接启动,与原版登录器功能一致!\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n\n\n**下载软件**\n\n下载地址:    [百度网盘 - 访问密码:vxwu](https://pan.baidu.com/s/16Ij4--90F3AXgtgj5-0o5A)\n\n软件MD5值:  87edaa88b0c2f348b203a31b0d79baa3\n\n查毒链接:    [腾讯哈勃分析系统](https://habo.qq.com/file/showdetail?pk=ADQGb11kB2QIPFs6U2A%3D)\n\n软件简介:    \n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n\n\n**更新日期**\n\n**2019-05-21 V1.0.6.2添加滚动特效,支持万象归一②**\n\n**2019-03-27 V1.0.5.1修复登录器界面,添加支持**\n\n**2019-02-24 V1.0.3.1版本发布,暂时支持少部分游戏客户端.**\n\n**2019-02-01 全新界面,全新功能,支持更多客户端解码.支持在线校验.**\n\n**2019-01-01 添加其它天龙八部客户端解码资源.**\n\n**2018-12-12 更新其界面,添加软件更新校验.**\n\n**2018-08-01 测试版发布,支持随时启动游戏客户端.**\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n\n\n**天龙八部版本库**\n\n百花齐放6\n\n虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao\n\n下载地址:[百度网盘 - 访问密码:ifcd](https://pan.baidu.com/s/1GkJ5wDlTgauyAu-2qx0y3Q)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n百花齐放7\n\n虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao\n\n下载地址:[百度网盘 - 访问密码:4ijs](https://pan.baidu.com/s/1sqfY7naQCv0L_LAKXsfh1w)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n百花齐放8\n\n虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao\n\n下载地址:[百度网盘](https://pan.baidu.com/s/1sdaLyCM3eTCBSYfqiL5cNw)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n极限复古1\n\n虚拟机密码:maomao1314520 mysql密码:maomao520\n\n下载地址:[百度网盘 - 访问密码:yab4](https://pan.baidu.com/s/1cHCWMM4J2hu7kgSU3bFm9A)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n紫金天龙复古版\n\n虚拟机密码:xiezi123 GM工具密码:123456 mysql密码:xiezi321\n\n下载地址:[百度网盘 - 访问密码:ab5k](https://pan.baidu.com/s/1NAYuf1-QaET-2oqqpzXjJA)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n千古豪情2假人端\n\n虚拟机密码: GM工具密码: mysql密码:\n\n下载地址:[百度网盘 - 访问密码:undx](https://pan.baidu.com/s/1HcwgtflTJOesXCYon28ecQ)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n万象归一 - 去后门版\n\n虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao\n\n下载地址:[百度网盘 - 访问密码:ud4u](https://pan.baidu.com/s/1y5NOqmryZxsKRZ1ac1B9Ng)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n烈火金针\n\n\n\n下载地址:[百度网盘 - 访问密码:eq1l](https://pan.baidu.com/s/1hs3GesG)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n万象归一 ②\n\n\n\n下载地址:[百度网盘 - 访问密码:x5mb](https://pan.baidu.com/s/12iX5rddwv-ydtxPhGtRbcQ)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n万象归一 2.1\n\nGM工具密码:2019wxgy741\n\n下载地址:[百度网盘 - 访问密码:9qhs](https://pan.baidu.com/s/1sBbrhNv2tFGh1-YfPo27jQ)\n\n\n\n\\-------------------------------------------------------------------------------------------------\n\n\n\n\n\n—— 90航行者","slug":"tlbb","published":1,"updated":"2021-03-04T17:00:58.727Z","_id":"cklt3r3ds000s8cw453ns10yp","comments":1,"photos":[],"link":"","content":"<h2 id=\"天龙八部-客户端免密钥启动程序\"><a href=\"#天龙八部-客户端免密钥启动程序\" class=\"headerlink\" title=\"天龙八部 - 客户端免密钥启动程序\"></a>天龙八部 - 客户端免密钥启动程序</h2><p>简介（摘自“90航行者”：<a href=\"http://90hxz.com/tool/tlbb/index.html%EF%BC%89\">http://90hxz.com/tool/tlbb/index.html）</a>:</p>\n<p>​     该工具可以免密启动游戏,去除一些TLBB客户端的限制.</p>\n<p>​     特色:  免付费,直接启动,与原版登录器功能一致!</p>\n<p>-————————————————————————————————</p>\n<p><strong>下载软件</strong></p>\n<p>下载地址:    <a href=\"https://pan.baidu.com/s/16Ij4--90F3AXgtgj5-0o5A\">百度网盘 - 访问密码:vxwu</a></p>\n<p>软件MD5值:  87edaa88b0c2f348b203a31b0d79baa3</p>\n<p>查毒链接:    <a href=\"https://habo.qq.com/file/showdetail?pk=ADQGb11kB2QIPFs6U2A=\">腾讯哈勃分析系统</a></p>\n<p>软件简介:    </p>\n<p>-————————————————————————————————</p>\n<p><strong>更新日期</strong></p>\n<p><strong>2019-05-21 V1.0.6.2添加滚动特效,支持万象归一②</strong></p>\n<p><strong>2019-03-27 V1.0.5.1修复登录器界面,添加支持</strong></p>\n<p><strong>2019-02-24 V1.0.3.1版本发布,暂时支持少部分游戏客户端.</strong></p>\n<p><strong>2019-02-01 全新界面,全新功能,支持更多客户端解码.支持在线校验.</strong></p>\n<p><strong>2019-01-01 添加其它天龙八部客户端解码资源.</strong></p>\n<p><strong>2018-12-12 更新其界面,添加软件更新校验.</strong></p>\n<p><strong>2018-08-01 测试版发布,支持随时启动游戏客户端.</strong></p>\n<p>-————————————————————————————————</p>\n<p><strong>天龙八部版本库</strong></p>\n<p>百花齐放6</p>\n<p>虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1GkJ5wDlTgauyAu-2qx0y3Q\">百度网盘 - 访问密码:ifcd</a></p>\n<p>-————————————————————————————————</p>\n<p>百花齐放7</p>\n<p>虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1sqfY7naQCv0L_LAKXsfh1w\">百度网盘 - 访问密码:4ijs</a></p>\n<p>-————————————————————————————————</p>\n<p>百花齐放8</p>\n<p>虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1sdaLyCM3eTCBSYfqiL5cNw\">百度网盘</a></p>\n<p>-————————————————————————————————</p>\n<p>极限复古1</p>\n<p>虚拟机密码:maomao1314520 mysql密码:maomao520</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1cHCWMM4J2hu7kgSU3bFm9A\">百度网盘 - 访问密码:yab4</a></p>\n<p>-————————————————————————————————</p>\n<p>紫金天龙复古版</p>\n<p>虚拟机密码:xiezi123 GM工具密码:123456 mysql密码:xiezi321</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1NAYuf1-QaET-2oqqpzXjJA\">百度网盘 - 访问密码:ab5k</a></p>\n<p>-————————————————————————————————</p>\n<p>千古豪情2假人端</p>\n<p>虚拟机密码: GM工具密码: mysql密码:</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1HcwgtflTJOesXCYon28ecQ\">百度网盘 - 访问密码:undx</a></p>\n<p>-————————————————————————————————</p>\n<p>万象归一 - 去后门版</p>\n<p>虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1y5NOqmryZxsKRZ1ac1B9Ng\">百度网盘 - 访问密码:ud4u</a></p>\n<p>-————————————————————————————————</p>\n<p>烈火金针</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1hs3GesG\">百度网盘 - 访问密码:eq1l</a></p>\n<p>-————————————————————————————————</p>\n<p>万象归一 ②</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/12iX5rddwv-ydtxPhGtRbcQ\">百度网盘 - 访问密码:x5mb</a></p>\n<p>-————————————————————————————————</p>\n<p>万象归一 2.1</p>\n<p>GM工具密码:2019wxgy741</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1sBbrhNv2tFGh1-YfPo27jQ\">百度网盘 - 访问密码:9qhs</a></p>\n<p>-————————————————————————————————</p>\n<p>—— 90航行者</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"天龙八部-客户端免密钥启动程序\"><a href=\"#天龙八部-客户端免密钥启动程序\" class=\"headerlink\" title=\"天龙八部 - 客户端免密钥启动程序\"></a>天龙八部 - 客户端免密钥启动程序</h2><p>简介（摘自“90航行者”：<a href=\"http://90hxz.com/tool/tlbb/index.html%EF%BC%89\">http://90hxz.com/tool/tlbb/index.html）</a>:</p>\n<p>​     该工具可以免密启动游戏,去除一些TLBB客户端的限制.</p>\n<p>​     特色:  免付费,直接启动,与原版登录器功能一致!</p>\n<p>-————————————————————————————————</p>\n<p><strong>下载软件</strong></p>\n<p>下载地址:    <a href=\"https://pan.baidu.com/s/16Ij4--90F3AXgtgj5-0o5A\">百度网盘 - 访问密码:vxwu</a></p>\n<p>软件MD5值:  87edaa88b0c2f348b203a31b0d79baa3</p>\n<p>查毒链接:    <a href=\"https://habo.qq.com/file/showdetail?pk=ADQGb11kB2QIPFs6U2A=\">腾讯哈勃分析系统</a></p>\n<p>软件简介:    </p>\n<p>-————————————————————————————————</p>\n<p><strong>更新日期</strong></p>\n<p><strong>2019-05-21 V1.0.6.2添加滚动特效,支持万象归一②</strong></p>\n<p><strong>2019-03-27 V1.0.5.1修复登录器界面,添加支持</strong></p>\n<p><strong>2019-02-24 V1.0.3.1版本发布,暂时支持少部分游戏客户端.</strong></p>\n<p><strong>2019-02-01 全新界面,全新功能,支持更多客户端解码.支持在线校验.</strong></p>\n<p><strong>2019-01-01 添加其它天龙八部客户端解码资源.</strong></p>\n<p><strong>2018-12-12 更新其界面,添加软件更新校验.</strong></p>\n<p><strong>2018-08-01 测试版发布,支持随时启动游戏客户端.</strong></p>\n<p>-————————————————————————————————</p>\n<p><strong>天龙八部版本库</strong></p>\n<p>百花齐放6</p>\n<p>虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1GkJ5wDlTgauyAu-2qx0y3Q\">百度网盘 - 访问密码:ifcd</a></p>\n<p>-————————————————————————————————</p>\n<p>百花齐放7</p>\n<p>虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1sqfY7naQCv0L_LAKXsfh1w\">百度网盘 - 访问密码:4ijs</a></p>\n<p>-————————————————————————————————</p>\n<p>百花齐放8</p>\n<p>虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1sdaLyCM3eTCBSYfqiL5cNw\">百度网盘</a></p>\n<p>-————————————————————————————————</p>\n<p>极限复古1</p>\n<p>虚拟机密码:maomao1314520 mysql密码:maomao520</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1cHCWMM4J2hu7kgSU3bFm9A\">百度网盘 - 访问密码:yab4</a></p>\n<p>-————————————————————————————————</p>\n<p>紫金天龙复古版</p>\n<p>虚拟机密码:xiezi123 GM工具密码:123456 mysql密码:xiezi321</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1NAYuf1-QaET-2oqqpzXjJA\">百度网盘 - 访问密码:ab5k</a></p>\n<p>-————————————————————————————————</p>\n<p>千古豪情2假人端</p>\n<p>虚拟机密码: GM工具密码: mysql密码:</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1HcwgtflTJOesXCYon28ecQ\">百度网盘 - 访问密码:undx</a></p>\n<p>-————————————————————————————————</p>\n<p>万象归一 - 去后门版</p>\n<p>虚拟机密码:maomao7878 GM工具密码:445566 mysql密码:xiaomaomao</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1y5NOqmryZxsKRZ1ac1B9Ng\">百度网盘 - 访问密码:ud4u</a></p>\n<p>-————————————————————————————————</p>\n<p>烈火金针</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1hs3GesG\">百度网盘 - 访问密码:eq1l</a></p>\n<p>-————————————————————————————————</p>\n<p>万象归一 ②</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/12iX5rddwv-ydtxPhGtRbcQ\">百度网盘 - 访问密码:x5mb</a></p>\n<p>-————————————————————————————————</p>\n<p>万象归一 2.1</p>\n<p>GM工具密码:2019wxgy741</p>\n<p>下载地址:<a href=\"https://pan.baidu.com/s/1sBbrhNv2tFGh1-YfPo27jQ\">百度网盘 - 访问密码:9qhs</a></p>\n<p>-————————————————————————————————</p>\n<p>—— 90航行者</p>\n"},{"layout":"post","title":"TLBB server LIST","date":"2021-02-26T11:58:58.000Z","author":"coolxy","_content":"\n\n\n\n\nTLBB list\n\n\n\n#kaishi#V1Igri9pIgoo1hPjaupoYlIuLo94t4r082bePgjoKaUg3jYac8y2t4Sgko1lSg0j1lIgUoFaSg2jxpT5Y9HwZr1iUkssXiPk0zQi3pHrS9P3nwOrD9Fw1sV9P3HrD9KwBrG1Z3M5X1V3BrZ9FwI5Q9AwOrS9Mw0sS1CwOrH93pL5J1G3F5J13pHrS9S1nwOrD9Fw1sV9P3HrD9KwBrZ1G3K5F1Z3Bre193Gzgi2kGzMi2kEzYiApGz4gcoY4D8WqCe0uIjaaKaUg3jYa0uAqReK8O2YeF8SqUeV8MqU4L8SqLe0uH2J4D0J2L40uAqReK8O2YeF8SqUeV8MqU4L8SqJqVeF0G2J4L0F2VeD8WqCeA0mqPeF8Dq0aB8O2GeF8JqVeF0G2J4L0L2Ver082beIg8o5aPg5jdpYzJstiFkAsgivw85w1Dkas4hDk3z4hOkWsOiDk1zliA3IrD9nwErS9P3J5S1D3BrUhLp9sUhvpxsOh4kgsBrD1V3Z5S1G3H5C1P3J5S1D3BrD1H3K5Z1F3BrD1V3Z5S1G3H5C1P3J5S1D3BrD1H3K5Z1D3BrD1V3F3I5D1K3M5A0H2U4H02oK4D0G2G4J02o94q0Fjsa5gFj2l5gPjQaPuFj0lzuS2UeF8mqReA8O2K4A0F0Z2VeIgZo8aIgbocaPg5jha0uH2M4G0O2K4L0V2U4F0O2K4K02oK4D0G2G4G02oK4C0D2U4F0J2N4U4F0O2K4K02oK4D0G2G4H02oG3N5H1P3J5Z1B3I5D1P3J5J13pJ5F1H3H5K13p85w1t3y5e193TzhiXiPk0zQi0wX5D1t3y5Uh9p4sOh4kgsPhVposShDpasN10wJ5e19385w1X3EzIi5pRzMiepGzdi3kYzpiTit3y5ShEpQsIh1k8sUhmpCsUhnp9sN10w85q0y2t4AgRoWaUg0j9aOgkouaSgOoeaPgEo9aM01q94t4r082TlNu0jTleuioRlGuxoYl3gfoC4M0OqGeL8Jq0eS0P2Tem8PqneZ8O2YeF8Fq94q0y2t4Og0j0jTleuioGlGuNoRlbuzoC4M0OqGeL8Jq0eS0P2Tem8PqneZ8O2YeOrA9t3y5e193YzkiZpYzeiepYzrsqiOkesji0wX5I9CwHrH9C3U5A1mwErU9YwGrS1nwOrA9t3y5e193Ez8iqpEz5i5kEzbiZpEzvi7p0wX5I9CwHrH9C3U5A1mwErU9YwGrS1nwOrA9t3y5e193YzMi1kYzriupEz8iHpEzaieoC4M0OqGeL8G8X2I4S0nqReI8TqHeA0mqPeS8y2t4r082TlNu0jTleuioRlGuQoTlvupofep81qC4U8XqGeG8X2I4S0Q8WqSeE8CqU4W8SqIer08294q0Pj1lSuUjraBuUjdaMuIjQa0gPjgaiu1qC4Sgko1lSg0j1lIgUoFaDk1zliJ3G5L1t3y5e193EzsiDpTzhiSpEzwiqpYzii5pX5N1H385w1t3y5Uh9p4sAh4pFsAh7pusUhiiMpX5N1H385w1t3y5UhJpFsOhmpusSh8pHsShMpGsUhrpYsShEp9sN10wJ5e1938582EzJpAoYlnoyoUk0hwpGzzivpEzyiEoGlWu6oC4M0H294q0y2t4IgdoeaOgqoyaPgMo4aSgxocaAgCocaSgloyaM01qH294q0y2t4#jiewei#\n","source":"_posts/2021-02-26-tllist.md","raw":"---\nlayout: post\ntitle:  \"TLBB server LIST\"\ndate:   2021-02-26 19:58:58\nauthor: coolxy\ncategories: \n  - 游戏人生\n  - 天龙八部\n---\n\n\n\n\n\nTLBB list\n\n\n\n#kaishi#V1Igri9pIgoo1hPjaupoYlIuLo94t4r082bePgjoKaUg3jYac8y2t4Sgko1lSg0j1lIgUoFaSg2jxpT5Y9HwZr1iUkssXiPk0zQi3pHrS9P3nwOrD9Fw1sV9P3HrD9KwBrG1Z3M5X1V3BrZ9FwI5Q9AwOrS9Mw0sS1CwOrH93pL5J1G3F5J13pHrS9S1nwOrD9Fw1sV9P3HrD9KwBrZ1G3K5F1Z3Bre193Gzgi2kGzMi2kEzYiApGz4gcoY4D8WqCe0uIjaaKaUg3jYa0uAqReK8O2YeF8SqUeV8MqU4L8SqLe0uH2J4D0J2L40uAqReK8O2YeF8SqUeV8MqU4L8SqJqVeF0G2J4L0F2VeD8WqCeA0mqPeF8Dq0aB8O2GeF8JqVeF0G2J4L0L2Ver082beIg8o5aPg5jdpYzJstiFkAsgivw85w1Dkas4hDk3z4hOkWsOiDk1zliA3IrD9nwErS9P3J5S1D3BrUhLp9sUhvpxsOh4kgsBrD1V3Z5S1G3H5C1P3J5S1D3BrD1H3K5Z1F3BrD1V3Z5S1G3H5C1P3J5S1D3BrD1H3K5Z1D3BrD1V3F3I5D1K3M5A0H2U4H02oK4D0G2G4J02o94q0Fjsa5gFj2l5gPjQaPuFj0lzuS2UeF8mqReA8O2K4A0F0Z2VeIgZo8aIgbocaPg5jha0uH2M4G0O2K4L0V2U4F0O2K4K02oK4D0G2G4G02oK4C0D2U4F0J2N4U4F0O2K4K02oK4D0G2G4H02oG3N5H1P3J5Z1B3I5D1P3J5J13pJ5F1H3H5K13p85w1t3y5e193TzhiXiPk0zQi0wX5D1t3y5Uh9p4sOh4kgsPhVposShDpasN10wJ5e19385w1X3EzIi5pRzMiepGzdi3kYzpiTit3y5ShEpQsIh1k8sUhmpCsUhnp9sN10w85q0y2t4AgRoWaUg0j9aOgkouaSgOoeaPgEo9aM01q94t4r082TlNu0jTleuioRlGuxoYl3gfoC4M0OqGeL8Jq0eS0P2Tem8PqneZ8O2YeF8Fq94q0y2t4Og0j0jTleuioGlGuNoRlbuzoC4M0OqGeL8Jq0eS0P2Tem8PqneZ8O2YeOrA9t3y5e193YzkiZpYzeiepYzrsqiOkesji0wX5I9CwHrH9C3U5A1mwErU9YwGrS1nwOrA9t3y5e193Ez8iqpEz5i5kEzbiZpEzvi7p0wX5I9CwHrH9C3U5A1mwErU9YwGrS1nwOrA9t3y5e193YzMi1kYzriupEz8iHpEzaieoC4M0OqGeL8G8X2I4S0nqReI8TqHeA0mqPeS8y2t4r082TlNu0jTleuioRlGuQoTlvupofep81qC4U8XqGeG8X2I4S0Q8WqSeE8CqU4W8SqIer08294q0Pj1lSuUjraBuUjdaMuIjQa0gPjgaiu1qC4Sgko1lSg0j1lIgUoFaDk1zliJ3G5L1t3y5e193EzsiDpTzhiSpEzwiqpYzii5pX5N1H385w1t3y5Uh9p4sAh4pFsAh7pusUhiiMpX5N1H385w1t3y5UhJpFsOhmpusSh8pHsShMpGsUhrpYsShEp9sN10wJ5e1938582EzJpAoYlnoyoUk0hwpGzzivpEzyiEoGlWu6oC4M0H294q0y2t4IgdoeaOgqoyaPgMo4aSgxocaAgCocaSgloyaM01qH294q0y2t4#jiewei#\n","slug":"tllist","published":1,"updated":"2021-03-04T17:01:37.404Z","_id":"cklt3r3dt000x8cw4ehep8g7s","comments":1,"photos":[],"link":"","content":"<p>TLBB list</p>\n<p>#kaishi#V1Igri9pIgoo1hPjaupoYlIuLo94t4r082bePgjoKaUg3jYac8y2t4Sgko1lSg0j1lIgUoFaSg2jxpT5Y9HwZr1iUkssXiPk0zQi3pHrS9P3nwOrD9Fw1sV9P3HrD9KwBrG1Z3M5X1V3BrZ9FwI5Q9AwOrS9Mw0sS1CwOrH93pL5J1G3F5J13pHrS9S1nwOrD9Fw1sV9P3HrD9KwBrZ1G3K5F1Z3Bre193Gzgi2kGzMi2kEzYiApGz4gcoY4D8WqCe0uIjaaKaUg3jYa0uAqReK8O2YeF8SqUeV8MqU4L8SqLe0uH2J4D0J2L40uAqReK8O2YeF8SqUeV8MqU4L8SqJqVeF0G2J4L0F2VeD8WqCeA0mqPeF8Dq0aB8O2GeF8JqVeF0G2J4L0L2Ver082beIg8o5aPg5jdpYzJstiFkAsgivw85w1Dkas4hDk3z4hOkWsOiDk1zliA3IrD9nwErS9P3J5S1D3BrUhLp9sUhvpxsOh4kgsBrD1V3Z5S1G3H5C1P3J5S1D3BrD1H3K5Z1F3BrD1V3Z5S1G3H5C1P3J5S1D3BrD1H3K5Z1D3BrD1V3F3I5D1K3M5A0H2U4H02oK4D0G2G4J02o94q0Fjsa5gFj2l5gPjQaPuFj0lzuS2UeF8mqReA8O2K4A0F0Z2VeIgZo8aIgbocaPg5jha0uH2M4G0O2K4L0V2U4F0O2K4K02oK4D0G2G4G02oK4C0D2U4F0J2N4U4F0O2K4K02oK4D0G2G4H02oG3N5H1P3J5Z1B3I5D1P3J5J13pJ5F1H3H5K13p85w1t3y5e193TzhiXiPk0zQi0wX5D1t3y5Uh9p4sOh4kgsPhVposShDpasN10wJ5e19385w1X3EzIi5pRzMiepGzdi3kYzpiTit3y5ShEpQsIh1k8sUhmpCsUhnp9sN10w85q0y2t4AgRoWaUg0j9aOgkouaSgOoeaPgEo9aM01q94t4r082TlNu0jTleuioRlGuxoYl3gfoC4M0OqGeL8Jq0eS0P2Tem8PqneZ8O2YeF8Fq94q0y2t4Og0j0jTleuioGlGuNoRlbuzoC4M0OqGeL8Jq0eS0P2Tem8PqneZ8O2YeOrA9t3y5e193YzkiZpYzeiepYzrsqiOkesji0wX5I9CwHrH9C3U5A1mwErU9YwGrS1nwOrA9t3y5e193Ez8iqpEz5i5kEzbiZpEzvi7p0wX5I9CwHrH9C3U5A1mwErU9YwGrS1nwOrA9t3y5e193YzMi1kYzriupEz8iHpEzaieoC4M0OqGeL8G8X2I4S0nqReI8TqHeA0mqPeS8y2t4r082TlNu0jTleuioRlGuQoTlvupofep81qC4U8XqGeG8X2I4S0Q8WqSeE8CqU4W8SqIer08294q0Pj1lSuUjraBuUjdaMuIjQa0gPjgaiu1qC4Sgko1lSg0j1lIgUoFaDk1zliJ3G5L1t3y5e193EzsiDpTzhiSpEzwiqpYzii5pX5N1H385w1t3y5Uh9p4sAh4pFsAh7pusUhiiMpX5N1H385w1t3y5UhJpFsOhmpusSh8pHsShMpGsUhrpYsShEp9sN10wJ5e1938582EzJpAoYlnoyoUk0hwpGzzivpEzyiEoGlWu6oC4M0H294q0y2t4IgdoeaOgqoyaPgMo4aSgxocaAgCocaSgloyaM01qH294q0y2t4#jiewei#</p>\n","site":{"data":{}},"excerpt":"","more":"<p>TLBB list</p>\n<p>#kaishi#V1Igri9pIgoo1hPjaupoYlIuLo94t4r082bePgjoKaUg3jYac8y2t4Sgko1lSg0j1lIgUoFaSg2jxpT5Y9HwZr1iUkssXiPk0zQi3pHrS9P3nwOrD9Fw1sV9P3HrD9KwBrG1Z3M5X1V3BrZ9FwI5Q9AwOrS9Mw0sS1CwOrH93pL5J1G3F5J13pHrS9S1nwOrD9Fw1sV9P3HrD9KwBrZ1G3K5F1Z3Bre193Gzgi2kGzMi2kEzYiApGz4gcoY4D8WqCe0uIjaaKaUg3jYa0uAqReK8O2YeF8SqUeV8MqU4L8SqLe0uH2J4D0J2L40uAqReK8O2YeF8SqUeV8MqU4L8SqJqVeF0G2J4L0F2VeD8WqCeA0mqPeF8Dq0aB8O2GeF8JqVeF0G2J4L0L2Ver082beIg8o5aPg5jdpYzJstiFkAsgivw85w1Dkas4hDk3z4hOkWsOiDk1zliA3IrD9nwErS9P3J5S1D3BrUhLp9sUhvpxsOh4kgsBrD1V3Z5S1G3H5C1P3J5S1D3BrD1H3K5Z1F3BrD1V3Z5S1G3H5C1P3J5S1D3BrD1H3K5Z1D3BrD1V3F3I5D1K3M5A0H2U4H02oK4D0G2G4J02o94q0Fjsa5gFj2l5gPjQaPuFj0lzuS2UeF8mqReA8O2K4A0F0Z2VeIgZo8aIgbocaPg5jha0uH2M4G0O2K4L0V2U4F0O2K4K02oK4D0G2G4G02oK4C0D2U4F0J2N4U4F0O2K4K02oK4D0G2G4H02oG3N5H1P3J5Z1B3I5D1P3J5J13pJ5F1H3H5K13p85w1t3y5e193TzhiXiPk0zQi0wX5D1t3y5Uh9p4sOh4kgsPhVposShDpasN10wJ5e19385w1X3EzIi5pRzMiepGzdi3kYzpiTit3y5ShEpQsIh1k8sUhmpCsUhnp9sN10w85q0y2t4AgRoWaUg0j9aOgkouaSgOoeaPgEo9aM01q94t4r082TlNu0jTleuioRlGuxoYl3gfoC4M0OqGeL8Jq0eS0P2Tem8PqneZ8O2YeF8Fq94q0y2t4Og0j0jTleuioGlGuNoRlbuzoC4M0OqGeL8Jq0eS0P2Tem8PqneZ8O2YeOrA9t3y5e193YzkiZpYzeiepYzrsqiOkesji0wX5I9CwHrH9C3U5A1mwErU9YwGrS1nwOrA9t3y5e193Ez8iqpEz5i5kEzbiZpEzvi7p0wX5I9CwHrH9C3U5A1mwErU9YwGrS1nwOrA9t3y5e193YzMi1kYzriupEz8iHpEzaieoC4M0OqGeL8G8X2I4S0nqReI8TqHeA0mqPeS8y2t4r082TlNu0jTleuioRlGuQoTlvupofep81qC4U8XqGeG8X2I4S0Q8WqSeE8CqU4W8SqIer08294q0Pj1lSuUjraBuUjdaMuIjQa0gPjgaiu1qC4Sgko1lSg0j1lIgUoFaDk1zliJ3G5L1t3y5e193EzsiDpTzhiSpEzwiqpYzii5pX5N1H385w1t3y5Uh9p4sAh4pFsAh7pusUhiiMpX5N1H385w1t3y5UhJpFsOhmpusSh8pHsShMpGsUhrpYsShEp9sN10wJ5e1938582EzJpAoYlnoyoUk0hwpGzzivpEzyiEoGlWu6oC4M0H294q0y2t4IgdoeaOgqoyaPgMo4aSgxocaAgCocaSgloyaM01qH294q0y2t4#jiewei#</p>\n"},{"title":"Hello World","date":"2020-06-06T12:20:20.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\nor\n$ hexo s\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\nor\n$ hexo g\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/2020-06-06-hello-world.md","raw":"---\ntitle: Hello World\ndate: 2020-06-06 20:20:20\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\nor\n$ hexo s\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\nor\n$ hexo g\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2021-03-04T13:53:56.628Z","_id":"ckluxh3zl000058w4frtwg3s8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">or</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">or</span><br><span class=\"line\">$ hexo g</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">or</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">or</span><br><span class=\"line\">$ hexo g</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"3-hexo主题使用说明","_content":"\n\n\n# 3-hexo使用说明\n\n摘自博主：叶落阁-https://yelog.org/2017/03/23/3-hexo-instruction/  备查\n\n> \n>\n> 下面如果没有特殊说明， `_config.yml` 都指主题配置文件，即 `3-hexo` 目录下\n\n## 一、初始化博客下 _config.yml\n\n### 1.1 国际化\n\n```\nlanguage: zh-CN #支持 zh-CN、en\n\n```\n\n### 1.2 关掉 hexo 自带的代码高亮\n\n主题内置了主题高亮，所以需要禁用 hexo 自带的高亮\n\n```\nhighlight:\n    enable: false\n```\n\n## 二、功能相关\n\n### 2.1 自定义首页\n\n可查看这篇文章： [3-hexo配置首页](https://yelog.org/2017/03/13/3-hexo-homepage/)\n\n### 2.3 blog快捷键\n\n可查看这篇文章： [3-hexo快捷键说明](https://yelog.org/2017/03/24/3-hexo-shortcuts/)\n\n### 2.4 多作者模式\n\n可查看这篇文章： [3-hexo多作者模式](https://yelog.org/2017/02/28/3-hexo-multiple-author/)\n\n### 2.5 开启`关于`页面\n\n1. 在hexo根目录执行以下，创建 关于 页面\n\n   ```\n   hexo new page \"about\"\n   bash复制代码\n   ```\n\n2. 位置： `source/aoubt/index.md` ，根据需要进行编辑。\n\n3. 在主题中开启显示：修改主题根目录_config.yml中的about的on为true，如下所示\n\n   ```\n   menu:\n   about:  # '关于' 按钮\n    on: true # 是否显示\n    url: /about  # 跳转链接\n    type: 1 # 跳转类型 1：站内异步跳转 2：当前页面跳转 3：打开新的tab页\n   ```\n\n### 2.6 添加音乐插件\n\n[3-hexo 添加音乐插件](https://yelog.org/2019/10/08/3-hexo-add-music/)\n\n### 2.7 配置评论系统\n\n[3-hexo评论设置](https://yelog.org/2020/05/23/3-hexo-comment/)\n\n## 三、样式设置\n\n### 3.1 代码高亮\n\n首先要关闭hexo根目录下`_config.yml`中的高亮设置：\n\n```\nhighlight:\n  enable: false\n```\n\n配置主题下`_config.yml`中的高亮设置：\n可以根据提示，配置喜欢的高亮主题\n\n```yaml\nhighlight:\n  on: true # true开启代码高亮\n  lineNum: true # true显示行号\n  theme: darcula\n# 代码高亮主题,效果可以查看 https://highlightjs.org/static/demo/\n# 支持主题：\n# sublime : 参考sublime的高亮主题\n# darcula : 参考idea中的darcula的主题\n# atom-dark : 参考Atom的dark主题\n# atom-light : 参考Atom的light主题\n# github : 参考GitHub版的高亮主题\n# github-gist : GitHub-Gist主题\n# brown-paper : 牛皮纸效果\n# gruvbox-light : gruvbox的light主题\n# gruvbox-dark ： gruvbox的dark主题\n# rainbow :\n# railscasts :\n# sunburst :\n# kimbie-dark :\n# kimbie-light :\n# school-book : 纸张效果\n```\n\n### 3.2 MathJax数学公式\n\n修改 `_config.yml`\n\n```\n# MathJax 数学公式支持\nmathjax:\n  on: true #是否启用\n  per_page: false # 若只渲染单个页面，此选项设为false，页面内加入 mathjax: true\n```\n\n考虑到页面的加载速度，支持渲染单个页面。\n设置 `per_page: false` ,在需要渲染的页面内 加入 `mathjax: true`\n\n> **`注意:`**\n> 由于hexo的MarkDown渲染器与MathJax有冲突，可能会造成矩阵等使用不正常。所以在使用之前需要修改两个地方\n> 编辑 `node_modules\\marked\\lib\\marked.js` 脚本\n\n1. 将451行 ，这一步取消了对\\\\\\,\\\\{,\\\\}的转义(escape)\n\n   ```\n   escape: /^\\\\([\\\\`*{}\\[\\]()# +\\-.!_>])/,\n   改为\n   escape: /^\\\\([`*\\[\\]()# +\\-.!_>])/,js复制代码\n   ```\n\n2. 将459行，这一步取消了对斜体标记_的转义\n\n   ```yaml\n   em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n   改为\n   em:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,js复制代码\n   ```\n\n### 3.3 表格样式\n\n目前提供了3中样式，修改 `_config.yml`\n\n```\ntable: green_title\n# table 的样式\n# 为空时类似github的table样式\n# green 绿色样式\n# green_title 头部为青色的table样式\n```\n\n### 3.4 文章列表的hover样式\n\n鼠标移入的背景色和文字颜色变动，设置 `_config.yml`\n\n```\n#文章列表 鼠标移上去的样式, 为空时使用默认效果\narticle_list:\n  hover:\n    background: '#e2e0e0'  # 背景色:提供几种：'#c1bfc1'  '#fbf4a8'\n    color:     # 文字颜色 提供几种：'#ffffff'\n# 注意：由于颜色如果包含#，使用单引号 ' 引起来\n```\n\n### 3.5 开启字数统计\n\n1. 开启此功能需先安装插件，在 hexo根目录 执行 `npm i hexo-wordcount --save`\n2. 修改 `_config.yml`\n\n```\nword_count: true\n```\n\n### 3.6 更换头像\n\n两种方式：\n\n1. 替换 `source/img/avatar.jpg` 图片。\n2. 修改 `_config.yml` 中头像的配置记录\n\n```\n# 你的头像url\navatar: /img/avatar.jpg\nfavicon: /img/avatar.jpg\n```\n\n### 3.7 设置链接图标\n\n> 如果需要自定义图标可以看这篇文章 [3-hexo添加自定义图标](https://yelog.org/2020/12/28/3-hexo-add-icon/)\n\n如下，如果没有连接，则不展示图标。\n\n```\n#链接图标，链接为空则不显示\nlink:\n  rss: /atom.xml\n  github: https://github.com/yelog\n  facebook: https://www.facebook.com/faker.tops\n  twitter:\n  linkedin:\n  instagram:\n  reddit: https://www.reddit.com/user/yelog/\n  weibo: http://weibo.com/u/2307534817\n  email: jaytp@qq.com\n```\n\n## 四、排序及置顶\n\n### 4.1 分类排序\n\n默认按照首字母正序排序，由于中文在 `nodejs` 环境下不能按照拼音首字母排序，所以添加了自定义排序方式，在主题下 `_config.yml` 中找到如下配置，`category.sort`则是定义分类顺序的。\n\n**规则：**在 `sort`中定义的 `category` 比 没有在 `sort` 中定义的更靠前\n\n```\n# 文章分类设置\ncategory:\n  num: true # 分类显示文章数\n  sub: true # 开启多级分类\n  sort:\n    - 读书\n    - 大前端\n    - 后端\n    - 数据库\n    - 工具\n    - 运维\n```\n\n### 4.2 文章排序\n\n> 2020-05-20 更新：无需安装插件或修改源码，主题以内置排序算法\n\n文章列表默认按照创建时间（如下文章内定义的`date`）倒序。\n\n使用 `top` 将会置顶文章，多个置顶文章时，`top` 定义的值越大，越靠前。\n\n```\n---\ntitle: 每天一个linux命令\ndate: 2017-01-23 11:41:48\ntop: 1\ncategories:\n- 运维\ntags:\n- linux命令\n---yml复制代码\n```\n\n## 五、关于写文章\n\n### 5.1 如何写\n\n每篇文章最好写上文集和标签，方便筛选和查看。\n一般推荐一篇文章设置一个文集，一个或多个标签\n`categories`:文集，为左侧列表\n`tags`:标签，通过#来筛选\n例如 本篇文章的设置\n\n```\n---\ntitle: 3-hexo使用说明\ndate: 2017-03-23 15:13:47\ncategories:\n- 工具\ntags:\n- hexo\n- 3-hexo\n---\n```\n\n### 5.2 写作\n\n1.设置模板，blog根目录 `scaffolds/post.md`\n加入categories,tags等，这样以后通过 `hexo new` 生成的模板就不用写这两个单词了。\n当然，你也可以写入任何你每个文章中都会有的部分。\n\n```\n---\ntitle: {{ title }}\ndate: {{ date }}\ncategories:\ntags:\n---\n```\n\n## 六、技巧\n\n### 6.1 快捷命令\n\n其实就通过alias，触发一些命令的集合\n在 `~/.bashrc` 文件中添加\n\n```\nalias hs='hexo clean && hexo g && hexo s'  #启动本地服务\nalias hd='hexo clean && hexo g && hexo d'  #部署博客bash复制代码\n```\n\n甚至你也可以加入备份文章的命令，可以自由发挥。\n\n### 6.3 博客备份（快捷命令升级版）\n\n为了保证我们写的文章不丢失、快速迁移博客，都需要备份我们的blog。\n\n1. 博客根目录，执行 `git init` 创建 git 仓库。\n\n2. 在 github（或其他托管平台、自建远程仓库等） 创建仓库并和本地仓库建立联系。\n\n3. 在~/.bashrc文件中添加\n\n   ```\n   alias hs='hexo clean && hexo g && hexo s'\n   alias hd='hexo clean && hexo g && hexo d && git add . && git commit -m \"update\" && git push -f'bash复制代码\n   ```\n\n这样，我们在执行 `hd` 进行部署时，就一同将博客进行备份了","source":"_posts/2021-03-03-3-hexo-used.md","raw":"---\ntitle: 3-hexo主题使用说明\n---\n\n\n\n# 3-hexo使用说明\n\n摘自博主：叶落阁-https://yelog.org/2017/03/23/3-hexo-instruction/  备查\n\n> \n>\n> 下面如果没有特殊说明， `_config.yml` 都指主题配置文件，即 `3-hexo` 目录下\n\n## 一、初始化博客下 _config.yml\n\n### 1.1 国际化\n\n```\nlanguage: zh-CN #支持 zh-CN、en\n\n```\n\n### 1.2 关掉 hexo 自带的代码高亮\n\n主题内置了主题高亮，所以需要禁用 hexo 自带的高亮\n\n```\nhighlight:\n    enable: false\n```\n\n## 二、功能相关\n\n### 2.1 自定义首页\n\n可查看这篇文章： [3-hexo配置首页](https://yelog.org/2017/03/13/3-hexo-homepage/)\n\n### 2.3 blog快捷键\n\n可查看这篇文章： [3-hexo快捷键说明](https://yelog.org/2017/03/24/3-hexo-shortcuts/)\n\n### 2.4 多作者模式\n\n可查看这篇文章： [3-hexo多作者模式](https://yelog.org/2017/02/28/3-hexo-multiple-author/)\n\n### 2.5 开启`关于`页面\n\n1. 在hexo根目录执行以下，创建 关于 页面\n\n   ```\n   hexo new page \"about\"\n   bash复制代码\n   ```\n\n2. 位置： `source/aoubt/index.md` ，根据需要进行编辑。\n\n3. 在主题中开启显示：修改主题根目录_config.yml中的about的on为true，如下所示\n\n   ```\n   menu:\n   about:  # '关于' 按钮\n    on: true # 是否显示\n    url: /about  # 跳转链接\n    type: 1 # 跳转类型 1：站内异步跳转 2：当前页面跳转 3：打开新的tab页\n   ```\n\n### 2.6 添加音乐插件\n\n[3-hexo 添加音乐插件](https://yelog.org/2019/10/08/3-hexo-add-music/)\n\n### 2.7 配置评论系统\n\n[3-hexo评论设置](https://yelog.org/2020/05/23/3-hexo-comment/)\n\n## 三、样式设置\n\n### 3.1 代码高亮\n\n首先要关闭hexo根目录下`_config.yml`中的高亮设置：\n\n```\nhighlight:\n  enable: false\n```\n\n配置主题下`_config.yml`中的高亮设置：\n可以根据提示，配置喜欢的高亮主题\n\n```yaml\nhighlight:\n  on: true # true开启代码高亮\n  lineNum: true # true显示行号\n  theme: darcula\n# 代码高亮主题,效果可以查看 https://highlightjs.org/static/demo/\n# 支持主题：\n# sublime : 参考sublime的高亮主题\n# darcula : 参考idea中的darcula的主题\n# atom-dark : 参考Atom的dark主题\n# atom-light : 参考Atom的light主题\n# github : 参考GitHub版的高亮主题\n# github-gist : GitHub-Gist主题\n# brown-paper : 牛皮纸效果\n# gruvbox-light : gruvbox的light主题\n# gruvbox-dark ： gruvbox的dark主题\n# rainbow :\n# railscasts :\n# sunburst :\n# kimbie-dark :\n# kimbie-light :\n# school-book : 纸张效果\n```\n\n### 3.2 MathJax数学公式\n\n修改 `_config.yml`\n\n```\n# MathJax 数学公式支持\nmathjax:\n  on: true #是否启用\n  per_page: false # 若只渲染单个页面，此选项设为false，页面内加入 mathjax: true\n```\n\n考虑到页面的加载速度，支持渲染单个页面。\n设置 `per_page: false` ,在需要渲染的页面内 加入 `mathjax: true`\n\n> **`注意:`**\n> 由于hexo的MarkDown渲染器与MathJax有冲突，可能会造成矩阵等使用不正常。所以在使用之前需要修改两个地方\n> 编辑 `node_modules\\marked\\lib\\marked.js` 脚本\n\n1. 将451行 ，这一步取消了对\\\\\\,\\\\{,\\\\}的转义(escape)\n\n   ```\n   escape: /^\\\\([\\\\`*{}\\[\\]()# +\\-.!_>])/,\n   改为\n   escape: /^\\\\([`*\\[\\]()# +\\-.!_>])/,js复制代码\n   ```\n\n2. 将459行，这一步取消了对斜体标记_的转义\n\n   ```yaml\n   em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n   改为\n   em:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,js复制代码\n   ```\n\n### 3.3 表格样式\n\n目前提供了3中样式，修改 `_config.yml`\n\n```\ntable: green_title\n# table 的样式\n# 为空时类似github的table样式\n# green 绿色样式\n# green_title 头部为青色的table样式\n```\n\n### 3.4 文章列表的hover样式\n\n鼠标移入的背景色和文字颜色变动，设置 `_config.yml`\n\n```\n#文章列表 鼠标移上去的样式, 为空时使用默认效果\narticle_list:\n  hover:\n    background: '#e2e0e0'  # 背景色:提供几种：'#c1bfc1'  '#fbf4a8'\n    color:     # 文字颜色 提供几种：'#ffffff'\n# 注意：由于颜色如果包含#，使用单引号 ' 引起来\n```\n\n### 3.5 开启字数统计\n\n1. 开启此功能需先安装插件，在 hexo根目录 执行 `npm i hexo-wordcount --save`\n2. 修改 `_config.yml`\n\n```\nword_count: true\n```\n\n### 3.6 更换头像\n\n两种方式：\n\n1. 替换 `source/img/avatar.jpg` 图片。\n2. 修改 `_config.yml` 中头像的配置记录\n\n```\n# 你的头像url\navatar: /img/avatar.jpg\nfavicon: /img/avatar.jpg\n```\n\n### 3.7 设置链接图标\n\n> 如果需要自定义图标可以看这篇文章 [3-hexo添加自定义图标](https://yelog.org/2020/12/28/3-hexo-add-icon/)\n\n如下，如果没有连接，则不展示图标。\n\n```\n#链接图标，链接为空则不显示\nlink:\n  rss: /atom.xml\n  github: https://github.com/yelog\n  facebook: https://www.facebook.com/faker.tops\n  twitter:\n  linkedin:\n  instagram:\n  reddit: https://www.reddit.com/user/yelog/\n  weibo: http://weibo.com/u/2307534817\n  email: jaytp@qq.com\n```\n\n## 四、排序及置顶\n\n### 4.1 分类排序\n\n默认按照首字母正序排序，由于中文在 `nodejs` 环境下不能按照拼音首字母排序，所以添加了自定义排序方式，在主题下 `_config.yml` 中找到如下配置，`category.sort`则是定义分类顺序的。\n\n**规则：**在 `sort`中定义的 `category` 比 没有在 `sort` 中定义的更靠前\n\n```\n# 文章分类设置\ncategory:\n  num: true # 分类显示文章数\n  sub: true # 开启多级分类\n  sort:\n    - 读书\n    - 大前端\n    - 后端\n    - 数据库\n    - 工具\n    - 运维\n```\n\n### 4.2 文章排序\n\n> 2020-05-20 更新：无需安装插件或修改源码，主题以内置排序算法\n\n文章列表默认按照创建时间（如下文章内定义的`date`）倒序。\n\n使用 `top` 将会置顶文章，多个置顶文章时，`top` 定义的值越大，越靠前。\n\n```\n---\ntitle: 每天一个linux命令\ndate: 2017-01-23 11:41:48\ntop: 1\ncategories:\n- 运维\ntags:\n- linux命令\n---yml复制代码\n```\n\n## 五、关于写文章\n\n### 5.1 如何写\n\n每篇文章最好写上文集和标签，方便筛选和查看。\n一般推荐一篇文章设置一个文集，一个或多个标签\n`categories`:文集，为左侧列表\n`tags`:标签，通过#来筛选\n例如 本篇文章的设置\n\n```\n---\ntitle: 3-hexo使用说明\ndate: 2017-03-23 15:13:47\ncategories:\n- 工具\ntags:\n- hexo\n- 3-hexo\n---\n```\n\n### 5.2 写作\n\n1.设置模板，blog根目录 `scaffolds/post.md`\n加入categories,tags等，这样以后通过 `hexo new` 生成的模板就不用写这两个单词了。\n当然，你也可以写入任何你每个文章中都会有的部分。\n\n```\n---\ntitle: {{ title }}\ndate: {{ date }}\ncategories:\ntags:\n---\n```\n\n## 六、技巧\n\n### 6.1 快捷命令\n\n其实就通过alias，触发一些命令的集合\n在 `~/.bashrc` 文件中添加\n\n```\nalias hs='hexo clean && hexo g && hexo s'  #启动本地服务\nalias hd='hexo clean && hexo g && hexo d'  #部署博客bash复制代码\n```\n\n甚至你也可以加入备份文章的命令，可以自由发挥。\n\n### 6.3 博客备份（快捷命令升级版）\n\n为了保证我们写的文章不丢失、快速迁移博客，都需要备份我们的blog。\n\n1. 博客根目录，执行 `git init` 创建 git 仓库。\n\n2. 在 github（或其他托管平台、自建远程仓库等） 创建仓库并和本地仓库建立联系。\n\n3. 在~/.bashrc文件中添加\n\n   ```\n   alias hs='hexo clean && hexo g && hexo s'\n   alias hd='hexo clean && hexo g && hexo d && git add . && git commit -m \"update\" && git push -f'bash复制代码\n   ```\n\n这样，我们在执行 `hd` 进行部署时，就一同将博客进行备份了","slug":"3-hexo-used","published":1,"date":"2021-03-02T16:00:00.000Z","updated":"2021-03-04T12:09:37.963Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckluxh3zt000158w4aus6e47d","content":"<h1 id=\"3-hexo使用说明\"><a href=\"#3-hexo使用说明\" class=\"headerlink\" title=\"3-hexo使用说明\"></a>3-hexo使用说明</h1><p>摘自博主：叶落阁-<a href=\"https://yelog.org/2017/03/23/3-hexo-instruction/\">https://yelog.org/2017/03/23/3-hexo-instruction/</a>  备查</p>\n<blockquote>\n<p>下面如果没有特殊说明， <code>_config.yml</code> 都指主题配置文件，即 <code>3-hexo</code> 目录下</p>\n</blockquote>\n<h2 id=\"一、初始化博客下-config-yml\"><a href=\"#一、初始化博客下-config-yml\" class=\"headerlink\" title=\"一、初始化博客下 _config.yml\"></a>一、初始化博客下 _config.yml</h2><h3 id=\"1-1-国际化\"><a href=\"#1-1-国际化\" class=\"headerlink\" title=\"1.1 国际化\"></a>1.1 国际化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-CN #支持 zh-CN、en</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-关掉-hexo-自带的代码高亮\"><a href=\"#1-2-关掉-hexo-自带的代码高亮\" class=\"headerlink\" title=\"1.2 关掉 hexo 自带的代码高亮\"></a>1.2 关掉 hexo 自带的代码高亮</h3><p>主题内置了主题高亮，所以需要禁用 hexo 自带的高亮</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">highlight:</span><br><span class=\"line\">    enable: false</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、功能相关\"><a href=\"#二、功能相关\" class=\"headerlink\" title=\"二、功能相关\"></a>二、功能相关</h2><h3 id=\"2-1-自定义首页\"><a href=\"#2-1-自定义首页\" class=\"headerlink\" title=\"2.1 自定义首页\"></a>2.1 自定义首页</h3><p>可查看这篇文章： <a href=\"https://yelog.org/2017/03/13/3-hexo-homepage/\">3-hexo配置首页</a></p>\n<h3 id=\"2-3-blog快捷键\"><a href=\"#2-3-blog快捷键\" class=\"headerlink\" title=\"2.3 blog快捷键\"></a>2.3 blog快捷键</h3><p>可查看这篇文章： <a href=\"https://yelog.org/2017/03/24/3-hexo-shortcuts/\">3-hexo快捷键说明</a></p>\n<h3 id=\"2-4-多作者模式\"><a href=\"#2-4-多作者模式\" class=\"headerlink\" title=\"2.4 多作者模式\"></a>2.4 多作者模式</h3><p>可查看这篇文章： <a href=\"https://yelog.org/2017/02/28/3-hexo-multiple-author/\">3-hexo多作者模式</a></p>\n<h3 id=\"2-5-开启关于页面\"><a href=\"#2-5-开启关于页面\" class=\"headerlink\" title=\"2.5 开启关于页面\"></a>2.5 开启<code>关于</code>页面</h3><ol>\n<li><p>在hexo根目录执行以下，创建 关于 页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;about&quot;</span><br><span class=\"line\">bash复制代码</span><br></pre></td></tr></table></figure></li>\n<li><p>位置： <code>source/aoubt/index.md</code> ，根据需要进行编辑。</p>\n</li>\n<li><p>在主题中开启显示：修改主题根目录_config.yml中的about的on为true，如下所示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">about:  # &#39;关于&#39; 按钮</span><br><span class=\"line\"> on: true # 是否显示</span><br><span class=\"line\"> url: &#x2F;about  # 跳转链接</span><br><span class=\"line\"> type: 1 # 跳转类型 1：站内异步跳转 2：当前页面跳转 3：打开新的tab页</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"2-6-添加音乐插件\"><a href=\"#2-6-添加音乐插件\" class=\"headerlink\" title=\"2.6 添加音乐插件\"></a>2.6 添加音乐插件</h3><p><a href=\"https://yelog.org/2019/10/08/3-hexo-add-music/\">3-hexo 添加音乐插件</a></p>\n<h3 id=\"2-7-配置评论系统\"><a href=\"#2-7-配置评论系统\" class=\"headerlink\" title=\"2.7 配置评论系统\"></a>2.7 配置评论系统</h3><p><a href=\"https://yelog.org/2020/05/23/3-hexo-comment/\">3-hexo评论设置</a></p>\n<h2 id=\"三、样式设置\"><a href=\"#三、样式设置\" class=\"headerlink\" title=\"三、样式设置\"></a>三、样式设置</h2><h3 id=\"3-1-代码高亮\"><a href=\"#3-1-代码高亮\" class=\"headerlink\" title=\"3.1 代码高亮\"></a>3.1 代码高亮</h3><p>首先要关闭hexo根目录下<code>_config.yml</code>中的高亮设置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">highlight:</span><br><span class=\"line\">  enable: false</span><br></pre></td></tr></table></figure>\n\n<p>配置主题下<code>_config.yml</code>中的高亮设置：<br>可以根据提示，配置喜欢的高亮主题</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">on:</span> <span class=\"literal\">true</span> <span class=\"comment\"># true开启代码高亮</span></span><br><span class=\"line\">  <span class=\"attr\">lineNum:</span> <span class=\"literal\">true</span> <span class=\"comment\"># true显示行号</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">darcula</span></span><br><span class=\"line\"><span class=\"comment\"># 代码高亮主题,效果可以查看 https://highlightjs.org/static/demo/</span></span><br><span class=\"line\"><span class=\"comment\"># 支持主题：</span></span><br><span class=\"line\"><span class=\"comment\"># sublime : 参考sublime的高亮主题</span></span><br><span class=\"line\"><span class=\"comment\"># darcula : 参考idea中的darcula的主题</span></span><br><span class=\"line\"><span class=\"comment\"># atom-dark : 参考Atom的dark主题</span></span><br><span class=\"line\"><span class=\"comment\"># atom-light : 参考Atom的light主题</span></span><br><span class=\"line\"><span class=\"comment\"># github : 参考GitHub版的高亮主题</span></span><br><span class=\"line\"><span class=\"comment\"># github-gist : GitHub-Gist主题</span></span><br><span class=\"line\"><span class=\"comment\"># brown-paper : 牛皮纸效果</span></span><br><span class=\"line\"><span class=\"comment\"># gruvbox-light : gruvbox的light主题</span></span><br><span class=\"line\"><span class=\"comment\"># gruvbox-dark ： gruvbox的dark主题</span></span><br><span class=\"line\"><span class=\"comment\"># rainbow :</span></span><br><span class=\"line\"><span class=\"comment\"># railscasts :</span></span><br><span class=\"line\"><span class=\"comment\"># sunburst :</span></span><br><span class=\"line\"><span class=\"comment\"># kimbie-dark :</span></span><br><span class=\"line\"><span class=\"comment\"># kimbie-light :</span></span><br><span class=\"line\"><span class=\"comment\"># school-book : 纸张效果</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-MathJax数学公式\"><a href=\"#3-2-MathJax数学公式\" class=\"headerlink\" title=\"3.2 MathJax数学公式\"></a>3.2 MathJax数学公式</h3><p>修改 <code>_config.yml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># MathJax 数学公式支持</span><br><span class=\"line\">mathjax:</span><br><span class=\"line\">  on: true #是否启用</span><br><span class=\"line\">  per_page: false # 若只渲染单个页面，此选项设为false，页面内加入 mathjax: true</span><br></pre></td></tr></table></figure>\n\n<p>考虑到页面的加载速度，支持渲染单个页面。<br>设置 <code>per_page: false</code> ,在需要渲染的页面内 加入 <code>mathjax: true</code></p>\n<blockquote>\n<p><strong><code>注意:</code></strong><br>由于hexo的MarkDown渲染器与MathJax有冲突，可能会造成矩阵等使用不正常。所以在使用之前需要修改两个地方<br>编辑 <code>node_modules\\marked\\lib\\marked.js</code> 脚本</p>\n</blockquote>\n<ol>\n<li><p>将451行 ，这一步取消了对\\,\\{,\\}的转义(escape)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">escape: &#x2F;^\\\\([\\\\&#96;*&#123;&#125;\\[\\]()# +\\-.!_&gt;])&#x2F;,</span><br><span class=\"line\">改为</span><br><span class=\"line\">escape: &#x2F;^\\\\([&#96;*\\[\\]()# +\\-.!_&gt;])&#x2F;,js复制代码</span><br></pre></td></tr></table></figure></li>\n<li><p>将459行，这一步取消了对斜体标记_的转义</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">em:</span> <span class=\"string\">/^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,</span></span><br><span class=\"line\"><span class=\"string\">改为</span></span><br><span class=\"line\"><span class=\"string\">em:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,js复制代码</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"3-3-表格样式\"><a href=\"#3-3-表格样式\" class=\"headerlink\" title=\"3.3 表格样式\"></a>3.3 表格样式</h3><p>目前提供了3中样式，修改 <code>_config.yml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table: green_title</span><br><span class=\"line\"># table 的样式</span><br><span class=\"line\"># 为空时类似github的table样式</span><br><span class=\"line\"># green 绿色样式</span><br><span class=\"line\"># green_title 头部为青色的table样式</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-文章列表的hover样式\"><a href=\"#3-4-文章列表的hover样式\" class=\"headerlink\" title=\"3.4 文章列表的hover样式\"></a>3.4 文章列表的hover样式</h3><p>鼠标移入的背景色和文字颜色变动，设置 <code>_config.yml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#文章列表 鼠标移上去的样式, 为空时使用默认效果</span><br><span class=\"line\">article_list:</span><br><span class=\"line\">  hover:</span><br><span class=\"line\">    background: &#39;#e2e0e0&#39;  # 背景色:提供几种：&#39;#c1bfc1&#39;  &#39;#fbf4a8&#39;</span><br><span class=\"line\">    color:     # 文字颜色 提供几种：&#39;#ffffff&#39;</span><br><span class=\"line\"># 注意：由于颜色如果包含#，使用单引号 &#39; 引起来</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-5-开启字数统计\"><a href=\"#3-5-开启字数统计\" class=\"headerlink\" title=\"3.5 开启字数统计\"></a>3.5 开启字数统计</h3><ol>\n<li>开启此功能需先安装插件，在 hexo根目录 执行 <code>npm i hexo-wordcount --save</code></li>\n<li>修改 <code>_config.yml</code></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">word_count: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-6-更换头像\"><a href=\"#3-6-更换头像\" class=\"headerlink\" title=\"3.6 更换头像\"></a>3.6 更换头像</h3><p>两种方式：</p>\n<ol>\n<li>替换 <code>source/img/avatar.jpg</code> 图片。</li>\n<li>修改 <code>_config.yml</code> 中头像的配置记录</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 你的头像url</span><br><span class=\"line\">avatar: &#x2F;img&#x2F;avatar.jpg</span><br><span class=\"line\">favicon: &#x2F;img&#x2F;avatar.jpg</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-7-设置链接图标\"><a href=\"#3-7-设置链接图标\" class=\"headerlink\" title=\"3.7 设置链接图标\"></a>3.7 设置链接图标</h3><blockquote>\n<p>如果需要自定义图标可以看这篇文章 <a href=\"https://yelog.org/2020/12/28/3-hexo-add-icon/\">3-hexo添加自定义图标</a></p>\n</blockquote>\n<p>如下，如果没有连接，则不展示图标。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#链接图标，链接为空则不显示</span><br><span class=\"line\">link:</span><br><span class=\"line\">  rss: &#x2F;atom.xml</span><br><span class=\"line\">  github: https:&#x2F;&#x2F;github.com&#x2F;yelog</span><br><span class=\"line\">  facebook: https:&#x2F;&#x2F;www.facebook.com&#x2F;faker.tops</span><br><span class=\"line\">  twitter:</span><br><span class=\"line\">  linkedin:</span><br><span class=\"line\">  instagram:</span><br><span class=\"line\">  reddit: https:&#x2F;&#x2F;www.reddit.com&#x2F;user&#x2F;yelog&#x2F;</span><br><span class=\"line\">  weibo: http:&#x2F;&#x2F;weibo.com&#x2F;u&#x2F;2307534817</span><br><span class=\"line\">  email: jaytp@qq.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、排序及置顶\"><a href=\"#四、排序及置顶\" class=\"headerlink\" title=\"四、排序及置顶\"></a>四、排序及置顶</h2><h3 id=\"4-1-分类排序\"><a href=\"#4-1-分类排序\" class=\"headerlink\" title=\"4.1 分类排序\"></a>4.1 分类排序</h3><p>默认按照首字母正序排序，由于中文在 <code>nodejs</code> 环境下不能按照拼音首字母排序，所以添加了自定义排序方式，在主题下 <code>_config.yml</code> 中找到如下配置，<code>category.sort</code>则是定义分类顺序的。</p>\n<p><strong>规则：</strong>在 <code>sort</code>中定义的 <code>category</code> 比 没有在 <code>sort</code> 中定义的更靠前</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章分类设置</span><br><span class=\"line\">category:</span><br><span class=\"line\">  num: true # 分类显示文章数</span><br><span class=\"line\">  sub: true # 开启多级分类</span><br><span class=\"line\">  sort:</span><br><span class=\"line\">    - 读书</span><br><span class=\"line\">    - 大前端</span><br><span class=\"line\">    - 后端</span><br><span class=\"line\">    - 数据库</span><br><span class=\"line\">    - 工具</span><br><span class=\"line\">    - 运维</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-文章排序\"><a href=\"#4-2-文章排序\" class=\"headerlink\" title=\"4.2 文章排序\"></a>4.2 文章排序</h3><blockquote>\n<p>2020-05-20 更新：无需安装插件或修改源码，主题以内置排序算法</p>\n</blockquote>\n<p>文章列表默认按照创建时间（如下文章内定义的<code>date</code>）倒序。</p>\n<p>使用 <code>top</code> 将会置顶文章，多个置顶文章时，<code>top</code> 定义的值越大，越靠前。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 每天一个linux命令</span><br><span class=\"line\">date: 2017-01-23 11:41:48</span><br><span class=\"line\">top: 1</span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 运维</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- linux命令</span><br><span class=\"line\">---yml复制代码</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、关于写文章\"><a href=\"#五、关于写文章\" class=\"headerlink\" title=\"五、关于写文章\"></a>五、关于写文章</h2><h3 id=\"5-1-如何写\"><a href=\"#5-1-如何写\" class=\"headerlink\" title=\"5.1 如何写\"></a>5.1 如何写</h3><p>每篇文章最好写上文集和标签，方便筛选和查看。<br>一般推荐一篇文章设置一个文集，一个或多个标签<br><code>categories</code>:文集，为左侧列表<br><code>tags</code>:标签，通过#来筛选<br>例如 本篇文章的设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 3-hexo使用说明</span><br><span class=\"line\">date: 2017-03-23 15:13:47</span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 工具</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- hexo</span><br><span class=\"line\">- 3-hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-写作\"><a href=\"#5-2-写作\" class=\"headerlink\" title=\"5.2 写作\"></a>5.2 写作</h3><p>1.设置模板，blog根目录 <code>scaffolds/post.md</code><br>加入categories,tags等，这样以后通过 <code>hexo new</code> 生成的模板就不用写这两个单词了。<br>当然，你也可以写入任何你每个文章中都会有的部分。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"六、技巧\"><a href=\"#六、技巧\" class=\"headerlink\" title=\"六、技巧\"></a>六、技巧</h2><h3 id=\"6-1-快捷命令\"><a href=\"#6-1-快捷命令\" class=\"headerlink\" title=\"6.1 快捷命令\"></a>6.1 快捷命令</h3><p>其实就通过alias，触发一些命令的集合<br>在 <code>~/.bashrc</code> 文件中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias hs&#x3D;&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#39;  #启动本地服务</span><br><span class=\"line\">alias hd&#x3D;&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&#39;  #部署博客bash复制代码</span><br></pre></td></tr></table></figure>\n\n<p>甚至你也可以加入备份文章的命令，可以自由发挥。</p>\n<h3 id=\"6-3-博客备份（快捷命令升级版）\"><a href=\"#6-3-博客备份（快捷命令升级版）\" class=\"headerlink\" title=\"6.3 博客备份（快捷命令升级版）\"></a>6.3 博客备份（快捷命令升级版）</h3><p>为了保证我们写的文章不丢失、快速迁移博客，都需要备份我们的blog。</p>\n<ol>\n<li><p>博客根目录，执行 <code>git init</code> 创建 git 仓库。</p>\n</li>\n<li><p>在 github（或其他托管平台、自建远程仓库等） 创建仓库并和本地仓库建立联系。</p>\n</li>\n<li><p>在~/.bashrc文件中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias hs&#x3D;&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#39;</span><br><span class=\"line\">alias hd&#x3D;&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push -f&#39;bash复制代码</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>这样，我们在执行 <code>hd</code> 进行部署时，就一同将博客进行备份了</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"3-hexo使用说明\"><a href=\"#3-hexo使用说明\" class=\"headerlink\" title=\"3-hexo使用说明\"></a>3-hexo使用说明</h1><p>摘自博主：叶落阁-<a href=\"https://yelog.org/2017/03/23/3-hexo-instruction/\">https://yelog.org/2017/03/23/3-hexo-instruction/</a>  备查</p>\n<blockquote>\n<p>下面如果没有特殊说明， <code>_config.yml</code> 都指主题配置文件，即 <code>3-hexo</code> 目录下</p>\n</blockquote>\n<h2 id=\"一、初始化博客下-config-yml\"><a href=\"#一、初始化博客下-config-yml\" class=\"headerlink\" title=\"一、初始化博客下 _config.yml\"></a>一、初始化博客下 _config.yml</h2><h3 id=\"1-1-国际化\"><a href=\"#1-1-国际化\" class=\"headerlink\" title=\"1.1 国际化\"></a>1.1 国际化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-CN #支持 zh-CN、en</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-关掉-hexo-自带的代码高亮\"><a href=\"#1-2-关掉-hexo-自带的代码高亮\" class=\"headerlink\" title=\"1.2 关掉 hexo 自带的代码高亮\"></a>1.2 关掉 hexo 自带的代码高亮</h3><p>主题内置了主题高亮，所以需要禁用 hexo 自带的高亮</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">highlight:</span><br><span class=\"line\">    enable: false</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、功能相关\"><a href=\"#二、功能相关\" class=\"headerlink\" title=\"二、功能相关\"></a>二、功能相关</h2><h3 id=\"2-1-自定义首页\"><a href=\"#2-1-自定义首页\" class=\"headerlink\" title=\"2.1 自定义首页\"></a>2.1 自定义首页</h3><p>可查看这篇文章： <a href=\"https://yelog.org/2017/03/13/3-hexo-homepage/\">3-hexo配置首页</a></p>\n<h3 id=\"2-3-blog快捷键\"><a href=\"#2-3-blog快捷键\" class=\"headerlink\" title=\"2.3 blog快捷键\"></a>2.3 blog快捷键</h3><p>可查看这篇文章： <a href=\"https://yelog.org/2017/03/24/3-hexo-shortcuts/\">3-hexo快捷键说明</a></p>\n<h3 id=\"2-4-多作者模式\"><a href=\"#2-4-多作者模式\" class=\"headerlink\" title=\"2.4 多作者模式\"></a>2.4 多作者模式</h3><p>可查看这篇文章： <a href=\"https://yelog.org/2017/02/28/3-hexo-multiple-author/\">3-hexo多作者模式</a></p>\n<h3 id=\"2-5-开启关于页面\"><a href=\"#2-5-开启关于页面\" class=\"headerlink\" title=\"2.5 开启关于页面\"></a>2.5 开启<code>关于</code>页面</h3><ol>\n<li><p>在hexo根目录执行以下，创建 关于 页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;about&quot;</span><br><span class=\"line\">bash复制代码</span><br></pre></td></tr></table></figure></li>\n<li><p>位置： <code>source/aoubt/index.md</code> ，根据需要进行编辑。</p>\n</li>\n<li><p>在主题中开启显示：修改主题根目录_config.yml中的about的on为true，如下所示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">about:  # &#39;关于&#39; 按钮</span><br><span class=\"line\"> on: true # 是否显示</span><br><span class=\"line\"> url: &#x2F;about  # 跳转链接</span><br><span class=\"line\"> type: 1 # 跳转类型 1：站内异步跳转 2：当前页面跳转 3：打开新的tab页</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"2-6-添加音乐插件\"><a href=\"#2-6-添加音乐插件\" class=\"headerlink\" title=\"2.6 添加音乐插件\"></a>2.6 添加音乐插件</h3><p><a href=\"https://yelog.org/2019/10/08/3-hexo-add-music/\">3-hexo 添加音乐插件</a></p>\n<h3 id=\"2-7-配置评论系统\"><a href=\"#2-7-配置评论系统\" class=\"headerlink\" title=\"2.7 配置评论系统\"></a>2.7 配置评论系统</h3><p><a href=\"https://yelog.org/2020/05/23/3-hexo-comment/\">3-hexo评论设置</a></p>\n<h2 id=\"三、样式设置\"><a href=\"#三、样式设置\" class=\"headerlink\" title=\"三、样式设置\"></a>三、样式设置</h2><h3 id=\"3-1-代码高亮\"><a href=\"#3-1-代码高亮\" class=\"headerlink\" title=\"3.1 代码高亮\"></a>3.1 代码高亮</h3><p>首先要关闭hexo根目录下<code>_config.yml</code>中的高亮设置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">highlight:</span><br><span class=\"line\">  enable: false</span><br></pre></td></tr></table></figure>\n\n<p>配置主题下<code>_config.yml</code>中的高亮设置：<br>可以根据提示，配置喜欢的高亮主题</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">on:</span> <span class=\"literal\">true</span> <span class=\"comment\"># true开启代码高亮</span></span><br><span class=\"line\">  <span class=\"attr\">lineNum:</span> <span class=\"literal\">true</span> <span class=\"comment\"># true显示行号</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">darcula</span></span><br><span class=\"line\"><span class=\"comment\"># 代码高亮主题,效果可以查看 https://highlightjs.org/static/demo/</span></span><br><span class=\"line\"><span class=\"comment\"># 支持主题：</span></span><br><span class=\"line\"><span class=\"comment\"># sublime : 参考sublime的高亮主题</span></span><br><span class=\"line\"><span class=\"comment\"># darcula : 参考idea中的darcula的主题</span></span><br><span class=\"line\"><span class=\"comment\"># atom-dark : 参考Atom的dark主题</span></span><br><span class=\"line\"><span class=\"comment\"># atom-light : 参考Atom的light主题</span></span><br><span class=\"line\"><span class=\"comment\"># github : 参考GitHub版的高亮主题</span></span><br><span class=\"line\"><span class=\"comment\"># github-gist : GitHub-Gist主题</span></span><br><span class=\"line\"><span class=\"comment\"># brown-paper : 牛皮纸效果</span></span><br><span class=\"line\"><span class=\"comment\"># gruvbox-light : gruvbox的light主题</span></span><br><span class=\"line\"><span class=\"comment\"># gruvbox-dark ： gruvbox的dark主题</span></span><br><span class=\"line\"><span class=\"comment\"># rainbow :</span></span><br><span class=\"line\"><span class=\"comment\"># railscasts :</span></span><br><span class=\"line\"><span class=\"comment\"># sunburst :</span></span><br><span class=\"line\"><span class=\"comment\"># kimbie-dark :</span></span><br><span class=\"line\"><span class=\"comment\"># kimbie-light :</span></span><br><span class=\"line\"><span class=\"comment\"># school-book : 纸张效果</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-MathJax数学公式\"><a href=\"#3-2-MathJax数学公式\" class=\"headerlink\" title=\"3.2 MathJax数学公式\"></a>3.2 MathJax数学公式</h3><p>修改 <code>_config.yml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># MathJax 数学公式支持</span><br><span class=\"line\">mathjax:</span><br><span class=\"line\">  on: true #是否启用</span><br><span class=\"line\">  per_page: false # 若只渲染单个页面，此选项设为false，页面内加入 mathjax: true</span><br></pre></td></tr></table></figure>\n\n<p>考虑到页面的加载速度，支持渲染单个页面。<br>设置 <code>per_page: false</code> ,在需要渲染的页面内 加入 <code>mathjax: true</code></p>\n<blockquote>\n<p><strong><code>注意:</code></strong><br>由于hexo的MarkDown渲染器与MathJax有冲突，可能会造成矩阵等使用不正常。所以在使用之前需要修改两个地方<br>编辑 <code>node_modules\\marked\\lib\\marked.js</code> 脚本</p>\n</blockquote>\n<ol>\n<li><p>将451行 ，这一步取消了对\\,\\{,\\}的转义(escape)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">escape: &#x2F;^\\\\([\\\\&#96;*&#123;&#125;\\[\\]()# +\\-.!_&gt;])&#x2F;,</span><br><span class=\"line\">改为</span><br><span class=\"line\">escape: &#x2F;^\\\\([&#96;*\\[\\]()# +\\-.!_&gt;])&#x2F;,js复制代码</span><br></pre></td></tr></table></figure></li>\n<li><p>将459行，这一步取消了对斜体标记_的转义</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">em:</span> <span class=\"string\">/^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,</span></span><br><span class=\"line\"><span class=\"string\">改为</span></span><br><span class=\"line\"><span class=\"string\">em:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,js复制代码</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"3-3-表格样式\"><a href=\"#3-3-表格样式\" class=\"headerlink\" title=\"3.3 表格样式\"></a>3.3 表格样式</h3><p>目前提供了3中样式，修改 <code>_config.yml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table: green_title</span><br><span class=\"line\"># table 的样式</span><br><span class=\"line\"># 为空时类似github的table样式</span><br><span class=\"line\"># green 绿色样式</span><br><span class=\"line\"># green_title 头部为青色的table样式</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-文章列表的hover样式\"><a href=\"#3-4-文章列表的hover样式\" class=\"headerlink\" title=\"3.4 文章列表的hover样式\"></a>3.4 文章列表的hover样式</h3><p>鼠标移入的背景色和文字颜色变动，设置 <code>_config.yml</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#文章列表 鼠标移上去的样式, 为空时使用默认效果</span><br><span class=\"line\">article_list:</span><br><span class=\"line\">  hover:</span><br><span class=\"line\">    background: &#39;#e2e0e0&#39;  # 背景色:提供几种：&#39;#c1bfc1&#39;  &#39;#fbf4a8&#39;</span><br><span class=\"line\">    color:     # 文字颜色 提供几种：&#39;#ffffff&#39;</span><br><span class=\"line\"># 注意：由于颜色如果包含#，使用单引号 &#39; 引起来</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-5-开启字数统计\"><a href=\"#3-5-开启字数统计\" class=\"headerlink\" title=\"3.5 开启字数统计\"></a>3.5 开启字数统计</h3><ol>\n<li>开启此功能需先安装插件，在 hexo根目录 执行 <code>npm i hexo-wordcount --save</code></li>\n<li>修改 <code>_config.yml</code></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">word_count: true</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-6-更换头像\"><a href=\"#3-6-更换头像\" class=\"headerlink\" title=\"3.6 更换头像\"></a>3.6 更换头像</h3><p>两种方式：</p>\n<ol>\n<li>替换 <code>source/img/avatar.jpg</code> 图片。</li>\n<li>修改 <code>_config.yml</code> 中头像的配置记录</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 你的头像url</span><br><span class=\"line\">avatar: &#x2F;img&#x2F;avatar.jpg</span><br><span class=\"line\">favicon: &#x2F;img&#x2F;avatar.jpg</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-7-设置链接图标\"><a href=\"#3-7-设置链接图标\" class=\"headerlink\" title=\"3.7 设置链接图标\"></a>3.7 设置链接图标</h3><blockquote>\n<p>如果需要自定义图标可以看这篇文章 <a href=\"https://yelog.org/2020/12/28/3-hexo-add-icon/\">3-hexo添加自定义图标</a></p>\n</blockquote>\n<p>如下，如果没有连接，则不展示图标。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#链接图标，链接为空则不显示</span><br><span class=\"line\">link:</span><br><span class=\"line\">  rss: &#x2F;atom.xml</span><br><span class=\"line\">  github: https:&#x2F;&#x2F;github.com&#x2F;yelog</span><br><span class=\"line\">  facebook: https:&#x2F;&#x2F;www.facebook.com&#x2F;faker.tops</span><br><span class=\"line\">  twitter:</span><br><span class=\"line\">  linkedin:</span><br><span class=\"line\">  instagram:</span><br><span class=\"line\">  reddit: https:&#x2F;&#x2F;www.reddit.com&#x2F;user&#x2F;yelog&#x2F;</span><br><span class=\"line\">  weibo: http:&#x2F;&#x2F;weibo.com&#x2F;u&#x2F;2307534817</span><br><span class=\"line\">  email: jaytp@qq.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、排序及置顶\"><a href=\"#四、排序及置顶\" class=\"headerlink\" title=\"四、排序及置顶\"></a>四、排序及置顶</h2><h3 id=\"4-1-分类排序\"><a href=\"#4-1-分类排序\" class=\"headerlink\" title=\"4.1 分类排序\"></a>4.1 分类排序</h3><p>默认按照首字母正序排序，由于中文在 <code>nodejs</code> 环境下不能按照拼音首字母排序，所以添加了自定义排序方式，在主题下 <code>_config.yml</code> 中找到如下配置，<code>category.sort</code>则是定义分类顺序的。</p>\n<p><strong>规则：</strong>在 <code>sort</code>中定义的 <code>category</code> 比 没有在 <code>sort</code> 中定义的更靠前</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章分类设置</span><br><span class=\"line\">category:</span><br><span class=\"line\">  num: true # 分类显示文章数</span><br><span class=\"line\">  sub: true # 开启多级分类</span><br><span class=\"line\">  sort:</span><br><span class=\"line\">    - 读书</span><br><span class=\"line\">    - 大前端</span><br><span class=\"line\">    - 后端</span><br><span class=\"line\">    - 数据库</span><br><span class=\"line\">    - 工具</span><br><span class=\"line\">    - 运维</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-文章排序\"><a href=\"#4-2-文章排序\" class=\"headerlink\" title=\"4.2 文章排序\"></a>4.2 文章排序</h3><blockquote>\n<p>2020-05-20 更新：无需安装插件或修改源码，主题以内置排序算法</p>\n</blockquote>\n<p>文章列表默认按照创建时间（如下文章内定义的<code>date</code>）倒序。</p>\n<p>使用 <code>top</code> 将会置顶文章，多个置顶文章时，<code>top</code> 定义的值越大，越靠前。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 每天一个linux命令</span><br><span class=\"line\">date: 2017-01-23 11:41:48</span><br><span class=\"line\">top: 1</span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 运维</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- linux命令</span><br><span class=\"line\">---yml复制代码</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、关于写文章\"><a href=\"#五、关于写文章\" class=\"headerlink\" title=\"五、关于写文章\"></a>五、关于写文章</h2><h3 id=\"5-1-如何写\"><a href=\"#5-1-如何写\" class=\"headerlink\" title=\"5.1 如何写\"></a>5.1 如何写</h3><p>每篇文章最好写上文集和标签，方便筛选和查看。<br>一般推荐一篇文章设置一个文集，一个或多个标签<br><code>categories</code>:文集，为左侧列表<br><code>tags</code>:标签，通过#来筛选<br>例如 本篇文章的设置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 3-hexo使用说明</span><br><span class=\"line\">date: 2017-03-23 15:13:47</span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 工具</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- hexo</span><br><span class=\"line\">- 3-hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-写作\"><a href=\"#5-2-写作\" class=\"headerlink\" title=\"5.2 写作\"></a>5.2 写作</h3><p>1.设置模板，blog根目录 <code>scaffolds/post.md</code><br>加入categories,tags等，这样以后通过 <code>hexo new</code> 生成的模板就不用写这两个单词了。<br>当然，你也可以写入任何你每个文章中都会有的部分。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"六、技巧\"><a href=\"#六、技巧\" class=\"headerlink\" title=\"六、技巧\"></a>六、技巧</h2><h3 id=\"6-1-快捷命令\"><a href=\"#6-1-快捷命令\" class=\"headerlink\" title=\"6.1 快捷命令\"></a>6.1 快捷命令</h3><p>其实就通过alias，触发一些命令的集合<br>在 <code>~/.bashrc</code> 文件中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias hs&#x3D;&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#39;  #启动本地服务</span><br><span class=\"line\">alias hd&#x3D;&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&#39;  #部署博客bash复制代码</span><br></pre></td></tr></table></figure>\n\n<p>甚至你也可以加入备份文章的命令，可以自由发挥。</p>\n<h3 id=\"6-3-博客备份（快捷命令升级版）\"><a href=\"#6-3-博客备份（快捷命令升级版）\" class=\"headerlink\" title=\"6.3 博客备份（快捷命令升级版）\"></a>6.3 博客备份（快捷命令升级版）</h3><p>为了保证我们写的文章不丢失、快速迁移博客，都需要备份我们的blog。</p>\n<ol>\n<li><p>博客根目录，执行 <code>git init</code> 创建 git 仓库。</p>\n</li>\n<li><p>在 github（或其他托管平台、自建远程仓库等） 创建仓库并和本地仓库建立联系。</p>\n</li>\n<li><p>在~/.bashrc文件中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias hs&#x3D;&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&#39;</span><br><span class=\"line\">alias hd&#x3D;&#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add . &amp;&amp; git commit -m &quot;update&quot; &amp;&amp; git push -f&#39;bash复制代码</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>这样，我们在执行 <code>hd</code> 进行部署时，就一同将博客进行备份了</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cklt3r3cv00008cw4buel9kzw","category_id":"cklv4fxeq000094w4ffxp7o3t","_id":"cklv4fxf1000394w4dycs8t55"},{"post_id":"cklt3r3dg000e8cw49y8l9x5n","category_id":"cklv4fxf1000294w4hk3iacor","_id":"cklv4fxf5000594w44c3d3ur8"},{"post_id":"cklt3r3d300018cw498nc7h0t","category_id":"cklv4fxf1000294w4hk3iacor","_id":"cklv4fxf6000794w4baayapn8"},{"post_id":"cklt3r3d900048cw489zi3ae4","category_id":"cklv4fxf3000494w455bza63f","_id":"cklv4fxf8000994w43pmjf8as"},{"post_id":"cklt3r3dp000q8cw4dy6nf1x7","category_id":"cklv4fxf1000294w4hk3iacor","_id":"cklv4fxf9000b94w4an843uc9"},{"post_id":"cklt3r3dn000n8cw46rot56gu","category_id":"cklv4fxf1000294w4hk3iacor","_id":"cklv4fxf9000c94w42go87z9y"},{"post_id":"cklt3r3dc00068cw480t195rj","category_id":"cklv4fxf1000294w4hk3iacor","_id":"cklv4fxfa000e94w4c538bx35"},{"post_id":"cklt3r3dd00088cw42lwcgia5","category_id":"cklv4fxeq000094w4ffxp7o3t","_id":"cklv4fxfb000g94w4br830l0s"},{"post_id":"cklt3r3dd00088cw42lwcgia5","category_id":"cklv4fxf7000894w43hf81kl7","_id":"cklv4fxfc000i94w43f5r4tqk"},{"post_id":"cklt3r3d600038cw426mgf7xd","category_id":"cklv4fxeq000094w4ffxp7o3t","_id":"cklv4fxfd000k94w4a1d43yst"},{"post_id":"cklt3r3d600038cw426mgf7xd","category_id":"cklv4fxf7000894w43hf81kl7","_id":"cklv4fxfd000l94w48ps952ew"},{"post_id":"cklt3r3de00098cw43ko2fs50","category_id":"cklv4fxeq000094w4ffxp7o3t","_id":"cklv4fxfe000n94w4eg4zdddo"},{"post_id":"cklt3r3de00098cw43ko2fs50","category_id":"cklv4fxf7000894w43hf81kl7","_id":"cklv4fxfe000o94w49l8vhvpq"},{"post_id":"cklt3r3dl000k8cw4c613ac2k","category_id":"cklv4fxf3000494w455bza63f","_id":"cklv4fxfg000r94w496agdim7"},{"post_id":"cklt3r3dj000g8cw402szh4i5","category_id":"cklv4fxeq000094w4ffxp7o3t","_id":"cklv4fxfh000s94w4ff8i7ye5"},{"post_id":"cklt3r3dj000g8cw402szh4i5","category_id":"cklv4fxf7000894w43hf81kl7","_id":"cklv4fxfh000t94w4067q7n1l"},{"post_id":"cklt3r3dt000x8cw4ehep8g7s","category_id":"cklv4fxfc000j94w4b2wm7fch","_id":"cklv4fxfi000u94w4aydk8vyl"},{"post_id":"cklt3r3dt000x8cw4ehep8g7s","category_id":"cklv4fxfe000p94w4c58gd37h","_id":"cklv4fxfi000v94w43n3ye1dx"},{"post_id":"cklt3r3ds000s8cw453ns10yp","category_id":"cklv4fxfc000j94w4b2wm7fch","_id":"cklv4fxfi000w94w43r991r90"},{"post_id":"cklt3r3ds000s8cw453ns10yp","category_id":"cklv4fxfe000p94w4c58gd37h","_id":"cklv4fxfi000x94w4fugucv8b"}],"PostTag":[{"post_id":"cklt3r3dd00088cw42lwcgia5","tag_id":"cklt3r3db00058cw47vqrfzl1","_id":"cklt3r3dg000d8cw4d8q93lxy"},{"post_id":"cklt3r3d600038cw426mgf7xd","tag_id":"cklt3r3db00058cw47vqrfzl1","_id":"cklt3r3di000f8cw4hxie4lgh"},{"post_id":"cklt3r3de00098cw43ko2fs50","tag_id":"cklt3r3db00058cw47vqrfzl1","_id":"cklt3r3dl000j8cw4ehg68ycm"},{"post_id":"cklt3r3d900048cw489zi3ae4","tag_id":"cklt3r3df000a8cw45kbift91","_id":"cklt3r3dn000m8cw448rj5d17"},{"post_id":"cklt3r3dj000g8cw402szh4i5","tag_id":"cklt3r3dm000l8cw4eget7fbc","_id":"cklt3r3dt000v8cw402jf0lcz"},{"post_id":"cklt3r3dl000k8cw4c613ac2k","tag_id":"cklt3r3ds000t8cw48rac98l9","_id":"cklt3r3dw00118cw45ea6aste"},{"post_id":"cklt3r3d300018cw498nc7h0t","tag_id":"cklv3ilez0001j4w4hyuw16mx","_id":"cklv3ilf30003j4w45qbc8de4"},{"post_id":"cklt3r3dg000e8cw49y8l9x5n","tag_id":"cklv3ilf80007j4w4f55xg7q6","_id":"cklv3ilfa000cj4w4dopqabd1"}],"Tag":[{"name":"python","_id":"cklt3r3db00058cw47vqrfzl1"},{"name":"user-agent","_id":"cklt3r3df000a8cw45kbift91"},{"name":"python codingbat","_id":"cklt3r3dm000l8cw4eget7fbc"},{"name":"soft keys 激活密钥 序列号 激活码","_id":"cklt3r3ds000t8cw48rac98l9"},{"name":"人生与哲学","_id":"cklv3ilez0001j4w4hyuw16mx"},{"name":"新冠肺炎","_id":"cklv3ilf80007j4w4f55xg7q6"}]}}